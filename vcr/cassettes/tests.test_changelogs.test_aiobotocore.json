{"http_interactions": [{"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://pypi.python.org/pypi/aiobotocore/json"}, "response": {"body": {"encoding": "UTF-8", "string": "{\n    \"info\": {\n        \"maintainer\": \"\", \n        \"docs_url\": null, \n        \"requires_python\": \"\", \n        \"maintainer_email\": \"\", \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": \"\", \n        \"package_url\": \"http://pypi.python.org/pypi/aiobotocore\", \n        \"author\": \"Nikolay Novik\", \n        \"author_email\": \"nickolainovik@gmail.com\", \n        \"download_url\": \"https://pypi.python.org/pypi/aiobotocore\", \n        \"platform\": \"UNKNOWN\", \n        \"version\": \"0.3.1\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"aiobotocore\\n===========\\n.. image:: https://travis-ci.org/aio-libs/aiobotocore.svg?branch=master\\n    :target: https://travis-ci.org/aio-libs/aiobotocore\\n.. image:: https://codecov.io/gh/aio-libs/aiobotocore/branch/master/graph/badge.svg\\n    :target: https://codecov.io/gh/aio-libs/aiobotocore\\n.. image:: https://img.shields.io/pypi/v/aiobotocore.svg\\n    :target: https://pypi.python.org/pypi/aiobotocore\\n\\nAsync client for amazon services using botocore_ and aiohttp_/asyncio_.\\n\\nMain purpose of this library to support amazon s3 api, but other services\\nshould work (may be with minor fixes). For now we have tested\\nonly upload/download api for s3, other users report that SQS and Dynamo\\nservices work also. More tests coming soon.\\n\\n\\nInstall\\n-------\\n::\\n\\n    $ pip install aiobotocore\\n\\n\\nBasic Example\\n-------------\\n\\n.. code:: python\\n\\n    import asyncio\\n    import aiobotocore\\n\\n    AWS_ACCESS_KEY_ID = \\\"xxx\\\"\\n    AWS_SECRET_ACCESS_KEY = \\\"xxx\\\"\\n\\n\\n    async def go(loop):\\n        bucket = 'dataintake'\\n        filename = 'dummy.bin'\\n        folder = 'aiobotocore'\\n        key = '{}/{}'.format(folder, filename)\\n\\n        session = aiobotocore.get_session(loop=loop)\\n        async with session.create_client('s3', region_name='us-west-2',\\n                                       aws_secret_access_key=AWS_SECRET_ACCESS_KEY,\\n                                       aws_access_key_id=AWS_ACCESS_KEY_ID) as client:\\n            # upload object to amazon s3\\n            data = b'\\\\x01'*1024\\n            resp = await client.put_object(Bucket=bucket,\\n                                                Key=key,\\n                                                Body=data)\\n            print(resp)\\n\\n            # getting s3 object properties of file we just uploaded\\n            resp = await client.get_object_acl(Bucket=bucket, Key=key)\\n            print(resp)\\n\\n            # delete object from s3\\n            resp = await client.delete_object(Bucket=bucket, Key=key)\\n            print(resp)\\n\\n            # list s3 objects using paginator\\n            paginator = client.get_paginator('list_objects')\\n            async for result in paginator.paginate(Bucket=bucket, Prefix=folder):\\n                for c in result.get('Contents', []):\\n                    print(c)\\n\\n            # get object from s3\\n            response = await client.get_object(Bucket=bucket, key=key)\\n            # this will ensure the connection is correctly re-used/closed\\n            async with response['Body'] as stream:\\n                data = await stream.read()\\n\\n    loop = asyncio.get_event_loop()\\n    loop.run_until_complete(go(loop))\\n\\n\\nRun Tests\\n---------\\n\\nMake sure you have development requirements installed and your amazon key and\\nsecret accessible via environment variables:\\n\\n::\\n\\n    $ cd aiobotocore\\n    $ export AWS_ACCESS_KEY_ID=xxx\\n    $ export AWS_SECRET_ACCESS_KEY=xxx\\n    $ pip install -Ur requirements-dev.txt\\n\\nExecute tests suite:\\n\\n::\\n\\n    $ py.test -v tests\\n\\n\\nMailing List\\n------------\\n\\nhttps://groups.google.com/forum/#!forum/aio-libs\\n\\n\\nRequirements\\n------------\\n* Python_ 3.4+\\n* aiohttp_\\n* botocore_\\n\\n.. _Python: https://www.python.org\\n.. _asyncio: http://docs.python.org/3.4/library/asyncio.html\\n.. _botocore: https://github.com/boto/botocore\\n.. _aiohttp: https://github.com/KeepSafe/aiohttp\\n\\nChanges\\n-------\\n0.3.1 (2017-04-18)\\n^^^^^^^^^^^^^^^^^^\\n* Fixed Waiter support\\n\\n0.3.0 (2017-04-01)\\n^^^^^^^^^^^^^^^^^^\\n* Added support for aiohttp>=2.0.4 (thanks @achimnol)\\n* update botocore requirement to: botocore>=1.5.0, <=1.5.33\\n\\n0.2.3 (2017-03-22)\\n^^^^^^^^^^^^^^^^^^\\n* update botocore requirement to: botocore>=1.5.0, <1.5.29\\n\\n0.2.2 (2017-03-07)\\n^^^^^^^^^^^^^^^^^^\\n* set aiobotocore.__all__ for * imports #121 (thanks @graingert)\\n* fix ETag in head_object response #132\\n\\n0.2.1 (2017-02-01)\\n^^^^^^^^^^^^^^^^^^\\n* Normalize headers and handle redirection by botocore #115 (thanks @Fedorof)\\n\\n0.2.0 (2017-01-30)\\n^^^^^^^^^^^^^^^^^^\\n* add support for proxies (thanks @jjonek)\\n* remove AioConfig verify_ssl connector_arg as this is handled by the\\n  create_client verify param\\n* remove AioConfig limit connector_arg as this is now handled by\\n  by the Config `max_pool_connections` property (note default is 10)\\n\\n0.1.1 (2017-01-16)\\n^^^^^^^^^^^^^^^^^^\\n* botocore updated to version 1.5.0\\n\\n0.1.0 (2017-01-12)\\n^^^^^^^^^^^^^^^^^^\\n* Pass timeout to aiohttp.request to enforce read_timeout #86 (thanks @vharitonsky)\\n  (bumped up to next semantic version due to read_timeout enabling change)\\n\\n0.0.6 (2016-11-19)\\n^^^^^^^^^^^^^^^^^^\\n\\n* Added enforcement of plain response #57 (thanks @rymir)\\n* botocore updated to version 1.4.73 #74 (thanks @vas3k)\\n\\n\\n0.0.5 (2016-06-01)\\n^^^^^^^^^^^^^^^^^^\\n\\n* Initial alpha release\", \n        \"release_url\": \"http://pypi.python.org/pypi/aiobotocore/0.3.1\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 9, \n        \"requires_dist\": [\n            \"multidict (>=2.1.4)\", \n            \"botocore (>=1.5.0,<=1.5.38)\", \n            \"aiohttp (>=2.0.4)\"\n        ], \n        \"classifiers\": [\n            \"Development Status :: 3 - Alpha\", \n            \"Environment :: Web Environment\", \n            \"Intended Audience :: Developers\", \n            \"Intended Audience :: System Administrators\", \n            \"Programming Language :: Python :: 3\", \n            \"Programming Language :: Python :: 3.4\", \n            \"Programming Language :: Python :: 3.5\"\n        ], \n        \"bugtrack_url\": null, \n        \"name\": \"aiobotocore\", \n        \"license\": \"Apache 2\", \n        \"summary\": \"Async client for aws services using botocore and aiohttp\", \n        \"home_page\": \"https://github.com/aio-libs/aiobotocore\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"0.0.5\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-07-01T20:59:19\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/dc/9d/b32e9e865da0d69c058d5527606acb4f52307a8568be889a9ddfe8b94d34/aiobotocore-0.0.5.tar.gz\", \n                \"md5_digest\": \"8f09e045d250d6059f042fe54e7bd34b\", \n                \"downloads\": 1942, \n                \"filename\": \"aiobotocore-0.0.5.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"dc/9d/b32e9e865da0d69c058d5527606acb4f52307a8568be889a9ddfe8b94d34/aiobotocore-0.0.5.tar.gz\", \n                \"size\": 20417\n            }\n        ], \n        \"0.0.6\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-11-19T12:00:34\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/b9/c5/10edbf2a36e061ae0ea5c6db9270069e4d32e35aa0ca46e8be215f7302ba/aiobotocore-0.0.6.tar.gz\", \n                \"md5_digest\": \"bfad16c17bf895c56491f4a4f780a89a\", \n                \"downloads\": 551, \n                \"filename\": \"aiobotocore-0.0.6.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"b9/c5/10edbf2a36e061ae0ea5c6db9270069e4d32e35aa0ca46e8be215f7302ba/aiobotocore-0.0.6.tar.gz\", \n                \"size\": 32017\n            }\n        ], \n        \"0.0.2\": [], \n        \"0.3.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-04-01T18:23:37\", \n                \"comment_text\": \"\", \n                \"python_version\": \"py3\", \n                \"url\": \"https://pypi.python.org/packages/03/a2/05941f8d2b53c1f26b64121e328bf9e2ed143a2099006320796ce67f88e7/aiobotocore-0.3.0-py3-none-any.whl\", \n                \"md5_digest\": \"f569c0e37f2d58bd27cb5fa68015370b\", \n                \"downloads\": 148, \n                \"filename\": \"aiobotocore-0.3.0-py3-none-any.whl\", \n                \"packagetype\": \"bdist_wheel\", \n                \"path\": \"03/a2/05941f8d2b53c1f26b64121e328bf9e2ed143a2099006320796ce67f88e7/aiobotocore-0.3.0-py3-none-any.whl\", \n                \"size\": 17088\n            }, \n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-04-01T18:23:39\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/25/a4/9e0cb1effb558d88d5b3f6fd8d36232e03509b1ea2efb4b8eaea41cd1f1c/aiobotocore-0.3.0.tar.gz\", \n                \"md5_digest\": \"b14b1bef1a1bbd6ea3a9b4f82b7a3171\", \n                \"downloads\": 31, \n                \"filename\": \"aiobotocore-0.3.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"25/a4/9e0cb1effb558d88d5b3f6fd8d36232e03509b1ea2efb4b8eaea41cd1f1c/aiobotocore-0.3.0.tar.gz\", \n                \"size\": 16953\n            }\n        ], \n        \"0.3.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-04-18T09:18:07\", \n                \"comment_text\": \"\", \n                \"python_version\": \"py3\", \n                \"url\": \"https://pypi.python.org/packages/c8/99/95be6dd4cf3e56d54fe25d68e54b0cbb3e5245ddfd90b99f7760f6ad0df8/aiobotocore-0.3.1-py3-none-any.whl\", \n                \"md5_digest\": \"66856aa280bbbe59d9b7b810633cc442\", \n                \"downloads\": 0, \n                \"filename\": \"aiobotocore-0.3.1-py3-none-any.whl\", \n                \"packagetype\": \"bdist_wheel\", \n                \"path\": \"c8/99/95be6dd4cf3e56d54fe25d68e54b0cbb3e5245ddfd90b99f7760f6ad0df8/aiobotocore-0.3.1-py3-none-any.whl\", \n                \"size\": 18736\n            }, \n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-04-18T09:18:09\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/74/96/cb001bdfa9b478db15e711ec0bbfb01cc85646c089a4b7f039ef0ef35b98/aiobotocore-0.3.1.tar.gz\", \n                \"md5_digest\": \"b8197ed7c7c50bf1fcdf83fee8018d9f\", \n                \"downloads\": 0, \n                \"filename\": \"aiobotocore-0.3.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"74/96/cb001bdfa9b478db15e711ec0bbfb01cc85646c089a4b7f039ef0ef35b98/aiobotocore-0.3.1.tar.gz\", \n                \"size\": 18106\n            }\n        ], \n        \"0.2.3\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-03-23T00:49:36\", \n                \"comment_text\": \"\", \n                \"python_version\": \"py3\", \n                \"url\": \"https://pypi.python.org/packages/5f/7e/bb898f9c6ea1441c64909be76a182180448a0ce4c9cb0cb258b423da435b/aiobotocore-0.2.3-py3-none-any.whl\", \n                \"md5_digest\": \"2fb56bc94ebaf42d93a46d990ef5a0a2\", \n                \"downloads\": 126, \n                \"filename\": \"aiobotocore-0.2.3-py3-none-any.whl\", \n                \"packagetype\": \"bdist_wheel\", \n                \"path\": \"5f/7e/bb898f9c6ea1441c64909be76a182180448a0ce4c9cb0cb258b423da435b/aiobotocore-0.2.3-py3-none-any.whl\", \n                \"size\": 17151\n            }, \n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-03-23T00:49:38\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/19/ca/b3112c726a046ed46b91e9e85c217f84b5bfb7a6d15c536b09f43250b0b5/aiobotocore-0.2.3.tar.gz\", \n                \"md5_digest\": \"a7008f3a76f1f217ab4a2592b7431df8\", \n                \"downloads\": 27, \n                \"filename\": \"aiobotocore-0.2.3.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"19/ca/b3112c726a046ed46b91e9e85c217f84b5bfb7a6d15c536b09f43250b0b5/aiobotocore-0.2.3.tar.gz\", \n                \"size\": 16999\n            }\n        ], \n        \"0.2.2\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-03-07T22:06:34\", \n                \"comment_text\": \"\", \n                \"python_version\": \"py3\", \n                \"url\": \"https://pypi.python.org/packages/75/d1/5ddae8ec6baebbdcd9b1e5233b59374cff51cbf444a74f26d7ad1c22d1ed/aiobotocore-0.2.2-py3-none-any.whl\", \n                \"md5_digest\": \"fd9c07f3bc1e8b91fa14f8273d96e704\", \n                \"downloads\": 93, \n                \"filename\": \"aiobotocore-0.2.2-py3-none-any.whl\", \n                \"packagetype\": \"bdist_wheel\", \n                \"path\": \"75/d1/5ddae8ec6baebbdcd9b1e5233b59374cff51cbf444a74f26d7ad1c22d1ed/aiobotocore-0.2.2-py3-none-any.whl\", \n                \"size\": 17081\n            }, \n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-03-07T22:06:36\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/8a/a8/aac6b4dafe090e59d8ff3fb3fb9e380caa5e8f88706ea4a9db531feb7bd8/aiobotocore-0.2.2.tar.gz\", \n                \"md5_digest\": \"2611f9343b2033e3697c042f78672052\", \n                \"downloads\": 32, \n                \"filename\": \"aiobotocore-0.2.2.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"8a/a8/aac6b4dafe090e59d8ff3fb3fb9e380caa5e8f88706ea4a9db531feb7bd8/aiobotocore-0.2.2.tar.gz\", \n                \"size\": 16947\n            }\n        ], \n        \"0.2.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-02-22T21:21:17\", \n                \"comment_text\": \"\", \n                \"python_version\": \"3.5\", \n                \"url\": \"https://pypi.python.org/packages/e4/c1/a792f613c33fc1622668968bc51069b6d83664546f6bc6bf2dbbcdda87da/aiobotocore-0.2.1-py3-none-any.whl\", \n                \"md5_digest\": \"f93f781325318f0ab1f63c3ad50b1806\", \n                \"downloads\": 157, \n                \"filename\": \"aiobotocore-0.2.1-py3-none-any.whl\", \n                \"packagetype\": \"bdist_wheel\", \n                \"path\": \"e4/c1/a792f613c33fc1622668968bc51069b6d83664546f6bc6bf2dbbcdda87da/aiobotocore-0.2.1-py3-none-any.whl\", \n                \"size\": 17338\n            }, \n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-02-01T19:21:42\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/44/81/82be17b612c7ca4a735a95c40afff8960ecb0d0306a65c1d8eae7b0d49ad/aiobotocore-0.2.1.tar.gz\", \n                \"md5_digest\": \"56a4ea959852a15486f4740589030642\", \n                \"downloads\": 28, \n                \"filename\": \"aiobotocore-0.2.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"44/81/82be17b612c7ca4a735a95c40afff8960ecb0d0306a65c1d8eae7b0d49ad/aiobotocore-0.2.1.tar.gz\", \n                \"size\": 16290\n            }\n        ], \n        \"0.2.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-01-30T22:54:07\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/ce/0e/4f4181c60c46558bed5ff17c6dee7fb2f94ae79e9579b1fe5ab3aaac5dcf/aiobotocore-0.2.0.tar.gz\", \n                \"md5_digest\": \"15cfbdde7f7ec8b52bfcfe14c3c26894\", \n                \"downloads\": 18, \n                \"filename\": \"aiobotocore-0.2.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"ce/0e/4f4181c60c46558bed5ff17c6dee7fb2f94ae79e9579b1fe5ab3aaac5dcf/aiobotocore-0.2.0.tar.gz\", \n                \"size\": 16132\n            }\n        ], \n        \"0.1.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-01-18T22:39:38\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/97/2a/cefc859944cbb7e19fd8721c9db9e44a4a0c84dc0ba218af8313bd099e81/aiobotocore-0.1.1.tar.gz\", \n                \"md5_digest\": \"a185e830552f3bf02f93b8f7b0293591\", \n                \"downloads\": 19, \n                \"filename\": \"aiobotocore-0.1.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"97/2a/cefc859944cbb7e19fd8721c9db9e44a4a0c84dc0ba218af8313bd099e81/aiobotocore-0.1.1.tar.gz\", \n                \"size\": 15562\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2017-04-18T09:18:07\", \n            \"comment_text\": \"\", \n            \"python_version\": \"py3\", \n            \"url\": \"https://pypi.python.org/packages/c8/99/95be6dd4cf3e56d54fe25d68e54b0cbb3e5245ddfd90b99f7760f6ad0df8/aiobotocore-0.3.1-py3-none-any.whl\", \n            \"md5_digest\": \"66856aa280bbbe59d9b7b810633cc442\", \n            \"downloads\": 0, \n            \"filename\": \"aiobotocore-0.3.1-py3-none-any.whl\", \n            \"packagetype\": \"bdist_wheel\", \n            \"path\": \"c8/99/95be6dd4cf3e56d54fe25d68e54b0cbb3e5245ddfd90b99f7760f6ad0df8/aiobotocore-0.3.1-py3-none-any.whl\", \n            \"size\": 18736\n        }, \n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2017-04-18T09:18:09\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/74/96/cb001bdfa9b478db15e711ec0bbfb01cc85646c089a4b7f039ef0ef35b98/aiobotocore-0.3.1.tar.gz\", \n            \"md5_digest\": \"b8197ed7c7c50bf1fcdf83fee8018d9f\", \n            \"downloads\": 0, \n            \"filename\": \"aiobotocore-0.3.1.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"74/96/cb001bdfa9b478db15e711ec0bbfb01cc85646c089a4b7f039ef0ef35b98/aiobotocore-0.3.1.tar.gz\", \n            \"size\": 18106\n        }\n    ]\n}"}, "headers": {"Server": ["nginx/1.10.3"], "Content-Type": ["application/json; charset=\"UTF-8\""], "Content-Disposition": ["inline"], "X-PYPI-LAST-SERIAL": ["2861436"], "Cache-Control": ["max-age=600, public"], "Access-Control-Allow-Origin": ["*"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Via": ["1.1 varnish", "1.1 varnish"], "Fastly-Debug-Digest": ["17d8ca5d236401cab2163c11e496678ec1d1cde3fb8413f5e4ccf799fe1cf398"], "Content-Length": ["18159"], "Accept-Ranges": ["bytes"], "Date": ["Tue, 09 May 2017 15:45:24 GMT"], "Age": ["14661"], "Connection": ["keep-alive"], "X-Served-By": ["cache-iad2145-IAD, cache-hhn1525-HHN"], "X-Cache": ["HIT, MISS"], "X-Cache-Hits": ["1, 0"], "X-Timer": ["S1494344725.801236,VS0,VE89"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Content-Type-Options": ["nosniff"], "X-Permitted-Cross-Domain-Policies": ["none"]}, "status": {"code": 200, "message": "OK"}, "url": "https://pypi.python.org/pypi/aiobotocore/json"}, "recorded_at": "2017-05-09T15:45:24"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://github.com/aio-libs/aiobotocore"}, "response": {"body": {"encoding": "utf-8", "base64_string": ""}, "headers": {"Server": ["GitHub.com"], "Date": ["Tue, 09 May 2017 15:45:25 GMT"], "Content-Type": ["text/html; charset=utf-8"], "Transfer-Encoding": ["chunked"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Vary": ["X-PJAX", "Accept-Encoding"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Set-Cookie": ["logged_in=no; domain=.github.com; path=/; expires=Sat, 09 May 2037 15:45:25 -0000; secure; HttpOnly", "_gh_sess=eyJzZXNzaW9uX2lkIjoiZGJmMDY0NGMyMzJiYjU0NDI5YmFiMzJjYmNjYzk1NTIiLCJzcHlfcmVwbyI6ImFpby1saWJzL2Fpb2JvdG9jb3JlIiwic3B5X3JlcG9fYXQiOjE0OTQzNDQ3MjUsIl9jc3JmX3Rva2VuIjoiTWl5VTljMzdPR1hUYTdMbXNuNkVmNEhNb0l0WVBDem9qUkhqSEdVa1JGMD0iLCJmbGFzaCI6eyJkaXNjYXJkIjpbImFuYWx5dGljc19sb2NhdGlvbiJdLCJmbGFzaGVzIjp7ImFuYWx5dGljc19sb2NhdGlvbiI6Ii88dXNlci1uYW1lPi88cmVwby1uYW1lPiJ9fX0%3D--08137b94eea207a7bb14a18bf3771314cc1a0b29; path=/; secure; HttpOnly"], "X-Request-Id": ["2528c5858d74c3e7bc09489a8c587a12"], "X-Runtime": ["0.399144"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Served-By": ["7d2a2d05162492046d9960cdbc326796"], "Content-Encoding": ["gzip"], "X-GitHub-Request-Id": ["D281:35A5:6061DD8:8F70A93:5911E415"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/aio-libs/aiobotocore"}, "recorded_at": "2017-05-09T15:45:25"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "Cookie": ["logged_in=no; _gh_sess=eyJzZXNzaW9uX2lkIjoiZGJmMDY0NGMyMzJiYjU0NDI5YmFiMzJjYmNjYzk1NTIiLCJzcHlfcmVwbyI6ImFpby1saWJzL2Fpb2JvdG9jb3JlIiwic3B5X3JlcG9fYXQiOjE0OTQzNDQ3MjUsIl9jc3JmX3Rva2VuIjoiTWl5VTljMzdPR1hUYTdMbXNuNkVmNEhNb0l0WVBDem9qUkhqSEdVa1JGMD0iLCJmbGFzaCI6eyJkaXNjYXJkIjpbImFuYWx5dGljc19sb2NhdGlvbiJdLCJmbGFzaGVzIjp7ImFuYWx5dGljc19sb2NhdGlvbiI6Ii88dXNlci1uYW1lPi88cmVwby1uYW1lPiJ9fX0%3D--08137b94eea207a7bb14a18bf3771314cc1a0b29"]}, "method": "GET", "uri": "https://github.com/KeepSafe/aiohttp"}, "response": {"body": {"encoding": "utf-8", "string": "<html><body>You are being <a href=\"https://github.com/aio-libs/aiohttp\">redirected</a>.</body></html>"}, "headers": {"Server": ["GitHub.com"], "Date": ["Tue, 09 May 2017 15:45:26 GMT"], "Content-Type": ["text/html; charset=utf-8"], "Transfer-Encoding": ["chunked"], "Status": ["301 Moved Permanently"], "Cache-Control": ["no-cache"], "Vary": ["X-PJAX", "Accept-Encoding"], "Location": ["https://github.com/aio-libs/aiohttp"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Set-Cookie": ["_gh_sess=eyJzZXNzaW9uX2lkIjoiZGJmMDY0NGMyMzJiYjU0NDI5YmFiMzJjYmNjYzk1NTIiLCJfY3NyZl90b2tlbiI6Ik1peVU5YzM3T0dYVGE3TG1zbjZFZjRITW9JdFlQQ3pvalJIakhHVWtSRjA9In0%3D--3f49cc6acfbe69055355ad45927876863650ab46; path=/; secure; HttpOnly"], "X-Request-Id": ["2ef41b47c201ab1217cfb56ff7ce82c8"], "X-Runtime": ["0.018060"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Served-By": ["50f1f26dee0de4fe7bd3917b0eeb211c"], "X-GitHub-Request-Id": ["D281:35A5:6061E6F:8F70B3A:5911E415"]}, "status": {"code": 301, "message": "Moved Permanently"}, "url": "https://github.com/KeepSafe/aiohttp"}, "recorded_at": "2017-05-09T15:45:26"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "Cookie": ["logged_in=no; _gh_sess=eyJzZXNzaW9uX2lkIjoiZGJmMDY0NGMyMzJiYjU0NDI5YmFiMzJjYmNjYzk1NTIiLCJfY3NyZl90b2tlbiI6Ik1peVU5YzM3T0dYVGE3TG1zbjZFZjRITW9JdFlQQ3pvalJIakhHVWtSRjA9In0%3D--3f49cc6acfbe69055355ad45927876863650ab46"]}, "method": "GET", "uri": "https://github.com/aio-libs/aiohttp"}, "response": {"body": {"encoding": "utf-8", "base64_string": ""}, "headers": {"Server": ["GitHub.com"], "Date": ["Tue, 09 May 2017 15:45:29 GMT"], "Content-Type": ["text/html; charset=utf-8"], "Transfer-Encoding": ["chunked"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Vary": ["X-PJAX", "Accept-Encoding"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Set-Cookie": ["_gh_sess=eyJzZXNzaW9uX2lkIjoiZGJmMDY0NGMyMzJiYjU0NDI5YmFiMzJjYmNjYzk1NTIiLCJfY3NyZl90b2tlbiI6Ik1peVU5YzM3T0dYVGE3TG1zbjZFZjRITW9JdFlQQ3pvalJIakhHVWtSRjA9Iiwic3B5X3JlcG8iOiJhaW8tbGlicy9haW9odHRwIiwic3B5X3JlcG9fYXQiOjE0OTQzNDQ3MjksImZsYXNoIjp7ImRpc2NhcmQiOlsiYW5hbHl0aWNzX2xvY2F0aW9uIl0sImZsYXNoZXMiOnsiYW5hbHl0aWNzX2xvY2F0aW9uIjoiLzx1c2VyLW5hbWU%2BLzxyZXBvLW5hbWU%2BIn19fQ%3D%3D--44a908580863edee6aee8169c4cc2388fb79a2d0; path=/; secure; HttpOnly"], "X-Request-Id": ["09b3a4e6dec0fed6b5b7bf42d9cac02d"], "X-Runtime": ["0.575475"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Served-By": ["b9c2a2d2339d471239b174dbbc6d8be2"], "Content-Encoding": ["gzip"], "X-GitHub-Request-Id": ["D281:35A5:6061E93:8F70B90:5911E416"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/aio-libs/aiohttp"}, "recorded_at": "2017-05-09T15:45:30"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "Cookie": ["logged_in=no; _gh_sess=eyJzZXNzaW9uX2lkIjoiZGJmMDY0NGMyMzJiYjU0NDI5YmFiMzJjYmNjYzk1NTIiLCJfY3NyZl90b2tlbiI6Ik1peVU5YzM3T0dYVGE3TG1zbjZFZjRITW9JdFlQQ3pvalJIakhHVWtSRjA9Iiwic3B5X3JlcG8iOiJhaW8tbGlicy9haW9odHRwIiwic3B5X3JlcG9fYXQiOjE0OTQzNDQ3MjksImZsYXNoIjp7ImRpc2NhcmQiOlsiYW5hbHl0aWNzX2xvY2F0aW9uIl0sImZsYXNoZXMiOnsiYW5hbHl0aWNzX2xvY2F0aW9uIjoiLzx1c2VyLW5hbWU%2BLzxyZXBvLW5hbWU%2BIn19fQ%3D%3D--44a908580863edee6aee8169c4cc2388fb79a2d0"]}, "method": "GET", "uri": "https://github.com/boto/botocore"}, "response": {"body": {"encoding": "utf-8", "base64_string": ""}, "headers": {"Server": ["GitHub.com"], "Date": ["Tue, 09 May 2017 15:45:31 GMT"], "Content-Type": ["text/html; charset=utf-8"], "Transfer-Encoding": ["chunked"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Vary": ["X-PJAX", "Accept-Encoding"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Set-Cookie": ["_gh_sess=eyJzZXNzaW9uX2lkIjoiZGJmMDY0NGMyMzJiYjU0NDI5YmFiMzJjYmNjYzk1NTIiLCJfY3NyZl90b2tlbiI6Ik1peVU5YzM3T0dYVGE3TG1zbjZFZjRITW9JdFlQQ3pvalJIakhHVWtSRjA9Iiwic3B5X3JlcG8iOiJib3RvL2JvdG9jb3JlIiwic3B5X3JlcG9fYXQiOjE0OTQzNDQ3MzEsImZsYXNoIjp7ImRpc2NhcmQiOlsiYW5hbHl0aWNzX2xvY2F0aW9uIl0sImZsYXNoZXMiOnsiYW5hbHl0aWNzX2xvY2F0aW9uIjoiLzx1c2VyLW5hbWU%2BLzxyZXBvLW5hbWU%2BIn19fQ%3D%3D--1cc6c5ea8dd4368c40b7d241c7c515ada69dfa9e; path=/; secure; HttpOnly"], "X-Request-Id": ["93e96ec4b7fab873364ece18685178a9"], "X-Runtime": ["0.308850"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Served-By": ["76f8aa18dab86a06db6e70a0421dc28c"], "Content-Encoding": ["gzip"], "X-GitHub-Request-Id": ["D281:35A5:60621D6:8F71046:5911E419"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/boto/botocore"}, "recorded_at": "2017-05-09T15:45:31"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://raw.githubusercontent.com/aio-libs/aiobotocore/master/CHANGES.txt"}, "response": {"body": {"encoding": "utf-8", "base64_string": "H4sIAAAAAAAAA5VUX2vbMBB/z6c4yEtSZmPZTdKOtayUFfYy9jDYnuYq1jlWK0ueJGfJPv1OdhKnEDMmDDGx7u73T3qsuN6gm0T9miRxFqcw+0Er6p755OeFNek2MpilCVtFyXXEbi5tnFzBk9yhgO9cerTg2qYx1vfVyVCdsJHqByGo+lAGpbHApam8b+7v0jiJr2HmicCrg4+8qGStjZpTVdsI7hHWxpvCWASLv1ppsUbtwZv3pw/3dyxexMk7+NC9ZFkAlsbZEVgWpekIsP8fEX7T235COkxIViMTHPpA9tgoznOuVJ53IlyBrIMiDqYsZYMIG8sl2Wl9UKGUO/j0jW9AaqiQi9ysX7DwBNU1Rjuk2izt8ZyMTMet+GJszZX8g10ztA64FkCDhQr0BbEvvDQa1vtBliljiwHeEwpjTTnvh578Z1GWjAzl4q37jTU7iW5o+fJiNL4GuiS+2SI8SPNodCk3sEUry33unILCaE3ojM253QB34CvpgJ4evgiYfYUTgMIi+ZoXSgYn+xbQcMvrSyOUrKUf767N77MJ1L0fA4fq55rv8sYYlR86kHruOXBsyMI9zLShiAkseat86MeSTjo2+MUithyR7uRBH1VBsQx8XLCoy2Tf6swFNhb2r9wRKVmjaUO6j2cwDqFH1/2FmuwpQhAoaMet05vl4NS24lZ6Yvi6n5MUs3VbN4SqbUK5xp2nxNdce1mcYIoWw8c3PVHztaKQQ9HdXJ0gSbzsWCwjRixuL7I4XSYHpN1JNSU0io7M2ZlYrAbIdl9LO/+nltfxKoPp6uwy2nKXUSh7bIsDtmQ5drhowmctveQKuGoqTnAUcoeTvw83zu+eBQAA"}, "headers": {"Content-Security-Policy": ["default-src 'none'; style-src 'unsafe-inline'"], "Strict-Transport-Security": ["max-age=31536000"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "ETag": ["\"f79a7b178144c54c0b30ee461e58595720e2bc01\""], "Content-Type": ["text/plain; charset=utf-8"], "Cache-Control": ["max-age=300"], "X-Geo-Block-List": [""], "X-GitHub-Request-Id": ["D74A:02E8:1E8BB2B:1FDF3C7:5911E41A"], "Content-Encoding": ["gzip"], "Content-Length": ["645"], "Accept-Ranges": ["bytes"], "Date": ["Tue, 09 May 2017 15:45:32 GMT"], "Via": ["1.1 varnish"], "Connection": ["keep-alive"], "X-Served-By": ["cache-hhn1527-HHN"], "X-Cache": ["MISS"], "X-Cache-Hits": ["0"], "X-Timer": ["S1494344732.108355,VS0,VE119"], "Vary": ["Authorization,Accept-Encoding"], "Access-Control-Allow-Origin": ["*"], "X-Fastly-Request-ID": ["e4488dbbb06b470c34e5645d5ce32a9547b0e183"], "Expires": ["Tue, 09 May 2017 15:50:32 GMT"], "Source-Age": ["0"]}, "status": {"code": 200, "message": "OK"}, "url": "https://raw.githubusercontent.com/aio-libs/aiobotocore/master/CHANGES.txt"}, "recorded_at": "2017-05-09T15:45:32"}], "recorded_with": "betamax/0.8.0"}