{"http_interactions": [{"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://pypi.python.org/pypi/aiogibson/json"}, "response": {"body": {"encoding": "UTF-8", "string": "{\n    \"info\": {\n        \"maintainer\": null, \n        \"docs_url\": null, \n        \"requires_python\": null, \n        \"maintainer_email\": null, \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": null, \n        \"package_url\": \"http://pypi.python.org/pypi/aiogibson\", \n        \"author\": \"Nikolay Novik\", \n        \"author_email\": \"nickolainovik@gmail.com\", \n        \"download_url\": \"UNKNOWN\", \n        \"platform\": \"POSIX\", \n        \"version\": \"0.1.3\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"aiogibson\\n=========\\n\\n.. image:: https://travis-ci.org/jettify/aiogibson.svg?branch=master\\n    :target: https://travis-ci.org/jettify/aiogibson\\n    :alt: |Build status|\\n.. image:: https://coveralls.io/repos/jettify/aiogibson/badge.png?branch=master\\n    :target: https://coveralls.io/r/jettify/aiogibson?branch=master\\n    :alt: |Coverage|\\n.. image:: https://pypip.in/v/aiogibson/badge.svg\\n    :target: https://pypi.python.org/pypi/aiogibson/\\n    :alt: |Latest PyPI version|\\n.. image:: https://pypip.in/d/aiogibson/badge.svg\\n    :target: https://pypi.python.org/pypi/aiogibson/\\n    :alt: |Number of PyPI downloads|\\n.. image:: https://pypip.in/license/aiogibson/badge.svg\\n    :target: https://pypi.python.org/pypi/aiogibson/\\n    :alt: |License|\\n\\n\\n**aiogibson** is a library for accessing a gibson_ cache database\\nfrom the asyncio_ (PEP-3156/tulip) framework.\\n\\nGibson is a high efficiency, tree based memory cache server.\\nIt uses a special trie_ structure allowing the\\nuser to perform operations on multiple key sets using a prefix\\nexpression achieving the same performance grades in the worst case,\\neven better on an average case then regular cache implementations\\nbased on hash tables.\\n\\n\\nCode heavily reused from awesome aioredis_ library. ``GibsonPool``,\\n``GibsonConnection``, almost direct copy of ``RedisPool`` and\\n``RedisConnection``, so I highly recommend to checkout aioredis_.\\n\\n\\nDocumentation\\n-------------\\nhttp://aiogibson.readthedocs.org/\\n\\n\\nInstallation\\n------------\\n\\nMake sure that you have gibson_ server compiled and running. The easiest way\\nto install *aiogibson* is by using the package on PyPi::\\n\\n   pip install aiogibson\\n\\n\\nExample\\n-------\\n\\n.. code:: python\\n\\n    import asyncio\\n    from aiogibson import create_gibson\\n\\n    loop = asyncio.get_event_loop()\\n\\n\\n    @asyncio.coroutine\\n    def go():\\n        gibson = yield from create_gibson('/tmp/gibson.sock', loop=loop)\\n        # set value\\n        yield from gibson.set(b'foo', b'bar', 7)\\n        yield from gibson.set(b'numfoo', 100, 7)\\n\\n        # get value\\n        result = yield from gibson.get(b'foo')\\n        print(result)\\n\\n        # set ttl to the value\\n        yield from gibson.ttl(b'foo', 10)\\n\\n        # increment given key\\n        yield from gibson.inc(b'numfoo')\\n\\n        # decrement given key\\n        yield from gibson.dec(b'numfoo')\\n\\n        # lock key from modification\\n        yield from gibson.lock(b'numfoo')\\n\\n        # unlock given key\\n        yield from gibson.unlock(b'numfoo')\\n\\n        # fetch keys with given prefix\\n        yield from gibson.keys(b'foo')\\n\\n        # delete value\\n        yield from gibson.delete(b'foo')\\n\\n\\n    loop.run_until_complete(go())\\n\\nUnderlying data structure trie_ allows us to perform operations on multiple\\nkey sets using a prefix expression:\\n\\n\\nMulti Commands\\n--------------\\n\\n.. code:: python\\n\\n    import asyncio\\n    from aiogibson import create_gibson\\n\\n    loop = asyncio.get_event_loop()\\n\\n\\n    @asyncio.coroutine\\n    def go():\\n        gibson = yield from create_gibson('/tmp/gibson.sock', loop=loop)\\n\\n        # set the value for keys verifying the given prefix\\n        yield from gibson.mset(b'fo', b'bar', 7)\\n        yield from gibson.mset(b'numfo', 100, 7)\\n\\n        # get the values for keys with given prefix\\n        result = yield from gibson.mget(b'fo')\\n\\n        # set the TTL for keys verifying the given prefix\\n        yield from gibson.mttl(b'fo', 10)\\n\\n        # increment by one keys verifying the given prefix.\\n        yield from gibson.minc(b'numfo')\\n\\n        # decrement by one keys verifying the given prefix\\n        yield from gibson.mdec(b'numfoo')\\n\\n        # lock keys with prefix from modification\\n        yield from gibson.mlock(b'fo')\\n\\n        # unlock keys with given prefix\\n        yield from gibson.munlock(b'fo')\\n\\n        # delete keys verifying the given prefix.\\n        yield from gibson.mdelete(b'fo')\\n\\n        # return list of keys with given prefix ``fo``\\n        yield from gibson.keys(b'fo')\\n\\n        # count items for a given prefi\\n        info = yield from gibson.stats()\\n\\n\\n    loop.run_until_complete(go())\\n\\n**aiogibson** has connection pooling support using context-manager:\\n\\n\\nConnection Pool Example\\n-----------------------\\n\\n.. code:: python\\n\\n    import asyncio\\n    from aiogibson import create_pool\\n\\n    loop = asyncio.get_event_loop()\\n\\n    @asyncio.coroutine\\n    def go():\\n        pool = yield from create_pool('/tmp/gibson.sock', minsize=5, maxsize=10,\\n                                      loop=loop)\\n        # using context manager\\n        with (yield from pool) as gibson:\\n            yield from gibson.set('foo', 'bar')\\n            value = yield from gibson.get('foo')\\n            print(value)\\n\\n        # NOTE: experimental feature\\n        # or without context manager\\n        yield from pool.set('foo', 'bar')\\n        resp = yield from pool.get('foo')\\n        yield from pool.delete('foo')\\n\\n        pool.clear()\\n\\n    loop.run_until_complete(go())\\n\\n\\nAlso you can have simple low-level interface to *gibson* server:\\n\\n\\nLow Level Commands\\n------------------\\n\\n.. code:: python\\n\\n    import asyncio\\n    from aiogibson import create_gibson\\n\\n    loop = asyncio.get_event_loop()\\n\\n\\n    @asyncio.coroutine\\n    def go():\\n        gibson = yield from create_connection('/tmp/gibson.sock', loop=loop)\\n\\n        # set value\\n        yield from gibson.execute(b'set', b'foo', b'bar', 7)\\n\\n        # get value\\n        result = yield from gibson.execute(b'get', b'foo')\\n        print(result)\\n        # delete value\\n        yield from gibson.execute(b'del', b'foo')\\n\\n\\n    loop.run_until_complete(go())\\n\\n\\nRequirements\\n------------\\n\\n* Python_ 3.3+\\n* asyncio_ or Python_ 3.4+\\n\\n\\nLicense\\n-------\\n\\nThe *aiogibson* is offered under MIT license.\\n\\n.. _Python: https://www.python.org\\n.. _asyncio: http://docs.python.org/3.4/library/asyncio.html\\n.. _gibson: http://gibson-db.in/\\n.. _aioredis: https://github.com/aio-libs/aioredis\\n.. _trie: http://en.wikipedia.org/wiki/Trie\\n\\nChanges\\n-------\\n\\n0.1.3 (2015-02-10)\\n^^^^^^^^^^^^^^^^^^\\n* Documentation published on http://aiogibson.readthedocs.org/:\\n\\n* Added wait closed finalizer;\\n\\n* Improved test coverage to 99%;\\n\\n* Fixed bug with canceled future;\\n\\n* Added limit argument to mget command;\\n\\n0.1.2 (2014-10-15)\\n^^^^^^^^^^^^^^^^^^\\n* Changed Reader interface to be similar to hiredis;\\n\\n* Most methods from high level interface now return Future;\\n\\n* Connection pool, works as drop in replacement for high level connection;\\n\\n* Added more docstrings;\\n\\n\\n0.1.1 (2014-09-06)\\n^^^^^^^^^^^^^^^^^^\\n* Improved protocol parser;\\n\\n* Added type checking in high-level commands;\\n\\n* Added check for None arguments in connection execute command;\\n\\n\\n0.1.0 (2014-08-17)\\n^^^^^^^^^^^^^^^^^^\\n* Initial release;\", \n        \"release_url\": \"http://pypi.python.org/pypi/aiogibson/0.1.3\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 3, \n        \"classifiers\": [\n            \"Development Status :: 4 - Beta\", \n            \"Environment :: Web Environment\", \n            \"Intended Audience :: Developers\", \n            \"License :: OSI Approved :: MIT License\", \n            \"Operating System :: POSIX\", \n            \"Programming Language :: Python\", \n            \"Programming Language :: Python :: 3\", \n            \"Programming Language :: Python :: 3.3\", \n            \"Programming Language :: Python :: 3.4\", \n            \"Topic :: Software Development\", \n            \"Topic :: Software Development :: Libraries\"\n        ], \n        \"name\": \"aiogibson\", \n        \"bugtrack_url\": null, \n        \"license\": \"MIT\", \n        \"summary\": \"asyncio (PEP 3156) Gibson cache support\", \n        \"home_page\": \"https://github.com/jettify/aiogibson\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"0.1.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2014-08-17T21:08:03\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/8f/5e/ec3b8c9d617842f041b5a02c0c75e1df39e8fd5f05937f50bccb7ebaf9c6/aiogibson-0.1.0.tar.gz\", \n                \"md5_digest\": \"058fbdef6ea72315f9b5b6ed994de591\", \n                \"downloads\": 1999, \n                \"filename\": \"aiogibson-0.1.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"8f/5e/ec3b8c9d617842f041b5a02c0c75e1df39e8fd5f05937f50bccb7ebaf9c6/aiogibson-0.1.0.tar.gz\", \n                \"size\": 10227\n            }\n        ], \n        \"0.1.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2014-09-06T20:31:46\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/a9/85/98e33e7c10cb21dd348c01c80b138e9a48fc4aa40a91a7c2a2ff3dabc150/aiogibson-0.1.1.tar.gz\", \n                \"md5_digest\": \"60d74a4986f8ab28c0bda2c9a8dc93e1\", \n                \"downloads\": 1658, \n                \"filename\": \"aiogibson-0.1.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"a9/85/98e33e7c10cb21dd348c01c80b138e9a48fc4aa40a91a7c2a2ff3dabc150/aiogibson-0.1.1.tar.gz\", \n                \"size\": 12542\n            }\n        ], \n        \"0.1.2\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2014-10-15T18:41:40\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/f2/69/82aaa1bd7cce20f1ed4db413d5aabfdbb6a4c7a785f9707ae79db8e10d6d/aiogibson-0.1.2.tar.gz\", \n                \"md5_digest\": \"eb906f7f08395d706fb80bf91d362e0d\", \n                \"downloads\": 1580, \n                \"filename\": \"aiogibson-0.1.2.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"f2/69/82aaa1bd7cce20f1ed4db413d5aabfdbb6a4c7a785f9707ae79db8e10d6d/aiogibson-0.1.2.tar.gz\", \n                \"size\": 13437\n            }\n        ], \n        \"0.1.3\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2015-02-10T21:27:00\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/c3/b3/e6eb82732d0051d4b104bcb9987323db399677bd52ddb85663da41593081/aiogibson-0.1.3.tar.gz\", \n                \"md5_digest\": \"9eefd7219013b29a7fc0e0bd9feea031\", \n                \"downloads\": 1450, \n                \"filename\": \"aiogibson-0.1.3.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"c3/b3/e6eb82732d0051d4b104bcb9987323db399677bd52ddb85663da41593081/aiogibson-0.1.3.tar.gz\", \n                \"size\": 14205\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2015-02-10T21:27:00\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/c3/b3/e6eb82732d0051d4b104bcb9987323db399677bd52ddb85663da41593081/aiogibson-0.1.3.tar.gz\", \n            \"md5_digest\": \"9eefd7219013b29a7fc0e0bd9feea031\", \n            \"downloads\": 1450, \n            \"filename\": \"aiogibson-0.1.3.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"c3/b3/e6eb82732d0051d4b104bcb9987323db399677bd52ddb85663da41593081/aiogibson-0.1.3.tar.gz\", \n            \"size\": 14205\n        }\n    ]\n}"}, "headers": {"Server": ["nginx/1.10.3"], "Content-Type": ["application/json; charset=\"UTF-8\""], "Content-Disposition": ["inline"], "X-PYPI-LAST-SERIAL": ["2861765"], "Cache-Control": ["max-age=600, public"], "Access-Control-Allow-Origin": ["*"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Via": ["1.1 varnish", "1.1 varnish"], "Fastly-Debug-Digest": ["559cb6d40540d564e1813e7563587d1721c035de0dbceb621f80a7a1d2d28e92"], "Content-Length": ["12158"], "Accept-Ranges": ["bytes"], "Date": ["Tue, 09 May 2017 15:45:58 GMT"], "Age": ["6123"], "Connection": ["keep-alive"], "X-Served-By": ["cache-iad2123-IAD, cache-hhn1543-HHN"], "X-Cache": ["HIT, MISS"], "X-Cache-Hits": ["1, 0"], "X-Timer": ["S1494344758.059163,VS0,VE90"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Content-Type-Options": ["nosniff"], "X-Permitted-Cross-Domain-Policies": ["none"]}, "status": {"code": 200, "message": "OK"}, "url": "https://pypi.python.org/pypi/aiogibson/json"}, "recorded_at": "2017-05-09T15:45:58"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://github.com/aio-libs/aioredis"}, "response": {"body": {"encoding": "utf-8", "base64_string": ""}, "headers": {"Server": ["GitHub.com"], "Date": ["Tue, 09 May 2017 15:45:59 GMT"], "Content-Type": ["text/html; charset=utf-8"], "Transfer-Encoding": ["chunked"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Vary": ["X-PJAX", "Accept-Encoding"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Set-Cookie": ["logged_in=no; domain=.github.com; path=/; expires=Sat, 09 May 2037 15:45:59 -0000; secure; HttpOnly", "_gh_sess=eyJzZXNzaW9uX2lkIjoiMjE1MmVjYTFkOWUyNjViZDQwNzUzZjljNGQ2MzMxM2QiLCJzcHlfcmVwbyI6ImFpby1saWJzL2Fpb3JlZGlzIiwic3B5X3JlcG9fYXQiOjE0OTQzNDQ3NTgsIl9jc3JmX3Rva2VuIjoiNU1KQ2ZYTm1vYzVnMXl2RGxQWFFwZFJyNFZZM0pUazlKajFENGZtM2ptWT0iLCJmbGFzaCI6eyJkaXNjYXJkIjpbImFuYWx5dGljc19sb2NhdGlvbiJdLCJmbGFzaGVzIjp7ImFuYWx5dGljc19sb2NhdGlvbiI6Ii88dXNlci1uYW1lPi88cmVwby1uYW1lPiJ9fX0%3D--d661a0e04c8493ddfd9034c0283f4bbdcdfcbc87; path=/; secure; HttpOnly"], "X-Request-Id": ["d9af282eb411536f32996c8348421ea1"], "X-Runtime": ["0.585986"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Served-By": ["73ab9dfb66867a4ebbe0dc0967441cd8"], "Content-Encoding": ["gzip"], "X-GitHub-Request-Id": ["D338:35A7:6B3FF58:9F38B02:5911E436"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/aio-libs/aioredis"}, "recorded_at": "2017-05-09T15:45:59"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "Cookie": ["logged_in=no; _gh_sess=eyJzZXNzaW9uX2lkIjoiMjE1MmVjYTFkOWUyNjViZDQwNzUzZjljNGQ2MzMxM2QiLCJzcHlfcmVwbyI6ImFpby1saWJzL2Fpb3JlZGlzIiwic3B5X3JlcG9fYXQiOjE0OTQzNDQ3NTgsIl9jc3JmX3Rva2VuIjoiNU1KQ2ZYTm1vYzVnMXl2RGxQWFFwZFJyNFZZM0pUazlKajFENGZtM2ptWT0iLCJmbGFzaCI6eyJkaXNjYXJkIjpbImFuYWx5dGljc19sb2NhdGlvbiJdLCJmbGFzaGVzIjp7ImFuYWx5dGljc19sb2NhdGlvbiI6Ii88dXNlci1uYW1lPi88cmVwby1uYW1lPiJ9fX0%3D--d661a0e04c8493ddfd9034c0283f4bbdcdfcbc87"]}, "method": "GET", "uri": "https://github.com/jettify/aiogibson"}, "response": {"body": {"encoding": "utf-8", "base64_string": ""}, "headers": {"Server": ["GitHub.com"], "Date": ["Tue, 09 May 2017 15:45:59 GMT"], "Content-Type": ["text/html; charset=utf-8"], "Transfer-Encoding": ["chunked"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Vary": ["X-PJAX", "Accept-Encoding"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Set-Cookie": ["_gh_sess=eyJzZXNzaW9uX2lkIjoiMjE1MmVjYTFkOWUyNjViZDQwNzUzZjljNGQ2MzMxM2QiLCJzcHlfcmVwbyI6ImpldHRpZnkvYWlvZ2lic29uIiwic3B5X3JlcG9fYXQiOjE0OTQzNDQ3NTksIl9jc3JmX3Rva2VuIjoiNU1KQ2ZYTm1vYzVnMXl2RGxQWFFwZFJyNFZZM0pUazlKajFENGZtM2ptWT0iLCJmbGFzaCI6eyJkaXNjYXJkIjpbImFuYWx5dGljc19sb2NhdGlvbiJdLCJmbGFzaGVzIjp7ImFuYWx5dGljc19sb2NhdGlvbiI6Ii88dXNlci1uYW1lPi88cmVwby1uYW1lPiJ9fX0%3D--add32ec296df066de61f760123aaf25d46558682; path=/; secure; HttpOnly"], "X-Request-Id": ["135e5012698d4b6abe06aff04ce6f3aa"], "X-Runtime": ["0.278139"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Served-By": ["e878d09eac725c89f5f15204c1326660"], "Content-Encoding": ["gzip"], "X-GitHub-Request-Id": ["D338:35A7:6B4000D:9F38BF0:5911E437"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/jettify/aiogibson"}, "recorded_at": "2017-05-09T15:45:59"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://raw.githubusercontent.com/jettify/aiogibson/master/CHANGES.txt"}, "response": {"body": {"encoding": "utf-8", "base64_string": "H4sIAAAAAAAAA3WRz27bMAzG734KXgZ0xZzY2fonzWnIUGCH7bAHGKBIjCxUEg1Kbro9fSmlTQwU0cWSSX78feR2UNFiatrjaZpu0S++wtWq62/abtX23efm74fTXMMP0lPAmFV2FGGcdt6lAQ3IY8h5fFgulSPrdoniglGZLEHSaUFslw+NCHw3RtIPymXQnpLc9y4q7/4jb0r8ZxiZnuV3xiQpcmVlETLBev2pZjy6FwnvJgsHlwfQKmr0RWfKE+Pm3MS7IF0U20pcJILFohmCimZzNL2qpr+J47a/uWB6W6dl4I8YQgYXM/Je6Uq1Q0jSxysur8ExGpcqxC8SAwHzQCbBnilI1A7g8Rn9TCPSARgFPcLj2cGWYkR9HDKR/wIH4qcEKoFhGqVcakYv9dXanngurk/Fs2kEYoSyi8wu2oJY/fdv/rt1291e8H/aiXwyafIwKk5vCzuq538jgh5QP4l4wSs47TtOHXiapdfMiv2bIp52lErlmR7wBfWUcbayyty9M9+3/d0l5uiyU17G5FElGeor8GUcLfMCAAA="}, "headers": {"Content-Security-Policy": ["default-src 'none'; style-src 'unsafe-inline'"], "Strict-Transport-Security": ["max-age=31536000"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "ETag": ["\"a27c849c2806cb44060a702bf467dfd5c5f79dae\""], "Content-Type": ["text/plain; charset=utf-8"], "Cache-Control": ["max-age=300"], "X-Geo-Block-List": [""], "X-GitHub-Request-Id": ["4C02:0219:A8599D:AFB8C4:5911E437"], "Content-Encoding": ["gzip"], "Content-Length": ["416"], "Accept-Ranges": ["bytes"], "Date": ["Tue, 09 May 2017 15:46:00 GMT"], "Via": ["1.1 varnish"], "Connection": ["keep-alive"], "X-Served-By": ["cache-hhn1548-HHN"], "X-Cache": ["MISS"], "X-Cache-Hits": ["0"], "X-Timer": ["S1494344760.037218,VS0,VE122"], "Vary": ["Authorization,Accept-Encoding"], "Access-Control-Allow-Origin": ["*"], "X-Fastly-Request-ID": ["ca88c3c9cd2a82fce574c59caf356ac1b68e53a8"], "Expires": ["Tue, 09 May 2017 15:51:00 GMT"], "Source-Age": ["0"]}, "status": {"code": 200, "message": "OK"}, "url": "https://raw.githubusercontent.com/jettify/aiogibson/master/CHANGES.txt"}, "recorded_at": "2017-05-09T15:46:00"}], "recorded_with": "betamax/0.8.0"}