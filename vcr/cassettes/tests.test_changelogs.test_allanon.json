{"http_interactions": [{"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://pypi.python.org/pypi/allanon/json"}, "response": {"body": {"encoding": null, "string": ""}, "headers": {"Server": ["nginx/1.10.3"], "Location": ["/pypi/Allanon/json"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Via": ["1.1 varnish", "1.1 varnish"], "Fastly-Debug-Digest": ["c755b15936a0806f6e77654280716400278f79f989abf821b39954d1d9353346"], "Content-Length": ["0"], "Accept-Ranges": ["bytes"], "Date": ["Tue, 09 May 2017 15:46:27 GMT"], "Age": ["0"], "Connection": ["keep-alive"], "X-Served-By": ["cache-iad2141-IAD, cache-hhn1549-HHN"], "X-Cache": ["MISS, MISS"], "X-Cache-Hits": ["0, 0"], "X-Timer": ["S1494344787.377454,VS0,VE104"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Content-Type-Options": ["nosniff"], "X-Permitted-Cross-Domain-Policies": ["none"]}, "status": {"code": 301, "message": "Moved Permanently"}, "url": "https://pypi.python.org/pypi/allanon/json"}, "recorded_at": "2017-05-09T15:46:27"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://pypi.python.org/pypi/Allanon/json"}, "response": {"body": {"encoding": "UTF-8", "string": "{\n    \"info\": {\n        \"maintainer\": null, \n        \"docs_url\": null, \n        \"requires_python\": null, \n        \"maintainer_email\": null, \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": \"crawler robot spider downloader parser\", \n        \"package_url\": \"http://pypi.python.org/pypi/Allanon\", \n        \"author\": \"keul\", \n        \"author_email\": \"luca@keul.it\", \n        \"download_url\": \"UNKNOWN\", \n        \"platform\": \"UNKNOWN\", \n        \"version\": \"0.2\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \".. contents::\\n\\nIntroduction\\n============\\n\\nLet's say that you want to access a slow streaming site to see something (obviously: something not\\nprotected by copyright).\\n\\nThe streaming site use URLs in that format:\\n\\n    http://legal-streaming-site.org/program-name/season5/episode4/\\n\\nEvery page contains some HTML code like the following::\\n\\n    ....\\n        <div id=\\\"video-container\\\">\\n           ...\\n           <embed src=\\\"http://someotherurl.org/qwerty.flv\\\" ... \\n           ...\\n        <div>\\n    ...\\n\\nLet say this is the URL for the episode 4 of the fifth season of your program.\\nYou know that this program has 6 seasons with 22 episode each.\\n\\nAs said before: this site is very slow so you prefer downloading episodes in background\\nthen watch them later.\\n\\nTo download them you need to watch the HTML inside the page and get some resources\\n(commonly: and FLV file).\\nThe best would be download *all* episode in a single (long running) operation instead of manually\\ndoing it.\\n\\n**Allanon** will help you exactly in such tasks.\\nYou simply need to provide it:\\n\\n* a simple URL or a *dynamic URL pattern*\\n* a *query selector* for resources inside the page\\n\\nQuick example (you can keep it single lined)::\\n\\n    $ allanon --search=\\\"#movie-container embed\\\" \\\\\\n    > \\\"http://legal-streaming-site.org/program-name/season{1:6}/episode{1:22}\\\"\\n\\nDocumentation\\n=============\\n\\nInstallation\\n------------\\n\\nYou can use `distribute`__ or `pip`__ to install the utility in your Python environment.\\n\\n__ http://pypi.python.org/pypi/distribute\\n__ http://pypi.python.org/pypi/pip\\n\\n::\\n\\n    $ easy_install Allanon\\n\\nor alternately::\\n\\n    $ pip install Allanon\\n\\nInvocation\\n----------\\n\\nAfter installing you will be able to run the ``allanon`` script from command line.\\nFor example: run the following for access the utility help::\\n\\n    $ allanon --help\\n\\nBasic usage (you probably don't need Allanon at all for this)\\n-------------------------------------------------------------\\n\\nThe ``allanon`` script accept an URL (or a list of URLs) to be downloaded::\\n\\n    $ allanon http://myhost/folder/image1.jpg http://myhost/folder/image2.jpg ...\\n\\nEvery command line URL given to Allanon can be a simple URL or an *URL model* like the following::\\n\\n    $ allanon \\\"http://myhost/folder/image{1:50}.jpg\\\"\\n\\nThis will crawl 50 different URLs automatically. \\n\\nMain usage (things became interesting now)\\n------------------------------------------\\n\\nThe ``allanon`` script take an additional ``--search`` parameter (see the first example given\\nabove).\\nWhen you provide it, you are meaning:\\n\\n    \\\"*I don't want to download those URLs directly, but those URLs contain links to\\n    file that I really want*\\\".\\n\\nThe search parameter format must be CSS 3 compatible, like the one supported the famous\\n`jQuery library`__, and it's based onto the `pyquery`__ library.\\nSee it's documentation for more details about what you can look for.\\n\\n__ http://api.jquery.com/category/selectors/\\n__ http://packages.python.org/pyquery/\\n\\nExtreme usage\\n-------------\\n\\nThe ``--search`` parameter can be provided multiple times::\\n\\n    $ allanon --search=\\\"ul.image-repos a\\\" \\\\\\n    > --search=\\\"div.image-containers img\\\" \\\\\\n    > \\\"http://image-repository-sites.org/category{1:30}.html\\\"\\n\\nWhen you provide (for example) two different search parameters, you are meaning:\\n\\n    \\\"*I don't want to download resources at given URLs. Those URLs contain links to secondary pages,\\n    and inside those pages there're links to resources I want to download*\\\"\\n\\nFilters are applied in the given order, so:\\n\\n* Allanon will search inside 30 pages named *category1.html*, *category2.html*, ...\\n* inside those pages, Allanon will look for all links inside ``ul`` tags with CSS class\\n  *image-repos* and recursively crawl them.\\n* inside those pages, Allanon will looks for images inside ``div`` with class *image-containers*.\\n* images will be downloaded.\\n\\nPotentially you can continue this way, providing a third level of filters, and so on.\\n\\nNaming and storing downloaded resources\\n---------------------------------------\\n\\nBy default Allanon download all files in the current directory so a filename conflict\\nis possible.\\nYou can control how/where download, changing dynamically the filename using the\\n``--filename`` option and/or change the directory where to store files with the\\n``--directory`` option.\\n\\nAn example::\\n\\n    $ allanon --filename=\\\"%HOST-%INDEX-section%1-version%3-%FULLNAME\\\" \\\\\\n    > \\\"http://foo.org/pdf-repo-{1:10}/file{1:50}.pdf?version={0:3}\\\"\\n\\nAs you seen ``--filename`` accept some *markers* that can be used to better organize\\nresources:\\n\\n``%HOST``\\n    Will be replaced with the hostname used in the URL.\\n``%INDEX``\\n    Is a progressive from 1 to the number of downloaded resources.\\n``%X``\\n    When using dynamic URLs models you can refer to the current number of an URL\\n    section.\\n    \\n    In this case \\\"%1\\\" is the current \\\"pdf-repo-*x*\\\" number and \\\"%3\\\" is the \\\"version\\\"\\n    parameter value.\\n``%FULLNAME``\\n    The original filename (the one used if ``--filename`` is not provided).\\n    \\n    You can also use the ``%NAME`` and ``%EXTENSION`` to get only the name of the file\\n    (without extension) or simply the extension.\\n\\nThe ``--directory`` option can be a simple directory name or a directory path (in unix-like\\nformat, for example \\\"``foo/bar/baz``\\\").\\n\\nAn example::\\n\\n    $ allanon --directory=\\\"/home/keul/%HOST/%1\\\" \\\\\\n    > \\\"http://foo.org/pdf-repo-{1:10}/file{1:50}.pdf\\\" \\\\\\n    > \\\"http://baz.net/pdf-repo-{1:10}/file{1:50}.pdf\\\"\\n\\nAlso the ``--directory`` option supports some of the markers: you can use ``%HOST``, ``%INDEX`` and ``%X``\\nwith the same meaning given above.\\n\\nTODO\\n====\\n\\nThis utility is in alpha stage, a lot of thing can goes wrong when downloading and many features\\nare missing:\\n\\n* verbosity controls\\n* bandwidth control\\n* multi-thread (let's look at `grequests`__)\\n* Python 3\\n\\n__ https://github.com/kennethreitz/grequests\\n\\nIf you find other bugs or want to ask for missing features, use the `product's issue tracker`__.\\n\\n__ https://github.com/keul/Allanon/issues\\n\\n\\nChangelog\\n=========\\n\\n0.2 (2014-01-02)\\n----------------\\n\\n- Do not crawl or download when on error pages\\n- Handle duplicate filename when downloading resources:\\n  added the ``--check-duplicate`` option\\n- Application specific user agent header (configurable\\n  through ``--user-agent`` option)\\n- The ``--directory`` option can be a path and so create\\n  intermediate directories, and accept markers\\n- More efficient memory usage\\n- Show progress bar when getting resources\\n  (now requires `progress`__)\\n- Fixed problem when getting quoted filename from response\\n  header\\n- Added the ``--timeout`` option\\n- Added the ``--sleep`` option\\n\\n__ https://pypi.python.org/pypi/progress\\n\\n0.1 (2013-01-05)\\n----------------\\n\\n- first release\", \n        \"release_url\": \"http://pypi.python.org/pypi/Allanon/0.2\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 1, \n        \"classifiers\": [\n            \"Development Status :: 3 - Alpha\", \n            \"License :: OSI Approved :: GNU General Public License (GPL)\", \n            \"Operating System :: OS Independent\", \n            \"Programming Language :: Python\", \n            \"Programming Language :: Python\", \n            \"Programming Language :: Python :: 2.7\", \n            \"Topic :: Internet :: WWW/HTTP\", \n            \"Topic :: System :: Shells\", \n            \"Topic :: Utilities\"\n        ], \n        \"name\": \"Allanon\", \n        \"bugtrack_url\": \"https://github.com/keul/Allanon/issues\", \n        \"license\": \"GPL\", \n        \"summary\": \"A Web crawler that visit a predictable set of URLs, and automatically download resources you want from them\", \n        \"home_page\": \"https://github.com/keul/Allanon\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"0.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2013-01-05T18:13:29\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/82/fa/f7a53a652f06b62aabd9c1c4176d77a10be779dcd56b04e42091696e6f51/Allanon-0.1.zip\", \n                \"md5_digest\": \"c1ac97d8dbe1e7f3ab6211bf1f2d29ea\", \n                \"downloads\": 4400, \n                \"filename\": \"Allanon-0.1.zip\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"82/fa/f7a53a652f06b62aabd9c1c4176d77a10be779dcd56b04e42091696e6f51/Allanon-0.1.zip\", \n                \"size\": 30153\n            }\n        ], \n        \"0.2\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2014-01-02T21:44:45\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/a9/c1/e0e038858fdbe4709461811dda106f8e6d8b3d633809ebe54046791e72ae/Allanon-0.2.zip\", \n                \"md5_digest\": \"14619dbf30151b42c1aa13e7eca550f5\", \n                \"downloads\": 3037, \n                \"filename\": \"Allanon-0.2.zip\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"a9/c1/e0e038858fdbe4709461811dda106f8e6d8b3d633809ebe54046791e72ae/Allanon-0.2.zip\", \n                \"size\": 34868\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2014-01-02T21:44:45\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/a9/c1/e0e038858fdbe4709461811dda106f8e6d8b3d633809ebe54046791e72ae/Allanon-0.2.zip\", \n            \"md5_digest\": \"14619dbf30151b42c1aa13e7eca550f5\", \n            \"downloads\": 3037, \n            \"filename\": \"Allanon-0.2.zip\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"a9/c1/e0e038858fdbe4709461811dda106f8e6d8b3d633809ebe54046791e72ae/Allanon-0.2.zip\", \n            \"size\": 34868\n        }\n    ]\n}"}, "headers": {"Server": ["nginx/1.10.3"], "Content-Type": ["application/json; charset=\"UTF-8\""], "Content-Disposition": ["inline"], "X-PYPI-LAST-SERIAL": ["2860768"], "Cache-Control": ["max-age=600, public"], "Access-Control-Allow-Origin": ["*"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Via": ["1.1 varnish", "1.1 varnish"], "Fastly-Debug-Digest": ["ed0d22bc998a21f2f1e88c407b9ff9483bbbf1ed9d028cc95725c90aeb33122e"], "Content-Length": ["10702"], "Accept-Ranges": ["bytes"], "Date": ["Tue, 09 May 2017 15:46:27 GMT"], "Age": ["38132"], "Connection": ["keep-alive"], "X-Served-By": ["cache-iad2142-IAD, cache-hhn1549-HHN"], "X-Cache": ["HIT, MISS"], "X-Cache-Hits": ["1, 0"], "X-Timer": ["S1494344788.508627,VS0,VE87"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Content-Type-Options": ["nosniff"], "X-Permitted-Cross-Domain-Policies": ["none"]}, "status": {"code": 200, "message": "OK"}, "url": "https://pypi.python.org/pypi/Allanon/json"}, "recorded_at": "2017-05-09T15:46:27"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://github.com/kennethreitz/grequests"}, "response": {"body": {"encoding": "utf-8", "base64_string": ""}, "headers": {"Server": ["GitHub.com"], "Date": ["Tue, 09 May 2017 15:46:28 GMT"], "Content-Type": ["text/html; charset=utf-8"], "Transfer-Encoding": ["chunked"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Vary": ["X-PJAX", "Accept-Encoding"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Set-Cookie": ["logged_in=no; domain=.github.com; path=/; expires=Sat, 09 May 2037 15:46:28 -0000; secure; HttpOnly", "_gh_sess=eyJzZXNzaW9uX2lkIjoiMGM4ZmVmNzJhZGJkOGI3NDM2N2FhMGNmOWIxYWYzYzciLCJzcHlfcmVwbyI6Imtlbm5ldGhyZWl0ei9ncmVxdWVzdHMiLCJzcHlfcmVwb19hdCI6MTQ5NDM0NDc4OCwiX2NzcmZfdG9rZW4iOiI5R1RLQ3lCdnA5QlRkcW8ydW9jdjdVQmVUejhyeHBXMkRubFY2R3BHYXVJPSIsImZsYXNoIjp7ImRpc2NhcmQiOlsiYW5hbHl0aWNzX2xvY2F0aW9uIl0sImZsYXNoZXMiOnsiYW5hbHl0aWNzX2xvY2F0aW9uIjoiLzx1c2VyLW5hbWU%2BLzxyZXBvLW5hbWU%2BIn19fQ%3D%3D--36f7339778b505cf873f221f1d35aa12ea395635; path=/; secure; HttpOnly"], "X-Request-Id": ["5575a5e07261a305e8f7a3cdeb89d94a"], "X-Runtime": ["0.318310"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Served-By": ["f73c8d23c32022bae17eb1c3afb3b62b"], "Content-Encoding": ["gzip"], "X-GitHub-Request-Id": ["D3EA:35A7:6B418A5:9F3B0C9:5911E453"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/kennethreitz/grequests"}, "recorded_at": "2017-05-09T15:46:28"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "Cookie": ["logged_in=no; _gh_sess=eyJzZXNzaW9uX2lkIjoiMGM4ZmVmNzJhZGJkOGI3NDM2N2FhMGNmOWIxYWYzYzciLCJzcHlfcmVwbyI6Imtlbm5ldGhyZWl0ei9ncmVxdWVzdHMiLCJzcHlfcmVwb19hdCI6MTQ5NDM0NDc4OCwiX2NzcmZfdG9rZW4iOiI5R1RLQ3lCdnA5QlRkcW8ydW9jdjdVQmVUejhyeHBXMkRubFY2R3BHYXVJPSIsImZsYXNoIjp7ImRpc2NhcmQiOlsiYW5hbHl0aWNzX2xvY2F0aW9uIl0sImZsYXNoZXMiOnsiYW5hbHl0aWNzX2xvY2F0aW9uIjoiLzx1c2VyLW5hbWU%2BLzxyZXBvLW5hbWU%2BIn19fQ%3D%3D--36f7339778b505cf873f221f1d35aa12ea395635"]}, "method": "GET", "uri": "https://github.com/keul/Allanon"}, "response": {"body": {"encoding": "utf-8", "base64_string": ""}, "headers": {"Server": ["GitHub.com"], "Date": ["Tue, 09 May 2017 15:46:30 GMT"], "Content-Type": ["text/html; charset=utf-8"], "Transfer-Encoding": ["chunked"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Vary": ["X-PJAX", "Accept-Encoding"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Set-Cookie": ["_gh_sess=eyJzZXNzaW9uX2lkIjoiMGM4ZmVmNzJhZGJkOGI3NDM2N2FhMGNmOWIxYWYzYzciLCJzcHlfcmVwbyI6ImtldWwvQWxsYW5vbiIsInNweV9yZXBvX2F0IjoxNDk0MzQ0Nzg5LCJfY3NyZl90b2tlbiI6IjlHVEtDeUJ2cDlCVGRxbzJ1b2N2N1VCZVR6OHJ4cFcyRG5sVjZHcEdhdUk9IiwiZmxhc2giOnsiZGlzY2FyZCI6WyJhbmFseXRpY3NfbG9jYXRpb24iXSwiZmxhc2hlcyI6eyJhbmFseXRpY3NfbG9jYXRpb24iOiIvPHVzZXItbmFtZT4vPHJlcG8tbmFtZT4ifX19--6b490d8f07f8381d823933ea61489d3b3748c9da; path=/; secure; HttpOnly"], "X-Request-Id": ["7373e33d4b3bc313a9c991c65f1d97be"], "X-Runtime": ["0.836473"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Served-By": ["f75e9d2841ba49dfdb3929780833971c"], "Content-Encoding": ["gzip"], "X-GitHub-Request-Id": ["D3EA:35A7:6B41925:9F3B167:5911E454"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/keul/Allanon"}, "recorded_at": "2017-05-09T15:46:30"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "Cookie": ["logged_in=no; _gh_sess=eyJzZXNzaW9uX2lkIjoiMGM4ZmVmNzJhZGJkOGI3NDM2N2FhMGNmOWIxYWYzYzciLCJzcHlfcmVwbyI6ImtldWwvQWxsYW5vbiIsInNweV9yZXBvX2F0IjoxNDk0MzQ0Nzg5LCJfY3NyZl90b2tlbiI6IjlHVEtDeUJ2cDlCVGRxbzJ1b2N2N1VCZVR6OHJ4cFcyRG5sVjZHcEdhdUk9IiwiZmxhc2giOnsiZGlzY2FyZCI6WyJhbmFseXRpY3NfbG9jYXRpb24iXSwiZmxhc2hlcyI6eyJhbmFseXRpY3NfbG9jYXRpb24iOiIvPHVzZXItbmFtZT4vPHJlcG8tbmFtZT4ifX19--6b490d8f07f8381d823933ea61489d3b3748c9da"]}, "method": "GET", "uri": "https://github.com/keul/Allanon/tree/master/docs"}, "response": {"body": {"encoding": "utf-8", "base64_string": ""}, "headers": {"Server": ["GitHub.com"], "Date": ["Tue, 09 May 2017 15:46:30 GMT"], "Content-Type": ["text/html; charset=utf-8"], "Transfer-Encoding": ["chunked"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Vary": ["X-PJAX", "Accept-Encoding"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Set-Cookie": ["_gh_sess=eyJzZXNzaW9uX2lkIjoiMGM4ZmVmNzJhZGJkOGI3NDM2N2FhMGNmOWIxYWYzYzciLCJzcHlfcmVwbyI6ImtldWwvQWxsYW5vbiIsInNweV9yZXBvX2F0IjoxNDk0MzQ0NzkwLCJfY3NyZl90b2tlbiI6IjlHVEtDeUJ2cDlCVGRxbzJ1b2N2N1VCZVR6OHJ4cFcyRG5sVjZHcEdhdUk9In0%3D--edf61c755b3917b833d7ceb652043df2c8787a13; path=/; secure; HttpOnly"], "X-Request-Id": ["e46c7c26a3305dd0d51b633ded906d2c"], "X-Runtime": ["0.080859"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Served-By": ["d0e230454cb69aa01d4f86fc3a57b17f"], "Content-Encoding": ["gzip"], "X-GitHub-Request-Id": ["D3EA:35A7:6B41A3B:9F3B323:5911E456"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/keul/Allanon/tree/master/docs"}, "recorded_at": "2017-05-09T15:46:30"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://raw.githubusercontent.com/keul/Allanon/master/docs/HISTORY.txt"}, "response": {"body": {"encoding": "utf-8", "base64_string": "H4sIAAAAAAAAA21TTW/bMAy9+1fwmAJzvrpdCuxQbBg2DAMGbPdYkShbiCWqlIQs/36UM7tNV98kPvHxPT5/GlTocaS++Th/TbNd38OqBMYRVUJz17SvvqZp4SeyJfYu9KCg677j5UiKzbeQkbnE3HVwHtyIoCkE1FmADUAmQTMmKqwRAp1BpRNII0jOx/EC6eRirE3zoPKCFL5HY9DILQpZ25K1CSsHxewoSP2rCkbYSBAMJxcMkF24KWw0eV+C06qeQGYkTjLQ2eWBSgZ1JM5XXoTIpDEl6frF/RFWFcClVHBCg0GrypihJGFSPYYM0nG+FUrr+sITT/VyD6v9dve+3e7a7f5tLz+TWCFPWZ1HEC8MncNIyoiDGGAeF6KQpWeppsSx6kGw4nNQHq/4+XVVMxuYHkSrurFQD6hP7dLkpZeP8XpZnUoRtbNOv5Q7oDJyWC1ajyPW5Q5MpR+m7hXdTuilsWiH3//IjWPZC/FlqYIWl48o8YhKTBaJkEgsQZlNeruaK4/GVb3za4fp3YRUWmPM4BWfkKtFP4gR0Mrcrg7s0QuXSJCJpPprkODJknuxJ8FR8dW4HnO+MU14VzWjjE9FKBN086PucLhb4iGXYoC/bfJUKEttWY1l8rVzpJCqoKuH/wU7O4+Sx5tt3ADSiBify83hAEPOMT1sNvES3TpeJNBhTdxP5808cY3ibori/RTFD29H0TpO9b+bfv3mLyTZxrsfBAAA"}, "headers": {"Content-Security-Policy": ["default-src 'none'; style-src 'unsafe-inline'"], "Strict-Transport-Security": ["max-age=31536000"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "ETag": ["\"07e4038be5b12c3444421a4f2e444391770561eb\""], "Content-Type": ["text/plain; charset=utf-8"], "Cache-Control": ["max-age=300"], "X-Geo-Block-List": [""], "X-GitHub-Request-Id": ["3F36:1C736:2F68ED1:3154E17:5911E456"], "Content-Encoding": ["gzip"], "Content-Length": ["555"], "Accept-Ranges": ["bytes"], "Date": ["Tue, 09 May 2017 15:46:30 GMT"], "Via": ["1.1 varnish"], "Connection": ["keep-alive"], "X-Served-By": ["cache-hhn1538-HHN"], "X-Cache": ["MISS"], "X-Cache-Hits": ["0"], "X-Timer": ["S1494344790.404914,VS0,VE113"], "Vary": ["Authorization,Accept-Encoding"], "Access-Control-Allow-Origin": ["*"], "X-Fastly-Request-ID": ["6de7be8f4b15e2f0ebd411762644144155e630c0"], "Expires": ["Tue, 09 May 2017 15:51:30 GMT"], "Source-Age": ["0"]}, "status": {"code": 200, "message": "OK"}, "url": "https://raw.githubusercontent.com/keul/Allanon/master/docs/HISTORY.txt"}, "recorded_at": "2017-05-09T15:46:30"}], "recorded_with": "betamax/0.8.0"}