{"http_interactions": [{"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://pypi.python.org/pypi/buildout_gc/json"}, "response": {"body": {"encoding": null, "string": ""}, "headers": {"Server": ["nginx/1.10.3"], "Location": ["/pypi/buildout.gc/json"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Via": ["1.1 varnish", "1.1 varnish"], "Fastly-Debug-Digest": ["5fc900563794cb5c4cd961dccdf95975aeb4eef63ab7354e309990faaf7d9568"], "Content-Length": ["0"], "Accept-Ranges": ["bytes"], "Date": ["Tue, 09 May 2017 15:49:03 GMT"], "Age": ["0"], "Connection": ["keep-alive"], "X-Served-By": ["cache-iad2141-IAD, cache-hhn1527-HHN"], "X-Cache": ["MISS, MISS"], "X-Cache-Hits": ["0, 0"], "X-Timer": ["S1494344944.815102,VS0,VE105"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Content-Type-Options": ["nosniff"], "X-Permitted-Cross-Domain-Policies": ["none"]}, "status": {"code": 301, "message": "Moved Permanently"}, "url": "https://pypi.python.org/pypi/buildout_gc/json"}, "recorded_at": "2017-05-09T15:49:03"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://pypi.python.org/pypi/buildout.gc/json"}, "response": {"body": {"encoding": "UTF-8", "string": "{\n    \"info\": {\n        \"maintainer\": \"\", \n        \"docs_url\": null, \n        \"requires_python\": \"\", \n        \"maintainer_email\": \"\", \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": \"buildout extensions eggs directory clean\", \n        \"package_url\": \"http://pypi.python.org/pypi/buildout.gc\", \n        \"author\": \"Peter Uittenbroek\", \n        \"author_email\": \"uittenbroek@goldmund-wyldebeast-wunderliebe.com\", \n        \"download_url\": \"\", \n        \"platform\": \"\", \n        \"version\": \"1.2\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"Buildout Garbage Collector\\n==========================\\n\\nIntroduction\\n------------\\nThe buildout.gc extensions can be used to ensure your egg directory only contains 'used' eggs.\\nThe extension can report, move unused eggs to a specified directory or just remove egss.\\n\\nThis package is fork of https://github.com/thepjot/buildout.eggscleaner\\n\\n\\nInstallation\\n------------\\nGarbase Collector is a buildout extensions, can add it like so ::\\n\\n    [buildout]\\n    extensions =\\n            buildout.gc\\n\\n\\nOptions\\n-------\\n\\nold-eggs-directory\\n        The directory you want buildout.gc to move your unused eggs to.\\n        Should an excact egg already exist, we remove the one in the ''used'' eggs directory\\n\\nold-eggs-remove\\n        Remove eggs instead of moving\\n\\nold-eggs-factor\\n        Remove/move eggs directories when number unused eggs less <total_egss> * <factor>.\\n        Some times buildout out can be failed and in this case this extension determinate\\n        that ALL packages are not used. This parameter prevent removing ALL eggs in this case.\\n\\n\\nExample ::\\n\\n        [buildout]\\n        extensions =\\n                buildout.gc\\n        old-eggs-directory = ${buildout:directory}/old-eggs/\\n\\nTested with\\n-----------\\n\\nzc.buildout: 2.xx\\npython: 2.4.6, 2.6.8, 2.7.12, 3.3, 3.5\\n\\nWorking with other extensions\\n-----------------------------\\n\\nI looked at how buildout.dumppickedversions works and made this extension work in a similar manner.\\nThis extension will run alongside that one perfectly well.\\n\\n\\nExample outputs\\n---------------\\n\\nMoving eggs ::\\n\\n    Moved unused egg: webcouturier.dropdownmenu-2.3-py2.6.egg\\n    Moved unused egg: collective.uploadify-1.0-py2.6.egg\\n    Moved unused egg: collective.simplesocial-1.6-py2.6.egg\\n    Moved unused egg: collective.autopermission-1.0b2-py2.6.egg\\n\\nReporting ::\\n\\n    Don't have a 'old-eggs-directory' or 'old-eggs-remove' set, only reporting\\n    Can add it by adding 'old-eggs-directory = ${buildout:directory}/old-eggs' to your [buildout]\\n    Found unused egg: webcouturier.dropdownmenu-2.3-py2.6.egg\\n    Found unused egg: plone.recipe.command-1.1-py2.6.egg\\n    Found unused egg: collective.uploadify-1.0-py2.6.egg\\n    Found unused egg: Products.DocFinderTab-1.0.5-py2.6.egg\\n    Found unused egg: collective.simplesocial-1.6-py2.6.egg\\n    Found unused egg: collective.autopermission-1.0b2-py2.6.egg\\n    Found unused egg: Products.Clouseau-1.0-py2.6.egg\\n\\n\\nDetailed Documentation\\n======================\\n\\n\\nLet's create an egg to use it in our tests::\\n\\n    >>> mkdir('myegg')\\n    >>> write('myegg', 'setup.py',\\n    ... '''\\n    ... from setuptools import setup\\n    ... setup(name='myegg', version='1.0',)\\n    ... ''')\\n    >>> write('myegg', 'README', '')\\n    >>> print_(system(buildout+' setup myegg bdist_egg')), # doctest: +ELLIPSIS\\n    Running setup script 'myegg...\\n    ...\\n\\n    >>> mkdir('baregg')\\n    >>> write('baregg', 'setup.py',\\n    ... '''\\n    ... from setuptools import setup\\n    ... setup(name='baregg', version='1.0',)\\n    ... ''')\\n    >>> write('baregg', 'README', '')\\n    >>> print_(system(buildout+' setup baregg bdist_egg')), # doctest: +ELLIPSIS\\n    Running setup script 'baregg...\\n    ...\\n\\nNow let's create a buildout to install the egg and to use buildout.gc::\\n\\n    >>> write('buildout.cfg',\\n    ... '''\\n    ... [buildout]\\n    ... index = http://pypi.python.org/simple\\n    ... extensions = buildout.gc\\n    ... eggs-directory = ${buildout:directory}/eggs\\n    ... parts = foo\\n    ... find-links += %s\\n    ... [foo]\\n    ... recipe = zc.recipe.egg\\n    ... eggs = myegg\\n    ... ''' % join('myegg', 'dist'))\\n\\nRunning the buildout will print information about unused eggs::\\n\\n    >>> print_(system(buildout)), # doctest: +ELLIPSIS\\n    Installing foo.\\n    Getting distribution for 'myegg'.\\n    ...\\n    Don't have a 'old-eggs-directory' or 'old-eggs-remove' set, only reporting\\n    ...\\n\\nWhen we only want to report unused eggs we omit the ``old-eggs-directory`` and ``old-eggs-remove`` options.\\n\\n    >>> write('buildout.cfg',\\n    ... '''\\n    ... [buildout]\\n    ... index = http://pypi.python.org/simple\\n    ... extensions = buildout.gc\\n    ... eggs-directory = ${buildout:directory}/eggs\\n    ... parts = foo\\n    ... find-links += %s\\n    ... [foo]\\n    ... recipe = zc.recipe.egg\\n    ... eggs = baregg\\n    ... ''' % join('baregg', 'dist'))\\n\\n    >>> print_(system(buildout)) # doctest:+ELLIPSIS\\n    Uninstalling foo.\\n    Installing foo.\\n    Getting distribution for 'baregg'.\\n    Got baregg 1.0.\\n    Don't have a 'old-eggs-directory' or 'old-eggs-remove' set, only reporting\\n    Can add it by adding 'old-eggs-directory = ${buildout:directory}/old-eggs' to your [buildout]\\n    Found unused egg: myegg...\\n    <BLANKLINE>\\n\\n\\n\\nCheck that indeed nothing has been moved nor deleted::\\n\\n    >>> assert 'myegg' in  ''.join(os.listdir('eggs'))\\n\\nIf we want to move unused eggs, we just add an ``old-eggs-directory`` option and give a directory target::\\n\\n    >>> write('buildout.cfg',\\n    ... '''\\n    ... [buildout]\\n    ... index = http://pypi.python.org/simple\\n    ... extensions = buildout.gc\\n    ... eggs-directory = ${buildout:directory}/eggs\\n    ... old-eggs-directory = ${buildout:directory}/old-eggs\\n    ... parts = foo\\n    ... find-links += %s\\n    ... [foo]\\n    ... recipe = zc.recipe.egg\\n    ... eggs = baregg\\n    ... ''' % join('baregg', 'dist'))\\n\\n    >>> print_(system(buildout)) # doctest:+ELLIPSIS\\n    Updating foo.\\n    Moved unused egg: myegg...\\n    <BLANKLINE>\\n\\nCheck that indeed 'myegg' has been moved::\\n\\n    >>> assert 'myegg' not in  ''.join(os.listdir('eggs')), 'myegg has not been moved out of egg dir'\\n    >>> assert 'myegg' in  ''.join(os.listdir('old-eggs')), 'myegg has not been moved to old-egg dir'\\n\\nAnd baregg is still present::\\n\\n    >>> assert 'baregg' in  ''.join(os.listdir('eggs')), 'baregg is not present in egg dir'\\n\\nIf we want to remove unused eggs, we just add an ``old-eggs-remove`` option::\\n\\n    >>> write('buildout.cfg',\\n    ... '''\\n    ... [buildout]\\n    ... index = http://pypi.python.org/simple\\n    ... extensions = buildout.gc\\n    ... eggs-directory = ${buildout:directory}/eggs\\n    ... old-eggs-directory = ${buildout:directory}/old-eggs\\n    ... old-eggs-remove = true\\n    ... parts = foo\\n    ... find-links += %s\\n    ... [foo]\\n    ... recipe = zc.recipe.egg\\n    ... eggs = myegg\\n    ... ''' % join('myegg', 'dist'))\\n\\n    >>> print_(system(buildout)) # doctest:+ELLIPSIS\\n    Uninstalling foo.\\n    Installing foo.\\n    Getting distribution for 'myegg'.\\n    Got myegg 1.0.\\n    Moved unused egg: baregg...\\n    <BLANKLINE>\\n\\nCheck that indeed 'baregg' has been removed::\\n\\n    >>> assert 'baregg' not in  ''.join(os.listdir('eggs')), 'baregg has not been removed'\\n    >>> assert 'baregg' not in  ''.join(os.listdir('old-eggs')), 'baregg has been moved to old-egg dir'\\n\\nAnd 'myegg' is still present::\\n\\n    >>> assert 'myegg' in  ''.join(os.listdir('eggs')), 'myegg is not present in egg dir'\\n\\nContributors\\n============\\n\\n- Peter Uittenbroek, Author\\n- Anton Tagunov\\n\\nChange history\\n==============\\n\\n1.2.dev\\n-------\\n\\n- Fixed incorrect messages after restarting of buildout.\\n\\n1.0 (2016-01-21)\\n----------------\\n\\n- Created public fork\\n\\n0.1.5 (2012-08-17)\\n------------------\\n\\n- Redid documentation\\n  [thepjot]\\n\\n- Added doctest\\n  [thepjot]\\n\\n0.1 (internal release)\\n-----------------------\\n- Creation\\n  [thepjot]\\n\\n\", \n        \"release_url\": \"http://pypi.python.org/pypi/buildout.gc/1.2\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 2, \n        \"classifiers\": [\n            \"Framework :: Buildout\", \n            \"Intended Audience :: Developers\", \n            \"License :: OSI Approved :: Zope Public License\", \n            \"Topic :: Software Development :: Build Tools\"\n        ], \n        \"name\": \"buildout.gc\", \n        \"bugtrack_url\": null, \n        \"license\": \"ZPL\", \n        \"summary\": \"A buildout extension to move non-used eggs to a specified directory\", \n        \"home_page\": \"https://bitbucket.org/atagunov/buildout.gc\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"1.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-01-21T12:18:16\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/39/37/2f891aa97710cb00f40b86905a81caa1aa2e76581a52c3560d21fcdb58c6/buildout.gc-1.0.zip\", \n                \"md5_digest\": \"3535e1159a83fd61db5d7580f027935c\", \n                \"downloads\": 703, \n                \"filename\": \"buildout.gc-1.0.zip\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"39/37/2f891aa97710cb00f40b86905a81caa1aa2e76581a52c3560d21fcdb58c6/buildout.gc-1.0.zip\", \n                \"size\": 12402\n            }\n        ], \n        \"1.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-01-21T12:33:12\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/37/d8/7b5ed9abf5e0d625fb1660ad80b5ee3e2d92b733cde714988ad4193838fb/buildout.gc-1.1.zip\", \n                \"md5_digest\": \"6e9d2bcfd9554ce80f1b0befa497a7e6\", \n                \"downloads\": 414, \n                \"filename\": \"buildout.gc-1.1.zip\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"37/d8/7b5ed9abf5e0d625fb1660ad80b5ee3e2d92b733cde714988ad4193838fb/buildout.gc-1.1.zip\", \n                \"size\": 12906\n            }\n        ], \n        \"1.2\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-11-28T10:21:01\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/a4/66/fec0abd4c2503ec1cef72f97bfa1a9ea044621c283fee390c80d83cee76a/buildout.gc-1.2.tar.gz\", \n                \"md5_digest\": \"6060b41dd2dd5d454745d739192522ee\", \n                \"downloads\": 265, \n                \"filename\": \"buildout.gc-1.2.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"a4/66/fec0abd4c2503ec1cef72f97bfa1a9ea044621c283fee390c80d83cee76a/buildout.gc-1.2.tar.gz\", \n                \"size\": 6583\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2016-11-28T10:21:01\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/a4/66/fec0abd4c2503ec1cef72f97bfa1a9ea044621c283fee390c80d83cee76a/buildout.gc-1.2.tar.gz\", \n            \"md5_digest\": \"6060b41dd2dd5d454745d739192522ee\", \n            \"downloads\": 265, \n            \"filename\": \"buildout.gc-1.2.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"a4/66/fec0abd4c2503ec1cef72f97bfa1a9ea044621c283fee390c80d83cee76a/buildout.gc-1.2.tar.gz\", \n            \"size\": 6583\n        }\n    ]\n}"}, "headers": {"Server": ["nginx/1.10.3"], "Content-Type": ["application/json; charset=\"UTF-8\""], "Content-Disposition": ["inline"], "X-PYPI-LAST-SERIAL": ["2859891"], "Cache-Control": ["max-age=600, public"], "Access-Control-Allow-Origin": ["*"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Via": ["1.1 varnish", "1.1 varnish"], "Fastly-Debug-Digest": ["b2d3b1921bd347f98693e3a056c69523261fe46bb53048dc2b931c567da9f7c0"], "Content-Length": ["11750"], "Accept-Ranges": ["bytes"], "Date": ["Tue, 09 May 2017 15:49:03 GMT"], "Age": ["73908"], "Connection": ["keep-alive"], "X-Served-By": ["cache-iad2120-IAD, cache-hhn1527-HHN"], "X-Cache": ["HIT, HIT"], "X-Cache-Hits": ["1, 1"], "X-Timer": ["S1494344944.946795,VS0,VE1"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Content-Type-Options": ["nosniff"], "X-Permitted-Cross-Domain-Policies": ["none"]}, "status": {"code": 200, "message": "OK"}, "url": "https://pypi.python.org/pypi/buildout.gc/json"}, "recorded_at": "2017-05-09T15:49:03"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://github.com/thepjot/buildout.eggscleaner"}, "response": {"body": {"encoding": "utf-8", "string": "<html><body>You are being <a href=\"https://github.com/Goldmund-Wyldebeast-Wunderliebe/buildout.eggscleaner\">redirected</a>.</body></html>"}, "headers": {"Server": ["GitHub.com"], "Date": ["Tue, 09 May 2017 15:49:04 GMT"], "Content-Type": ["text/html; charset=utf-8"], "Transfer-Encoding": ["chunked"], "Status": ["301 Moved Permanently"], "Cache-Control": ["no-cache"], "Vary": ["X-PJAX", "Accept-Encoding"], "Location": ["https://github.com/Goldmund-Wyldebeast-Wunderliebe/buildout.eggscleaner"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Set-Cookie": ["_gh_sess=eyJzZXNzaW9uX2lkIjoiMGY1NmU1YzgxMzllZTk1ZDhhN2FmNzdhYTFmYTA5N2UifQ%3D%3D--e9dbdd4921a64da4bbbe3862e0e5c0f3b2e4d671; path=/; secure; HttpOnly"], "X-Request-Id": ["70d8b0067ad37f4d30f7b3cb8f3dc30a"], "X-Runtime": ["0.019375"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Served-By": ["e878d09eac725c89f5f15204c1326660"], "X-GitHub-Request-Id": ["D75F:35A7:6B4A133:9F47E89:5911E4F0"]}, "status": {"code": 301, "message": "Moved Permanently"}, "url": "https://github.com/thepjot/buildout.eggscleaner"}, "recorded_at": "2017-05-09T15:49:04"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "Cookie": ["_gh_sess=eyJzZXNzaW9uX2lkIjoiMGY1NmU1YzgxMzllZTk1ZDhhN2FmNzdhYTFmYTA5N2UifQ%3D%3D--e9dbdd4921a64da4bbbe3862e0e5c0f3b2e4d671"]}, "method": "GET", "uri": "https://github.com/Goldmund-Wyldebeast-Wunderliebe/buildout.eggscleaner"}, "response": {"body": {"encoding": "utf-8", "base64_string": ""}, "headers": {"Server": ["GitHub.com"], "Date": ["Tue, 09 May 2017 15:49:04 GMT"], "Content-Type": ["text/html; charset=utf-8"], "Transfer-Encoding": ["chunked"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Vary": ["X-PJAX", "Accept-Encoding"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Set-Cookie": ["logged_in=no; domain=.github.com; path=/; expires=Sat, 09 May 2037 15:49:04 -0000; secure; HttpOnly", "_gh_sess=eyJzZXNzaW9uX2lkIjoiMGY1NmU1YzgxMzllZTk1ZDhhN2FmNzdhYTFmYTA5N2UiLCJzcHlfcmVwbyI6IkdvbGRtdW5kLVd5bGRlYmVhc3QtV3VuZGVybGllYmUvYnVpbGRvdXQuZWdnc2NsZWFuZXIiLCJzcHlfcmVwb19hdCI6MTQ5NDM0NDk0NCwiX2NzcmZfdG9rZW4iOiI2WWJiU1F3MXZDVEpwd2cxVzRPKzMveEI3d1BLTkd1MERZdldKcCtXZmVjPSIsImZsYXNoIjp7ImRpc2NhcmQiOlsiYW5hbHl0aWNzX2xvY2F0aW9uIl0sImZsYXNoZXMiOnsiYW5hbHl0aWNzX2xvY2F0aW9uIjoiLzx1c2VyLW5hbWU%2BLzxyZXBvLW5hbWU%2BIn19fQ%3D%3D--ed8d97707817387b77a9e65a9da3ed44f147c668; path=/; secure; HttpOnly"], "X-Request-Id": ["43aa6043d90011641a7a2fc080276cd9"], "X-Runtime": ["0.243964"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Served-By": ["8bdedb8d5eef82ca4058f053b6ea5901"], "Content-Encoding": ["gzip"], "X-GitHub-Request-Id": ["D75F:35A7:6B4A153:9F47EB3:5911E4F0"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/Goldmund-Wyldebeast-Wunderliebe/buildout.eggscleaner"}, "recorded_at": "2017-05-09T15:49:05"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://bitbucket.org/atagunov/buildout.gc/src/"}, "response": {"body": {"encoding": "utf-8", "base64_string": ""}, "headers": {"Server": ["nginx"], "Vary": ["Accept-Language, Cookie, Accept-Encoding"], "Cache-Control": ["max-age=900"], "Content-Type": ["text/html; charset=utf-8"], "Content-Encoding": ["gzip"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains; preload"], "Date": ["Tue, 09 May 2017 15:49:06 GMT"], "X-Served-By": ["app-107"], "Transfer-Encoding": ["chunked"], "Content-Language": ["en"], "X-Static-Version": ["8158c1535379"], "X-Content-Type-Options": ["nosniff"], "X-Render-Time": ["0.815330982208"], "Connection": ["keep-alive"], "X-Request-Count": ["255"], "X-Frame-Options": ["SAMEORIGIN"], "X-Version": ["8158c1535379"], "X-Cache-Info": ["caching"]}, "status": {"code": 200, "message": "OK"}, "url": "https://bitbucket.org/atagunov/buildout.gc/src/"}, "recorded_at": "2017-05-09T15:49:06"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://bitbucket.org/atagunov/buildout.gc/raw/8f37ffb6a95ccb7f709c9eeb309308d103416030/CHANGES.txt"}, "response": {"body": {"encoding": "ISO-8859-1", "string": "Change history\n==============\n\n1.2.dev\n-------\n\n- Fixed incorrect messages after restarting of buildout.\n\n1.0 (2016-01-21)\n----------------\n\n- Created public fork\n\n0.1.5 (2012-08-17)\n------------------\n\n- Redid documentation\n  [thepjot]\n\n- Added doctest\n  [thepjot]\n\n0.1 (internal release)\n-----------------------\n- Creation\n  [thepjot]\n"}, "headers": {"Server": ["nginx"], "Vary": ["Accept-Language, Cookie"], "Cache-Control": ["max-age=900"], "Content-Type": ["text/plain"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains; preload"], "Date": ["Tue, 09 May 2017 15:49:06 GMT"], "X-Served-By": ["app-151"], "Content-Language": ["en"], "Accept-Ranges": ["bytes"], "ETag": ["\"7313f45e968d9849466f84bd4323e4b3\""], "X-Static-Version": ["3676bdca89e0"], "X-Content-Type-Options": ["nosniff"], "X-Render-Time": ["0.0345149040222"], "Connection": ["keep-alive"], "X-Request-Count": ["203"], "Last-Modified": ["Mon, 28 Nov 2016 10:19:50 GMT"], "X-Version": ["3676bdca89e0"], "X-Frame-Options": ["SAMEORIGIN"], "X-Cache-Info": ["caching"], "Content-Length": ["337"]}, "status": {"code": 200, "message": "OK"}, "url": "https://bitbucket.org/atagunov/buildout.gc/raw/8f37ffb6a95ccb7f709c9eeb309308d103416030/CHANGES.txt"}, "recorded_at": "2017-05-09T15:49:06"}], "recorded_with": "betamax/0.8.0"}