{"http_interactions": [{"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://pypi.python.org/pypi/django_sunset/json"}, "response": {"body": {"encoding": null, "string": ""}, "headers": {"Server": ["nginx/1.10.3"], "Location": ["/pypi/django-sunset/json"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Via": ["1.1 varnish", "1.1 varnish"], "Fastly-Debug-Digest": ["b0c5bde19f2f1b43fd936612b7b84422830013f667458bb35859a1879c876ef4"], "Content-Length": ["0"], "Accept-Ranges": ["bytes"], "Date": ["Tue, 09 May 2017 15:49:34 GMT"], "Age": ["0"], "Connection": ["keep-alive"], "X-Served-By": ["cache-iad2126-IAD, cache-hhn1531-HHN"], "X-Cache": ["MISS, MISS"], "X-Cache-Hits": ["0, 0"], "X-Timer": ["S1494344974.111295,VS0,VE137"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Content-Type-Options": ["nosniff"], "X-Permitted-Cross-Domain-Policies": ["none"]}, "status": {"code": 301, "message": "Moved Permanently"}, "url": "https://pypi.python.org/pypi/django_sunset/json"}, "recorded_at": "2017-05-09T15:49:34"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://pypi.python.org/pypi/django-sunset/json"}, "response": {"body": {"encoding": "UTF-8", "string": "{\n    \"info\": {\n        \"maintainer\": null, \n        \"docs_url\": null, \n        \"requires_python\": null, \n        \"maintainer_email\": null, \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": \"django settings\", \n        \"package_url\": \"http://pypi.python.org/pypi/django-sunset\", \n        \"author\": \"Rob Madole\", \n        \"author_email\": \"robmadole@gmail.com\", \n        \"download_url\": \"UNKNOWN\", \n        \"platform\": \"UNKNOWN\", \n        \"version\": \"0.3\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"django-sunset\\n=============\\n\\nDjango Sunset makes working with Django settings in a team environment or a\\nmulti-server deployment a bit easier.\\n\\nThe basic idea is that you separate your settings modules and based on the\\n**hostname** of the machine you are running on, do the appropriate thing.\\n\\nInstallation\\n------------\\n\\nUsing Pip:\\n\\n::\\n\\n    pip install django-sunset\\n\\nOr ``easy_install`` if you don't have Pip:\\n\\n::\\n\\n    easy_install django-sunset\\n\\nBasic Usage\\n-----------\\n\\nWhen you create a new project in Django a Python module called ``settings`` (a\\nfile called ``settings.py``) holds all the configuration for how your project\\nwill operate.\\n\\nIf you are new to Django, `this tutorial\\n<http://docs.djangoproject.com/en/dev/intro/tutorial01/>`_ can get you started.\\n\\nStart with a new project (``django-admin.py startproject mysite``)::\\n\\n    mysite/\\n        __init__.py\\n        manage.py\\n        settings.py\\n        urls.py\\n\\n\\nRename the ``settings.py`` file to ``settingsbase.py`` ::\\n\\n    mysite/\\n        __init__.py\\n        manage.py\\n        settingsbase.py\\n        urls.py\\n\\nLet's find out what your current hostname is ::\\n\\n    $ python -c 'import os; print os.uname()[1]'\\n    rob-madoles-macbook-pro.local\\n\\nMine is ``rob-madoles-macbook-pro.local``.  Throughout the examples I'll use\\nthis, substitute your own where appropriate.\\n\\nNow create ``settings.py`` with the following contents ::\\n\\n    from sunset import api\\n\\n    import settingsbase\\n    api.collect(settingsbase)\\n\\n    api.roles(\\n        api.dev('rob-madoles-macbook-pro'))\\n\\n    from sunset.collection import *\\n\\nWe should have this ::\\n\\n    mysite/\\n        __init__.py\\n        manage.py\\n        settings.py\\n        settingsbase.py\\n        urls.py\\n\\nKick Django off something like this ::\\n\\n    $ ./manage.py shell\\n    Python 2.7 (r27:82500, Aug 16 2010, 15:13:20)\\n    [GCC 4.2.1 (Apple Inc. build 5664)] on darwin\\n    Type \\\"help\\\", \\\"copyright\\\", \\\"credits\\\" or \\\"license\\\" for more information.\\n    (InteractiveConsole)\\n    >>>\\n\\nLook again and you should see a ``settingslocal.py``.  It's empty but a comment\\nat the top to indicate you place your local settings here. ::\\n\\n    mysite/\\n        __init__.py\\n        manage.py\\n        settings.py\\n        settingsbase.py\\n        settingslocal.py\\n        urls.py\\n\\nSince these settings are local to only your machine, you probably don't want\\nthem in the repository.  Add it to ``.gitignore`` or ``.hgignore`` or whatever\\nequivalent ignore file you have.\\n\\nGo ahead and make some changes in there, how about we change the database?\\n\\nEdit ``settingslocal.py`` ::\\n\\n    DEBUG = True\\n\\n    DATABASES = {\\n        'default': {\\n            'ENGINE': 'django.db.backends.sqlite3',\\n            'NAME': 'database.db',\\n        }\\n    }\\n\\nRun the Django shell again and inspect the value ::\\n\\n    $ ./manage.py shell\\n    Python 2.7 (r27:82500, Aug 16 2010, 15:13:20)\\n    [GCC 4.2.1 (Apple Inc. build 5664)] on darwin\\n    Type \\\"help\\\", \\\"copyright\\\", \\\"credits\\\" or \\\"license\\\" for more information.\\n    (InteractiveConsole)\\n    >>> from django.conf import settings\\n    >>> print settings.DATABASES['default']['ENGINE']\\n    django.db.backends.sqlite3\\n    >>> print settings.DATABASES['default']['NAME']\\n    database.db\\n\\nGreat, you have local settings now and you don't have to touch the main\\n``settings.py`` file.\\n\\nBase your local settings on a template\\n--------------------------------------\\n\\nLet's take what we have in the previous example and expand a bit on it.  For our\\nteam we have quite a few settings and a template would be nicer to start with\\ninstead of an empty file.\\n\\nEdit ``settings.py`` with the following contents ::\\n\\n    from sunset import api\\n\\n    import settingsbase\\n    api.collect(settingsbase)\\n\\n    import settingsdev\\n    api.dev_template(settingsdev)\\n\\n    api.roles(\\n        api.dev('rob-madoles-macbook-pro'))\\n\\n    from sunset.collection import *\\n\\nWe are adding this ::\\n\\n    import settingsdev\\n    api.dev_template(settingsdev)\\n\\nCreate an empty file called ``settingsdev.py`` ::\\n\\n    touch settingsdev.py\\n\\nMake the contents of ``settingsdev.py`` to this ::\\n\\n    DEBUG = True\\n\\n    DATABASES = {\\n        'default': {\\n            'ENGINE': 'django.db.backends.sqlite3',\\n            'NAME': 'database.db',\\n        }\\n    }\\n\\n    FACEBOOK_APP_ID = ''\\n    FACEBOOK_APP_SECRET = ''\\n    FACEBOOK_API_KEY = ''\\n\\nThat works better, each developer will not have to repeat the same typing.\\n\\nRemove your ``settingslocal.py`` so Django Sunset can recreate it for you.\\n::\\n\\n    rm settingslocal.py\\n\\nAnd again load up the Django shell ::\\n\\n    $ ./manage.py shell\\n    Python 2.7 (r27:82500, Aug 16 2010, 15:13:20)\\n    [GCC 4.2.1 (Apple Inc. build 5664)] on darwin\\n    Type \\\"help\\\", \\\"copyright\\\", \\\"credits\\\" or \\\"license\\\" for more information.\\n    (InteractiveConsole)\\n\\nIf you look at ``settingslocal.py`` now you'll see the extra goodies.\\n\\nSettings for deployment or production\\n-------------------------------------\\n\\nSettings for developers are one thing, they change often and are not usually\\ntracked in a VCS.\\n\\nServers are a different story.  You usually control these pretty closely and\\nchange them seldom once they are running.\\n\\nSo for deployments the syntax is a bit different.\\n\\nCreate a directory called ``deployments``  and a file called ``web01.py`` ::\\n\\n    mkdir deployments\\n    touch deployments/__init__.py\\n    touch deploymnets/web01.py\\n\\nEdit ``settings.py`` with the following contents ::\\n\\n    from sunset import api\\n\\n    import settingsbase\\n    api.collect(settingsbase)\\n\\n    import settingsdev\\n    api.dev_template(settingsdev)\\n\\n    from deployments import web01\\n\\n    api.roles(\\n        api.dev('rob-madoles-macbook-pro')\\n        api.deployment('web01', web01)\\n        )\\n\\n    from sunset.collection import *\\n\\nNotice that the ``api.deployment`` constructor takes 2 arguments.  The first is\\nthe partial hostname, the second is the module that will be added to the\\ncollection of settings if the hostname matches.\\n\\nNow you can edit the ``web01.py`` file and change whatever settings you like.\\n\\nAs a bonus, it's easy to impersonate a deployed server locally.  Simply set your\\nhostname as a deployment.\\n\\n::\\n\\n    api.roles(\\n        #api.dev('rob-madoles-macbook-pro')\\n        api.deployment('rob-madoles-macbook-pro', web01)\\n        api.deployment('web01', web01)\\n        )\\n\\n\\nIn the case that you have a deployment to the cloud and do not know the hostname\\nthat you code will be sitting in you can simply set the ignore_missing flag.\\n\\n::\\n\\n    from sunset import api\\n\\n    import settingsbase\\n    api.collect(settingsbase)\\n\\n    import settingsdev\\n    api.dev_template(settingsdev)\\n\\n    from deployments import web01\\n    from delpoyments import cloud\\n\\n    api.collect(cloud)\\n\\n    api.roles(\\n        api.dev('rob-madoles-macbook-pro'),\\n        api.deployment('web01', web01),\\n        ignore_missing=True)\\n\\n    from sunset.collection import *\\n\\nUsing one module for a group of settings\\n----------------------------------------\\n\\nWith Django Sunset you can separate your settings by hostname but there are\\nstill situations where this isn't always the best method.\\n\\nFor example, let's say one developer is responsible for setting up the Facebook\\nAPI keys for the team.  She's gone into Facebook and spent the last half-hour\\nmaking Applications and editing configurations.\\n\\nInstead of emailing everyone their keys, app id's and secrets she can create one\\nmodule that houses them all.\\n\\nEdit ``settings.py`` with the following contents ::\\n\\n    from sunset import api\\n\\n    import settingsbase\\n    api.collect(settingsbase)\\n\\n    import settingsdev\\n    api.collect(settingsdev)\\n\\n    from deployments import web01\\n\\n    from deployments import facebook\\n    api.collect(facebook)\\n\\n    api.roles(\\n        api.dev('rob-madoles-macbook-pro')\\n        api.deployment('web01', web01)\\n        )\\n\\n    from sunset.collection import *\\n\\nWhat we've added here is ::\\n\\n    from deployments import facebook\\n    api.collect(facebook)\\n\\nNow let's create ``deployments/facebook.py`` with the following contents ::\\n\\n    from sunset.api import hostname_like\\n\\n    if hostname_like('rob-madoles-macbook-pro'):\\n        FACEBOOK_APP_ID = '13782914721428'\\n        FACEBOOK_APP_SECRET = 'asdfh8a7f8f2238a8s7d68f72'\\n        FACEBOOK_API_KEY = '8a7f79829f6a6ft0aygafkgsdaf86t4ugyagtf8'\\n\\n    if hostname_like('ted-jones-macbook-pro'):\\n        FACEBOOK_APP_ID = '8723849237428'\\n        FACEBOOK_APP_SECRET = '8ffa23jk4fa9f34af3498afhf4'\\n        FACEBOOK_API_KEY = '123h129318hf91uwhd1937g8163g817317gd817'\\n\\n    if hostname_like('web01', 'web02', 'web03'):\\n        FACEBOOK_APP_ID = '8723849237428'\\n        FACEBOOK_APP_SECRET = '8ffa23jk4fa9f34af3498afhf4'\\n        FACEBOOK_API_KEY = '123h129318hf91uwhd1937g8163g817317gd817'\\n\\nSo now this module performs the hostname matching internally instead of relying\\non the roles.  Also notice how ``hostname_like`` can take multiple arguments\\nwhere if any of the hostnames match the settings will be applied.\\n\\nThe developer still has the opportunity to override the settings from the\\n``facebook`` module in their own ``settingslocal``.  The order in which API\\ncalls happen within the ``settings`` module is preserved.\\n\\nQuestions and issues\\n--------------------\\n\\nPlease enter issues in `GitHub <https://github.com/robmadole/django-sunset/issues>`_ or you can email me directory robmadole@gmail.com.\\n\\n\\nNews\\n====\\n\\n0.3\\n---\\n\\n*Release data: 31-Mar-2011*\\n\\n* Added ignore_missing keyword argument, will not complain about a hostname missing from the roles (thanks Travis Chase supercodepoet)\\n\\n0.2\\n---\\n\\n*Release date: 24-Nov-2010*\\n\\n* Updated documentation errors regarding dev templates (thanks Guntis Strazds)\\n* Updated roles module to support running Django from within the project (again thanks to Guntis)\\n* Python 2.7, 2.6, and 2.5 support\\n\\n0.1\\n---\\n\\n*Release date: 05-Nov-2010*\\n\\n* Initial release\", \n        \"release_url\": \"http://pypi.python.org/pypi/django-sunset/0.3\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 2, \n        \"classifiers\": [\n            \"Development Status :: 4 - Beta\", \n            \"Framework :: Django\", \n            \"Intended Audience :: Developers\", \n            \"Intended Audience :: System Administrators\", \n            \"License :: OSI Approved :: BSD License\", \n            \"Operating System :: OS Independent\"\n        ], \n        \"name\": \"django-sunset\", \n        \"bugtrack_url\": null, \n        \"license\": \"BSD\", \n        \"summary\": \"Handle Django settings in a bit more organized fashion\", \n        \"home_page\": \"http://github.com/robmadole/django-sunset\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"0.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2010-11-05T16:38:29\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/ee/4a/658334041dde0943266d290354eab2d8a232b257dc296923b3fb18ce826e/django-sunset-0.1.tar.gz\", \n                \"md5_digest\": \"e0377be69415ff767e8cdb26de8560db\", \n                \"downloads\": 3099, \n                \"filename\": \"django-sunset-0.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"ee/4a/658334041dde0943266d290354eab2d8a232b257dc296923b3fb18ce826e/django-sunset-0.1.tar.gz\", \n                \"size\": 9052\n            }\n        ], \n        \"0.3\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2011-03-31T15:41:11\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/6a/d3/3d545d3dff7ad1dabe6d30291c461bf50f95081e9eab72b09b5811d0d845/django-sunset-0.3.tar.gz\", \n                \"md5_digest\": \"1a35d8dc904d7a8f145c566a7933877f\", \n                \"downloads\": 3487, \n                \"filename\": \"django-sunset-0.3.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"6a/d3/3d545d3dff7ad1dabe6d30291c461bf50f95081e9eab72b09b5811d0d845/django-sunset-0.3.tar.gz\", \n                \"size\": 9649\n            }\n        ], \n        \"0.2\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2010-11-24T21:21:26\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/f4/e6/1fedddbd62a3bb5c8498bc3acdd578065566f40f78241202d47d608712cc/django-sunset-0.2.tar.gz\", \n                \"md5_digest\": \"1add9f38ed479c44889d56543f65bc1b\", \n                \"downloads\": 2672, \n                \"filename\": \"django-sunset-0.2.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"f4/e6/1fedddbd62a3bb5c8498bc3acdd578065566f40f78241202d47d608712cc/django-sunset-0.2.tar.gz\", \n                \"size\": 11919\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2011-03-31T15:41:11\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/6a/d3/3d545d3dff7ad1dabe6d30291c461bf50f95081e9eab72b09b5811d0d845/django-sunset-0.3.tar.gz\", \n            \"md5_digest\": \"1a35d8dc904d7a8f145c566a7933877f\", \n            \"downloads\": 3487, \n            \"filename\": \"django-sunset-0.3.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"6a/d3/3d545d3dff7ad1dabe6d30291c461bf50f95081e9eab72b09b5811d0d845/django-sunset-0.3.tar.gz\", \n            \"size\": 9649\n        }\n    ]\n}"}, "headers": {"Server": ["nginx/1.10.3"], "Content-Type": ["application/json; charset=\"UTF-8\""], "Content-Disposition": ["inline"], "X-PYPI-LAST-SERIAL": ["2860000"], "Cache-Control": ["max-age=600, public"], "Access-Control-Allow-Origin": ["*"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Via": ["1.1 varnish", "1.1 varnish"], "Fastly-Debug-Digest": ["fdd6caa2f598ee83872d79e82d635074faf96b24da192977c3bcc9834bd1a6d2"], "Content-Length": ["14462"], "Accept-Ranges": ["bytes"], "Date": ["Tue, 09 May 2017 15:49:34 GMT"], "Age": ["70736"], "Connection": ["keep-alive"], "X-Served-By": ["cache-iad2120-IAD, cache-hhn1531-HHN"], "X-Cache": ["HIT, MISS"], "X-Cache-Hits": ["1, 0"], "X-Timer": ["S1494344974.275079,VS0,VE88"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Content-Type-Options": ["nosniff"], "X-Permitted-Cross-Domain-Policies": ["none"]}, "status": {"code": 200, "message": "OK"}, "url": "https://pypi.python.org/pypi/django-sunset/json"}, "recorded_at": "2017-05-09T15:49:34"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "http://github.com/robmadole/django-sunset"}, "response": {"body": {"encoding": null, "string": ""}, "headers": {"Content-length": ["0"], "Location": ["https://github.com/robmadole/django-sunset"], "Connection": ["close"]}, "status": {"code": 301, "message": "Moved Permanently"}, "url": "http://github.com/robmadole/django-sunset"}, "recorded_at": "2017-05-09T15:49:34"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://github.com/robmadole/django-sunset"}, "response": {"body": {"encoding": "utf-8", "base64_string": ""}, "headers": {"Server": ["GitHub.com"], "Date": ["Tue, 09 May 2017 15:49:35 GMT"], "Content-Type": ["text/html; charset=utf-8"], "Transfer-Encoding": ["chunked"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Vary": ["X-PJAX", "Accept-Encoding"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Set-Cookie": ["logged_in=no; domain=.github.com; path=/; expires=Sat, 09 May 2037 15:49:35 -0000; secure; HttpOnly", "_gh_sess=eyJzZXNzaW9uX2lkIjoiOWM0OTdjMzhiM2JkODcyNWZlZjRjYTJkZGYxZDIyMWUiLCJzcHlfcmVwbyI6InJvYm1hZG9sZS9kamFuZ28tc3Vuc2V0Iiwic3B5X3JlcG9fYXQiOjE0OTQzNDQ5NzUsIl9jc3JmX3Rva2VuIjoiNUFZQnY2dEkrVncvTzJMQ2VJWHJVR1NUUWxMQS9Yc2R2T2dwdDloVnVjVT0iLCJmbGFzaCI6eyJkaXNjYXJkIjpbImFuYWx5dGljc19sb2NhdGlvbiJdLCJmbGFzaGVzIjp7ImFuYWx5dGljc19sb2NhdGlvbiI6Ii88dXNlci1uYW1lPi88cmVwby1uYW1lPiJ9fX0%3D--c6b7dfa593d6441ed50549ee58fed3e44ab5dbdc; path=/; secure; HttpOnly"], "X-Request-Id": ["5bb659986d9d4dbdd4665a252e4cdbfe"], "X-Runtime": ["0.364029"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Served-By": ["29885c8097c6d503a86029451b2e021c"], "Content-Encoding": ["gzip"], "X-GitHub-Request-Id": ["D814:35A5:606DE13:8F829CF:5911E50E"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/robmadole/django-sunset"}, "recorded_at": "2017-05-09T15:49:35"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "Cookie": ["logged_in=no; _gh_sess=eyJzZXNzaW9uX2lkIjoiOWM0OTdjMzhiM2JkODcyNWZlZjRjYTJkZGYxZDIyMWUiLCJzcHlfcmVwbyI6InJvYm1hZG9sZS9kamFuZ28tc3Vuc2V0Iiwic3B5X3JlcG9fYXQiOjE0OTQzNDQ5NzUsIl9jc3JmX3Rva2VuIjoiNUFZQnY2dEkrVncvTzJMQ2VJWHJVR1NUUWxMQS9Yc2R2T2dwdDloVnVjVT0iLCJmbGFzaCI6eyJkaXNjYXJkIjpbImFuYWx5dGljc19sb2NhdGlvbiJdLCJmbGFzaGVzIjp7ImFuYWx5dGljc19sb2NhdGlvbiI6Ii88dXNlci1uYW1lPi88cmVwby1uYW1lPiJ9fX0%3D--c6b7dfa593d6441ed50549ee58fed3e44ab5dbdc"]}, "method": "GET", "uri": "https://github.com/robmadole/django-sunset"}, "response": {"body": {"encoding": "utf-8", "base64_string": ""}, "headers": {"Server": ["GitHub.com"], "Date": ["Tue, 09 May 2017 15:49:35 GMT"], "Content-Type": ["text/html; charset=utf-8"], "Transfer-Encoding": ["chunked"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Vary": ["X-PJAX"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "X-Request-Id": ["5bd62cb9ad82974ab823d265d334e1ba"], "X-Runtime": ["0.164081"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "Content-Encoding": ["gzip"], "X-GitHub-Request-Id": ["D814:35A5:606DE68:8F82A37:5911E50F"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/robmadole/django-sunset"}, "recorded_at": "2017-05-09T15:49:35"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://raw.githubusercontent.com/robmadole/django-sunset/master/NEWS.txt"}, "response": {"body": {"encoding": "utf-8", "base64_string": "H4sIAAAAAAAAA22PTU/DMAyG7/kVPrJpndqOgTSJAwIJcWBCfJyRaUybrY0rx900fj1Jp0lDkEMU2bHf51nTPpibeIzJ5wuTZZkx0xdqCQOBRcUVLIrsCSUr86KYxibcWksWXO1Z6KNzIThfw5YOexYLKPXQkdcZ7F3bgmeFiru+RecBP3lQQGg4qMeO4DT8JdyBNgTCLQW40Ab9NsCb4M4FuGsSSxh6koot9Uw6SbTlX1paQXmZrXmXaPOR9r1PdQuWqxEM1bEHEmEJIFSj2IRgaQdKCVTPCB4Gr5HgVQW/bZicrTuSdmyHlkA54fUsCjJ4n/bdb9DXfDTbO22ifhLshTdUKVxgjWNpjInzx6SU8HzQJhKW8+tZvK5mgN7Gx/IUkdSLf9Xz5W/1R+/UYRstx1/G/AAF7FS37QEAAA=="}, "headers": {"Content-Security-Policy": ["default-src 'none'; style-src 'unsafe-inline'"], "Strict-Transport-Security": ["max-age=31536000"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "ETag": ["\"cdc3168bb74f7c8eb9aa8ccb7482880806c2ec63\""], "Content-Type": ["text/plain; charset=utf-8"], "Cache-Control": ["max-age=300"], "X-Geo-Block-List": [""], "X-GitHub-Request-Id": ["59B6:0220:2DDD0DF:2FB5CC9:5911E50F"], "Content-Encoding": ["gzip"], "Content-Length": ["319"], "Accept-Ranges": ["bytes"], "Date": ["Tue, 09 May 2017 15:49:36 GMT"], "Via": ["1.1 varnish"], "Connection": ["keep-alive"], "X-Served-By": ["cache-hhn1543-HHN"], "X-Cache": ["MISS"], "X-Cache-Hits": ["0"], "X-Timer": ["S1494344976.082748,VS0,VE121"], "Vary": ["Authorization,Accept-Encoding"], "Access-Control-Allow-Origin": ["*"], "X-Fastly-Request-ID": ["b736f5d448f40844ebc8ebf2ee9c7bb7e500bba9"], "Expires": ["Tue, 09 May 2017 15:54:36 GMT"], "Source-Age": ["0"]}, "status": {"code": 200, "message": "OK"}, "url": "https://raw.githubusercontent.com/robmadole/django-sunset/master/NEWS.txt"}, "recorded_at": "2017-05-09T15:49:36"}], "recorded_with": "betamax/0.8.0"}