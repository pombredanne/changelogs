{"http_interactions": [{"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://pypi.python.org/pypi/gyroid/json"}, "response": {"body": {"encoding": "UTF-8", "string": "{\n    \"info\": {\n        \"maintainer\": null, \n        \"docs_url\": \"http://pythonhosted.org/gyroid/\", \n        \"requires_python\": null, \n        \"maintainer_email\": null, \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": null, \n        \"package_url\": \"http://pypi.python.org/pypi/gyroid\", \n        \"author\": \"Yi-Xin Liu\", \n        \"author_email\": \"liuyxpp@gmail.com\", \n        \"download_url\": \"UNKNOWN\", \n        \"platform\": \"UNKNOWN\", \n        \"version\": \"0.4\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"gyroid\\n======\\n\\n**gyroid** is a python package that generates *symmetry adapted basis functions* based on the space group of a unit cell.\\n\\nQuickstart\\n----------\\n\\n1. Install\\n^^^^^^^^^^\\n\\n::\\n\\n    $ easy_install gyroid\\n\\nor\\n\\n::\\n\\n    $ tar -xvf gyroid-xxx.tar.gz\\n    $ cd gyroid-xxx\\n    $ python setup.py install\\n\\nRequired packages:\\n\\n* `numpy`: it should be installed before installing gyroid.\\n* `scipy`: use it to save data in Matlab mat format.\\n* `matplotlib`: 2D Graphic plotting.\\n* `mayavi`: it depends on many packages, e.g. VTK (compiled with python wrapper and shared library on). If you do not need the render_structure_3d functionality, simply ignore it.\\n\\n2. Usage\\n^^^^^^^^\\n\\nFollowing is a typical usange of the package. It will produce a set of SABFs with point group Ia-3d (#230) in a cubic unit cell. The last line will syntheses a gyroid structure with all coefficients for SABF equal to 1.0, save the structure data into a Matlab mat file, show a screenshot of the rendered image and save the image in a file.\\n\\n>>> import gyroid as gy\\n>>> import numpy as np\\n>>> N1,N2,N3 = 32,32,32\\nnumber of grids in each dimension of a unit cell\\n>>> uc = gy.UnitCell(3)\\ncreate a standard cubic unit cell with side length 1.0\\n>>> group = gy.Group(3,gy.BRAVAIS,uc.shape,\\\"Ia-3d\\\")\\ncreate a Ia-3d point group\\n>>> grid = gy.Grid(np.array([N1,N2,N3]),group)\\ncreate a collection of waves that are not canceled\\n>>> basis = gy.Basis(group,grid)\\ncreate the SABFs\\n>>> gy.render_structure_3d(basis,grid,N1,N2,N3,1.0)\\ncreate the gyroid structure and render it\\n\\nAsk for Help\\n------------\\n\\n* You can directly contact me at liuyxpp@gmail.com.\\n* You can join the mailinglist by sending an email to gyroid@librelist.com and replying to the confirmation mail. To unsubscribe, send a mail to gyroid-unsubscribe@librelist.com and reply to the confirmation mail.\\n\\nLinks\\n-----\\n\\n* `Documentation <http://packages.python.org/gyroid>`_\\n* `Website <http://liuyxpp.bitbucket.org>`_\\n* `Development version <http://bitbucket.org/liuyxpp/gyroid/>`_\", \n        \"release_url\": \"http://pypi.python.org/pypi/gyroid/0.4\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 3, \n        \"classifiers\": [\n            \"Development Status :: 4 - Beta\", \n            \"Environment :: Console\", \n            \"Environment :: X11 Applications\", \n            \"Intended Audience :: Developers\", \n            \"Intended Audience :: Education\", \n            \"Intended Audience :: Science/Research\", \n            \"License :: OSI Approved :: BSD License\", \n            \"Operating System :: POSIX :: Linux\", \n            \"Programming Language :: Python\", \n            \"Topic :: Education\", \n            \"Topic :: Multimedia :: Graphics\", \n            \"Topic :: Scientific/Engineering\"\n        ], \n        \"name\": \"gyroid\", \n        \"bugtrack_url\": null, \n        \"license\": \"BSD\", \n        \"summary\": \"A symmetry adapted basis function (SABF) generator.\", \n        \"home_page\": \"https://bitbucket.org/liuyxpp/gyroid\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"0.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2012-03-23T11:16:37\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/7c/3e/5bed4b63ba34c34e244eb7e4b77bc1f2858b167716d5caa956c485cbfdb3/gyroid-0.1.tar.gz\", \n                \"md5_digest\": \"13d8a2a8d6d64973c42a69b3854900bb\", \n                \"downloads\": 3044, \n                \"filename\": \"gyroid-0.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"7c/3e/5bed4b63ba34c34e244eb7e4b77bc1f2858b167716d5caa956c485cbfdb3/gyroid-0.1.tar.gz\", \n                \"size\": 654805\n            }\n        ], \n        \"0.3\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2012-03-28T07:35:11\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/7f/76/556fccef934aef91cb79bc1d6be17cc7af3b40bf53e20ccc861e42d8807a/gyroid-0.3.tar.gz\", \n                \"md5_digest\": \"ed2ff24ec833f31d7761a429ca992bde\", \n                \"downloads\": 2575, \n                \"filename\": \"gyroid-0.3.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"7f/76/556fccef934aef91cb79bc1d6be17cc7af3b40bf53e20ccc861e42d8807a/gyroid-0.3.tar.gz\", \n                \"size\": 205758\n            }\n        ], \n        \"0.2\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2012-03-25T11:11:34\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/2e/17/b98dc03dc239a6f4bb4c29743561d8dedbdd7f9711716009957ae57bf36a/gyroid-0.2.tar.gz\", \n                \"md5_digest\": \"d075476f17144b38957507db4d60a9aa\", \n                \"downloads\": 2645, \n                \"filename\": \"gyroid-0.2.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"2e/17/b98dc03dc239a6f4bb4c29743561d8dedbdd7f9711716009957ae57bf36a/gyroid-0.2.tar.gz\", \n                \"size\": 658422\n            }\n        ], \n        \"0.4\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2012-04-19T11:14:48\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/61/7b/65a3beb965b434d3003bdc218b9cd2418b21aa003343419306e79ca9bfb2/gyroid-0.4.tar.gz\", \n                \"md5_digest\": \"3dbe666c435908dbea46f7d8f474ff9d\", \n                \"downloads\": 3000, \n                \"filename\": \"gyroid-0.4.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"61/7b/65a3beb965b434d3003bdc218b9cd2418b21aa003343419306e79ca9bfb2/gyroid-0.4.tar.gz\", \n                \"size\": 316787\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2012-04-19T11:14:48\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/61/7b/65a3beb965b434d3003bdc218b9cd2418b21aa003343419306e79ca9bfb2/gyroid-0.4.tar.gz\", \n            \"md5_digest\": \"3dbe666c435908dbea46f7d8f474ff9d\", \n            \"downloads\": 3000, \n            \"filename\": \"gyroid-0.4.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"61/7b/65a3beb965b434d3003bdc218b9cd2418b21aa003343419306e79ca9bfb2/gyroid-0.4.tar.gz\", \n            \"size\": 316787\n        }\n    ]\n}"}, "headers": {"Server": ["nginx/1.10.3"], "Content-Type": ["application/json; charset=\"UTF-8\""], "Content-Disposition": ["inline"], "X-PYPI-LAST-SERIAL": ["2860800"], "Cache-Control": ["max-age=600, public"], "Access-Control-Allow-Origin": ["*"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Via": ["1.1 varnish", "1.1 varnish"], "Fastly-Debug-Digest": ["5162b9a95bf007d850c4941238ebe0b22c59d96d7d817c8bcb4bb29f47e85e55"], "Content-Length": ["7273"], "Accept-Ranges": ["bytes"], "Date": ["Tue, 09 May 2017 15:49:46 GMT"], "Age": ["37367"], "Connection": ["keep-alive"], "X-Served-By": ["cache-iad2131-IAD, cache-hhn1535-HHN"], "X-Cache": ["HIT, MISS"], "X-Cache-Hits": ["1, 0"], "X-Timer": ["S1494344986.200793,VS0,VE90"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Content-Type-Options": ["nosniff"], "X-Permitted-Cross-Domain-Policies": ["none"]}, "status": {"code": 200, "message": "OK"}, "url": "https://pypi.python.org/pypi/gyroid/json"}, "recorded_at": "2017-05-09T15:49:46"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://bitbucket.org/liuyxpp/gyroid/src/"}, "response": {"body": {"encoding": "utf-8", "base64_string": ""}, "headers": {"Server": ["nginx"], "Vary": ["Accept-Language, Cookie, Accept-Encoding"], "Cache-Control": ["max-age=900"], "Content-Type": ["text/html; charset=utf-8"], "Content-Encoding": ["gzip"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains; preload"], "Date": ["Tue, 09 May 2017 15:49:47 GMT"], "X-Served-By": ["app-104"], "Transfer-Encoding": ["chunked"], "Content-Language": ["en"], "X-Static-Version": ["8158c1535379"], "X-Content-Type-Options": ["nosniff"], "X-Render-Time": ["0.575274944305"], "Connection": ["keep-alive"], "X-Request-Count": ["306"], "X-Frame-Options": ["SAMEORIGIN"], "X-Version": ["8158c1535379"], "X-Cache-Info": ["caching"]}, "status": {"code": 200, "message": "OK"}, "url": "https://bitbucket.org/liuyxpp/gyroid/src/"}, "recorded_at": "2017-05-09T15:49:47"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "http://bitbucket.org/liuyxpp/gyroid/src/"}, "response": {"body": {"encoding": "ISO-8859-1", "string": ""}, "headers": {"Content-Type": ["text/html"], "Date": ["Tue, 09 May 2017 15:49:47 GMT"], "Location": ["https://bitbucket.org/liuyxpp/gyroid/src/"], "Connection": ["Keep-Alive"], "Content-Length": ["0"]}, "status": {"code": 301, "message": "Moved Permanently"}, "url": "http://bitbucket.org/liuyxpp/gyroid/src/"}, "recorded_at": "2017-05-09T15:49:47"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://bitbucket.org/liuyxpp/gyroid/src/"}, "response": {"body": {"encoding": "utf-8", "base64_string": ""}, "headers": {"Server": ["nginx"], "Vary": ["Accept-Language, Cookie, Accept-Encoding"], "Cache-Control": ["max-age=900"], "Content-Type": ["text/html; charset=utf-8"], "Content-Encoding": ["gzip"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains; preload"], "Date": ["Tue, 09 May 2017 15:49:47 GMT"], "X-Served-By": ["app-104"], "Transfer-Encoding": ["chunked"], "Content-Language": ["en"], "X-Static-Version": ["8158c1535379"], "X-Content-Type-Options": ["nosniff"], "X-Render-Time": ["0.575274944305"], "Connection": ["Keep-Alive"], "X-Request-Count": ["306"], "X-Frame-Options": ["SAMEORIGIN"], "X-Version": ["8158c1535379"], "X-Cache-Info": ["cached"]}, "status": {"code": 200, "message": "OK"}, "url": "https://bitbucket.org/liuyxpp/gyroid/src/"}, "recorded_at": "2017-05-09T15:49:48"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://bitbucket.org/liuyxpp/gyroid/raw/520c7f85f13e577a511714664264db0cd32c38b0/CHANGELOG.txt"}, "response": {"body": {"encoding": "ISO-8859-1", "string": "gyroid Changelog\n===============\n\nHere you can see the full list of changes between each gyroid release.\n\n\nVersion 0.4\n-----------\n\n* Add more symmetry groups, namely #1-#6 in 2D, and #229 in 3D.\n* Fix a serious bug within basis._select_waves related to G^2 comparison.\n* Other small fixes.\n\n\nVersion 0.3\n-----------\n\n* Basis.generate_structure now be replaced by Basis.generate_structure_by_fft. It is much faster.\n* Add two methods in Basis, sabf2fft and fft2sabf\n* Documentaion has been greatly improved.\n\n\nVersion 0.2\n-----------\n\n* Made several optimizations. Speedup x 10+. \n* Fix a serious bug in Basis. This bug will lead to generate stars failed when there are more than one closed stars or an open star pairs for a certain magnitude of the wave vector.\n* Fix a bug in Basis.generate_sturcture which leads to wrong period.\n\n\nVersion 0.1\n-----------\n\n* Released at 2012.3.23.\n"}, "headers": {"Server": ["nginx"], "Vary": ["Accept-Language, Cookie"], "Cache-Control": ["max-age=900"], "Content-Type": ["text/plain"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains; preload"], "Date": ["Tue, 09 May 2017 15:49:48 GMT"], "X-Served-By": ["app-104"], "Content-Language": ["en"], "Accept-Ranges": ["bytes"], "ETag": ["\"7167cb4d61f558af011ddc1397961d9e\""], "X-Static-Version": ["8158c1535379"], "X-Content-Type-Options": ["nosniff"], "X-Render-Time": ["0.0391449928284"], "Connection": ["keep-alive"], "X-Request-Count": ["564"], "Last-Modified": ["Mon, 21 May 2012 12:28:47 GMT"], "X-Version": ["8158c1535379"], "X-Frame-Options": ["SAMEORIGIN"], "X-Cache-Info": ["caching"], "Content-Length": ["884"]}, "status": {"code": 200, "message": "OK"}, "url": "https://bitbucket.org/liuyxpp/gyroid/raw/520c7f85f13e577a511714664264db0cd32c38b0/CHANGELOG.txt"}, "recorded_at": "2017-05-09T15:49:48"}], "recorded_with": "betamax/0.8.0"}