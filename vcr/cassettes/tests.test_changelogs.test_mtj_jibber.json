{"http_interactions": [{"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://pypi.python.org/pypi/mtj_jibber/json"}, "response": {"body": {"encoding": null, "string": ""}, "headers": {"Server": ["nginx/1.10.3"], "Location": ["/pypi/mtj.jibber/json"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Via": ["1.1 varnish", "1.1 varnish"], "Fastly-Debug-Digest": ["1da291aa54db3e4910ac7794c11c2e9a9160506f3b541d52886f3991976170a5"], "Content-Length": ["0"], "Accept-Ranges": ["bytes"], "Date": ["Tue, 09 May 2017 15:51:03 GMT"], "Age": ["0"], "Connection": ["keep-alive"], "X-Served-By": ["cache-iad2146-IAD, cache-hhn1541-HHN"], "X-Cache": ["MISS, MISS"], "X-Cache-Hits": ["0, 0"], "X-Timer": ["S1494345064.679941,VS0,VE107"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Content-Type-Options": ["nosniff"], "X-Permitted-Cross-Domain-Policies": ["none"]}, "status": {"code": 301, "message": "Moved Permanently"}, "url": "https://pypi.python.org/pypi/mtj_jibber/json"}, "recorded_at": "2017-05-09T15:51:03"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://pypi.python.org/pypi/mtj.jibber/json"}, "response": {"body": {"encoding": "UTF-8", "string": "{\n    \"info\": {\n        \"maintainer\": null, \n        \"docs_url\": null, \n        \"requires_python\": null, \n        \"maintainer_email\": null, \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": \"\", \n        \"package_url\": \"http://pypi.python.org/pypi/mtj.jibber\", \n        \"author\": \"Tommy Yu\", \n        \"author_email\": \"y@metatoaster.com\", \n        \"download_url\": \"UNKNOWN\", \n        \"platform\": \"UNKNOWN\", \n        \"version\": \"0.4\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"Introduction\\n============\\n\\nmtj.jibber is a package that can be used to streamline the process of\\nproviding automagical useless bantering onto your friendly neighbourhood\\nrooms (multi-user chat or MUCS) on all the Jabber (XMPP) servers.\\n\\nIt's jibber jabber time.\\n\\n.. image:: https://travis-ci.org/metatoaster/mtj.jibber.svg?branch=0.4.x\\n   :target: https://travis-ci.org/metatoaster/mtj.jibber\\n.. image:: https://coveralls.io/repos/metatoaster/mtj.jibber/badge.svg?branch=0.4.x\\n   :target: https://coveralls.io/r/metatoaster/mtj.jibber?branch=0.4.x\\n\\nInstallation\\n============\\n\\nThis is a piece of cake.  Get a virtualenv running, and do this:\\n\\n.. code:: sh\\n\\n    $ pip install mtj.jibber\\n\\nThis installs the latest stable release version of this package from\\nthe Python Package Index (pypi).  If you wish to do so, you should\\nfollow the `documentation on that index page`_.\\n\\n.. _documentation on that index page: https://pypi.python.org/pypi/mtj.jibber\\n\\nAlternatively, if you want to hack and develop on this, please feel free\\nto make a fork and clone that or clone directly from this fork.\\nNaturally I will assume you got a virtualenv setup, too:\\n\\n.. code:: sh\\n\\n    $ git clone https://github.com/metatoaster/mtj.jibber.git\\n    $ cd mtj.jibber\\n    $ python setup.py develop\\n\\nOf course, in that case you should follow the documentation as listed\\nin the README.rst found at the root of the source repository.\\n\\nQuick Start Tutorial\\n====================\\n\\nThe original reason for making this is to allow much modularity and very\\neasy usage.  To demonstrate this, get this package installed and get the\\ndefault configuration files generated like so:\\n\\n.. code:: sh\\n\\n    $ jibber --gen-config server > server.config.json\\n    $ jibber --gen-config client > client.config.json\\n\\nNow you can start the bot like so:\\n\\n.. code:: sh\\n\\n    $ jibber server.config.json client.config.json debug\\n    Starting interactive shell. `bot` is bound to the MucBot object.\\n    Try calling bot.connect() to connect to the server specified in config file.\\n    Note: process will NOT terminate if bot.is_alive() is False!\\n    Alternatively call bot_test() to test here locally.\\n    >>>\\n\\nSo the interactive shell should have started like it did above if this\\npackage was installed correctly.  Now you can issue the command:\\n\\n.. code:: python\\n\\n    >>> bot_test()\\n    Test client ready; call client('Hello bot') to interact.\\n    >>>\\n\\nA new function is provided for you to interact with the bot, you can\\njust follow the prompt:\\n\\n.. code:: python\\n\\n    >>> client('Hello bot')\\n    2013-11-01 00:00:51,316 INFO mtj.jibber.testing hi Tester\\n    >>>\\n\\nThe test client doesn't have any connection to any servers, so all the\\ninteractions will just end up being shown in the log at the INFO level.\\nThis can be useful for your final integration testing.\\n\\nOf course, you want the bot to do more than this, let's look at the\\nclient config file.\\n\\nClient Config\\n-------------\\n\\nThe packages object contain the list of \\\"packages\\\" that will be\\ninstantiated for the bot to use.  The keys follow:\\n\\npackage\\n    The full path to the class (or any callables that return an\\n    instance of one).\\nkwargs\\n    The keyword arguments that will be passed into that call.\\ncommands\\n    A 2-tuple (well, list, this is JSON after all) of regex string,\\n    method.  The method is a callable attribute will be provided by\\n    the object returned by the calling ``package(**kwargs)``.  The\\n    regex can contain some string format keywords, most notably\\n    ``nickname`` which is the nickname assigned to the bot.\\n    Commands only get executed to the maximum commands limit, and\\n    the bot will not try to match something it says with the ones\\n    here.\\ncommentators\\n    Exactly like commands, except the bot will try to comment on\\n    things it says up to a limit.  Default is sane, I am not going\\n    to teach you how to override that because hilarious infinite\\n    loops can happen\\nlisteners\\n    All messages passed to the bot will be listened, but no output\\n    will be sent.\\ntimers\\n    A list of objects that will be used to instantiate repeated\\n    commands at a delay.  This is somewhat advanced and not\\n    covered here.  The test cases might explain how this works.\\n\\nThe commands_max_match can be defined to match up to that amount of\\ncommands, i.e. the commands will not further cascade down once that\\namount is reached.  This is useful if you have a situation where a\\nsignificant amount of triggers overlap.\\n\\nNow, you might want to extend the bot to do more.  Let's try something\\nadding something else to the list of packages (remember your JSON comma\\nplacements!):\\n\\n.. code:: json\\n\\n    {\\n        \\\"package\\\": \\\"mtj.jibber.bot.PickOne\\\",\\n        \\\"kwargs\\\": {\\\"items\\\": [\\n            \\\"red!\\\", \\\"orange!\\\", \\\"yellow!\\\", \\\"green!\\\", \\\"blue!\\\", \\\"violet!\\\"]},\\n        \\\"commands\\\": [\\n            [\\\"^rainbow (color|colour)!$\\\", \\\"play\\\"]\\n        ]\\n    }\\n\\nThe PickOne class has a play method that picks one of the items with an\\nequal chance for all.  In this case a command that matches either\\n`rainbow color!` or `rainbow colour!` and respond with one of the six\\nitems specified.  Demo run:\\n\\n.. code:: python\\n\\n    >>> client('rainbow color!')\\n    2013-11-01 00:01:31,965 INFO mtj.jibber.testing violet!\\n    >>> client('rainbow colour!')\\n    2013-11-01 00:01:33,981 INFO mtj.jibber.testing orange!\\n\\nThere is another one that is similar:\\n\\n.. code:: json\\n\\n    {\\n        \\\"package\\\": \\\"mtj.jibber.bot.ChanceGame\\\",\\n        \\\"kwargs\\\": {\\\"chance_table\\\": [\\n            [0.125, \\\"%(mucnick)s: BOOM\\\"], [1, \\\"%(mucnick)s: click\\\"]\\n        ]},\\n        \\\"commands\\\": [\\n            [\\\"^%(nickname)s: rr$\\\", \\\"play\\\"]\\n        ]\\n    }\\n\\nThis one is similar to PickOne, except with the allowance of a chance\\nwhich is specified in the first element of the 2-tuple.  The roll is a\\nrandom real number between 0 and 1 inclusive, and thus the matching is\\ndone by cascading downwards on that list for a match.  Match is done by\\nchecking whether the number is less than the chance number.  If match,\\nthe corresponding result is returned.  Demo run:\\n\\n.. code:: python\\n\\n    >>> client('bot: rr')\\n    2013-11-01 00:02:11,647 INFO mtj.jibber.testing Tester: click\\n    >>> client('bot: rr')\\n    2013-11-01 00:02:12,714 INFO mtj.jibber.testing Tester: click\\n    >>> client('bot: rr')\\n    2013-11-01 00:02:12,822 INFO mtj.jibber.testing Tester: click\\n    >>> client('bot: rr')\\n    2013-11-01 00:02:13,006 INFO mtj.jibber.testing Tester: BOOM\\n\\nAlso note how it is possible to specify string format keywords here.\\nThe most useful one would be mucnick, which correspond to the user\\nwho sent the line.  These are based on the msg stanzas used by sleekxmpp\\nso for all details check the relevant documentation (or clever\\nbreakpoint placements).\\n\\nFor completeness, if you had followed the above instructions your\\nconfiguration should look similar to the output generated by this\\ncommand:\\n\\n.. code:: sh\\n\\n    $ jibber --gen-config client_example\\n\\nOh yeah, you can naturally develop your own modules that do things you\\nwant your bot to do.  Feel free to use the classes in mtj.jibber.bot as\\nyour starting point, and as a further example on how to build a package\\nwith your custom commands, please take a look at `mtj.jibberext`_.\\n\\n.. _mtj.jibberext: https://github.com/metatoaster/mtj.jibberext\\n\\nServer Config\\n-------------\\n\\nThe server configuration should be simple.  It is done this way to split\\nout the connection settings from the actual bot settings you may wish to\\npass onto your friends.  The keys as follows:\\n\\njid\\n    The jid that is used to connect to the server.\\npassword\\n    Password associated with the jid\\nhost\\n    The host used to connect to the server.  Optional as this can\\n    be derived from jid, but quite often the actual host is often\\n    different so this usually needs to be specified.\\nport\\n    Defaults to 5222.\\n\\nRemaining keys are passed into the connect method for a sleekxmpp client\\ninstance.  Refer to documentations over there if you are curious on what\\nthey are.\\n\\nDoing it live\\n-------------\\n\\nFill out the correct information (the jid/password/host and the rooms\\nyou wish your bot to join) and then you can call ``bot.connect()``!\\nAlternatively you can replace ``debug`` with ``fg`` to have it connect\\nright away and ditch the interactive shell.\\n\\nBonus\\n-----\\n\\nIf you find yourself constantly restarting the bot completely because a\\nsingle line of code or setting was changed and also finding this process\\ntiresome, there is a helper method in the debug shell that will reload\\nthe client configuration file and all modules with the associated timers\\nand triggers with just one function call:\\n\\n.. code:: python\\n\\n    >>> bot_reinit()\\n    Successfully reinitialized bot configuration and modules.\\n    >>>\\n\\nDo note: this function is potentially unsafe.  Syntax errors in the\\nconfiguration or the modules that got added after the bot has started\\nwill be raised as exceptions and loading is aborted, leaving the bot\\nin a fresh but partially instantiated state.  This may or may not cause\\nproblems specific to the code/modules you have loaded with the bot.\\n\\nChangelog\\n=========\\n\\n0.4 - 2015-09-12\\n----------------\\n\\n- Fully require the ``bot`` argument for all methods.\\n- Support hooking up handlers to lower level events, making it possible\\n  to hook that up via the config file to available module/class paths.\\n  This is implemented in the ``presence`` module.\\n- For the mean time ``Presence`` is the new base ``Handler`` for the\\n  lower level events.\\n- First such handler is the automatic rejoin when bot is no longer in\\n  a channel, implemented in the ``Muc`` class.\\n- Another one is greeter, implemented in the ``MucGreeter`` class.\\n- The ``Command`` class is now a subclass of ``Handler``; that is now\\n  the class that will be checked.  In the future this requirement may\\n  be dropped once validation of argument signature for the provided\\n  callables can be done.\\n- A ``LastActivity`` feature; can be used as a ``!seen`` trigger to\\n  get back a rough idea on when the user was last seen.  This intends to\\n  be a demo implementation.\\n- Test client class now supports scheduling properly; clear method now\\n  works as intended.\\n- Other minor cleanup and updated tests.\\n\\n0.3 - 2014-10-08\\n----------------\\n\\n- ``MucChatBot.send_message`` now much more resistant to malformed\\n  messages generated by package method, and now allow overriding of both\\n  ``mbody`` and ``mhtml`` arguments which will cascade down to the real\\n  ``send_message`` method, if bot authors want complete output control.\\n- Consistently handle lists that may be generated by package_methods in\\n  the same way as a single text or dict.\\n- No longer will assign a reference to ``bot`` for every instances of\\n  ``Command`` class.\\n\\n0.2 - 2014-02-27\\n----------------\\n\\n- Private chat message handling for private message commands.\\n- Core configuration file generation from the jibber shell command.\\n- Helper method for dynamic module reloading within debug mode.\\n\\n\\n0.1 - 2013-11-14\\n----------------\\n\\n- Core functions implemented, including connect to XMPP server as a muc\\n  client, and to provide trigger handlers and dynamic module/object\\n  loaders so those triggers can make something happen.\", \n        \"release_url\": \"http://pypi.python.org/pypi/mtj.jibber/0.4\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 3, \n        \"classifiers\": [\n            \"Development Status :: 4 - Beta\", \n            \"Environment :: Console\", \n            \"Intended Audience :: Developers\", \n            \"License :: OSI Approved :: MIT License\", \n            \"Programming Language :: Python\", \n            \"Programming Language :: Python :: 2.7\", \n            \"Programming Language :: Python :: 3.3\", \n            \"Programming Language :: Python :: 3.4\", \n            \"Programming Language :: Python :: Implementation :: PyPy\", \n            \"Topic :: Internet\", \n            \"Topic :: Utilities\"\n        ], \n        \"name\": \"mtj.jibber\", \n        \"bugtrack_url\": \"\", \n        \"license\": \"mit\", \n        \"summary\": \"A very easy to use, simple to extend jabber bot framework.\", \n        \"home_page\": \"https://github.com/metatoaster/mtj.jibber/\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"0.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2013-11-14T10:29:57\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/ff/5a/72e246f95ab687f8696284004b427af3e651e812de353d3025b1c2ab9d15/mtj.jibber-0.1.tar.gz\", \n                \"md5_digest\": \"e517a40421404659f8636797d9895f27\", \n                \"downloads\": 2382, \n                \"filename\": \"mtj.jibber-0.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"ff/5a/72e246f95ab687f8696284004b427af3e651e812de353d3025b1c2ab9d15/mtj.jibber-0.1.tar.gz\", \n                \"size\": 13924\n            }\n        ], \n        \"0.3\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2014-10-08T10:20:34\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/85/8a/f485630ef26000447c8cbd8a6eeb6589a54afbe93f5cf90dc853993cdf8d/mtj.jibber-0.3.tar.gz\", \n                \"md5_digest\": \"71254fb6b40fcb56ce7c15e9b4c6b73d\", \n                \"downloads\": 1400, \n                \"filename\": \"mtj.jibber-0.3.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"85/8a/f485630ef26000447c8cbd8a6eeb6589a54afbe93f5cf90dc853993cdf8d/mtj.jibber-0.3.tar.gz\", \n                \"size\": 17956\n            }\n        ], \n        \"0.2\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2014-02-26T12:11:17\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/87/97/6db037129fb591a4f0ba54d644e046612e6d99fe0692e127bffa7d1bea44/mtj.jibber-0.2.tar.gz\", \n                \"md5_digest\": \"b131a41dffdf2b86e5f8aa20ff802493\", \n                \"downloads\": 1972, \n                \"filename\": \"mtj.jibber-0.2.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"87/97/6db037129fb591a4f0ba54d644e046612e6d99fe0692e127bffa7d1bea44/mtj.jibber-0.2.tar.gz\", \n                \"size\": 16357\n            }\n        ], \n        \"0.4\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2015-09-12T03:38:52\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/fe/1c/74cff137fd7e5280e360298a488220c17a3075461060e3c2b0bbf8e206ce/mtj.jibber-0.4.tar.gz\", \n                \"md5_digest\": \"2c8b27ef20d63b0c710bf358ad01c294\", \n                \"downloads\": 767, \n                \"filename\": \"mtj.jibber-0.4.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"fe/1c/74cff137fd7e5280e360298a488220c17a3075461060e3c2b0bbf8e206ce/mtj.jibber-0.4.tar.gz\", \n                \"size\": 25038\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2015-09-12T03:38:52\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/fe/1c/74cff137fd7e5280e360298a488220c17a3075461060e3c2b0bbf8e206ce/mtj.jibber-0.4.tar.gz\", \n            \"md5_digest\": \"2c8b27ef20d63b0c710bf358ad01c294\", \n            \"downloads\": 767, \n            \"filename\": \"mtj.jibber-0.4.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"fe/1c/74cff137fd7e5280e360298a488220c17a3075461060e3c2b0bbf8e206ce/mtj.jibber-0.4.tar.gz\", \n            \"size\": 25038\n        }\n    ]\n}"}, "headers": {"Server": ["nginx/1.10.3"], "Content-Type": ["application/json; charset=\"UTF-8\""], "Content-Disposition": ["inline"], "X-PYPI-LAST-SERIAL": ["2861959"], "Cache-Control": ["max-age=600, public"], "Access-Control-Allow-Origin": ["*"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Via": ["1.1 varnish", "1.1 varnish"], "Fastly-Debug-Digest": ["58465e7492427e2e34a27da655f65f324c609976480fc3b2ab284f2540f89768"], "Content-Length": ["16706"], "Accept-Ranges": ["bytes"], "Date": ["Tue, 09 May 2017 15:51:03 GMT"], "Age": ["151"], "Connection": ["keep-alive"], "X-Served-By": ["cache-iad2137-IAD, cache-hhn1541-HHN"], "X-Cache": ["HIT, MISS"], "X-Cache-Hits": ["1, 0"], "X-Timer": ["S1494345064.813187,VS0,VE88"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Content-Type-Options": ["nosniff"], "X-Permitted-Cross-Domain-Policies": ["none"]}, "status": {"code": 200, "message": "OK"}, "url": "https://pypi.python.org/pypi/mtj.jibber/json"}, "recorded_at": "2017-05-09T15:51:03"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://github.com/metatoaster/mtj.jibber"}, "response": {"body": {"encoding": "utf-8", "base64_string": ""}, "headers": {"Server": ["GitHub.com"], "Date": ["Tue, 09 May 2017 15:51:04 GMT"], "Content-Type": ["text/html; charset=utf-8"], "Transfer-Encoding": ["chunked"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Vary": ["X-PJAX", "Accept-Encoding"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Set-Cookie": ["logged_in=no; domain=.github.com; path=/; expires=Sat, 09 May 2037 15:51:04 -0000; secure; HttpOnly", "_gh_sess=eyJzZXNzaW9uX2lkIjoiZjMyMjlhYjEzNTcxYmYyMWI0NjI5Mjg5NDVmZTI3ODUiLCJzcHlfcmVwbyI6Im1ldGF0b2FzdGVyL210ai5qaWJiZXIiLCJzcHlfcmVwb19hdCI6MTQ5NDM0NTA2NCwiX2NzcmZfdG9rZW4iOiJsV3N0akl0T3hCb09nMGZCZ1JoQkFuSGRpQmVXMVdxV2V1T1ByMmNXVyswPSIsImZsYXNoIjp7ImRpc2NhcmQiOlsiYW5hbHl0aWNzX2xvY2F0aW9uIl0sImZsYXNoZXMiOnsiYW5hbHl0aWNzX2xvY2F0aW9uIjoiLzx1c2VyLW5hbWU%2BLzxyZXBvLW5hbWU%2BIn19fQ%3D%3D--f718aeb2fc41a9a8ea465cce3c2c014265ca9732; path=/; secure; HttpOnly"], "X-Request-Id": ["f54c50ba89350e8c874e94665aef98a4"], "X-Runtime": ["0.556266"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Served-By": ["5b42481b4f9fd7828f4e35d2c7b2fdf0"], "Content-Encoding": ["gzip"], "X-GitHub-Request-Id": ["DA10:35A5:6071F9A:8F88C1B:5911E568"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/metatoaster/mtj.jibber"}, "recorded_at": "2017-05-09T15:51:05"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "Cookie": ["logged_in=no; _gh_sess=eyJzZXNzaW9uX2lkIjoiZjMyMjlhYjEzNTcxYmYyMWI0NjI5Mjg5NDVmZTI3ODUiLCJzcHlfcmVwbyI6Im1ldGF0b2FzdGVyL210ai5qaWJiZXIiLCJzcHlfcmVwb19hdCI6MTQ5NDM0NTA2NCwiX2NzcmZfdG9rZW4iOiJsV3N0akl0T3hCb09nMGZCZ1JoQkFuSGRpQmVXMVdxV2V1T1ByMmNXVyswPSIsImZsYXNoIjp7ImRpc2NhcmQiOlsiYW5hbHl0aWNzX2xvY2F0aW9uIl0sImZsYXNoZXMiOnsiYW5hbHl0aWNzX2xvY2F0aW9uIjoiLzx1c2VyLW5hbWU%2BLzxyZXBvLW5hbWU%2BIn19fQ%3D%3D--f718aeb2fc41a9a8ea465cce3c2c014265ca9732"]}, "method": "GET", "uri": "https://github.com/metatoaster/mtj.jibber.git"}, "response": {"body": {"encoding": "ISO-8859-1", "string": "<html>\r\n<head><title>301 Moved Permanently</title></head>\r\n<body bgcolor=\"white\">\r\n<center><h1>301 Moved Permanently</h1></center>\r\n<hr><center>nginx</center>\r\n</body>\r\n</html>\r\n"}, "headers": {"Server": ["GitHub.com"], "Date": ["Tue, 09 May 2017 15:51:05 GMT"], "Content-Type": ["text/html"], "Content-Length": ["178"], "Location": ["https://github.com/metatoaster/mtj.jibber"], "Vary": ["Accept-Encoding"], "X-GitHub-Request-Id": ["DA10:35A5:607204A:8F88CF7:5911E568"], "X-Frame-Options": ["DENY"]}, "status": {"code": 301, "message": "Moved Permanently"}, "url": "https://github.com/metatoaster/mtj.jibber.git"}, "recorded_at": "2017-05-09T15:51:05"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "Cookie": ["logged_in=no; _gh_sess=eyJzZXNzaW9uX2lkIjoiZjMyMjlhYjEzNTcxYmYyMWI0NjI5Mjg5NDVmZTI3ODUiLCJzcHlfcmVwbyI6Im1ldGF0b2FzdGVyL210ai5qaWJiZXIiLCJzcHlfcmVwb19hdCI6MTQ5NDM0NTA2NCwiX2NzcmZfdG9rZW4iOiJsV3N0akl0T3hCb09nMGZCZ1JoQkFuSGRpQmVXMVdxV2V1T1ByMmNXVyswPSIsImZsYXNoIjp7ImRpc2NhcmQiOlsiYW5hbHl0aWNzX2xvY2F0aW9uIl0sImZsYXNoZXMiOnsiYW5hbHl0aWNzX2xvY2F0aW9uIjoiLzx1c2VyLW5hbWU%2BLzxyZXBvLW5hbWU%2BIn19fQ%3D%3D--f718aeb2fc41a9a8ea465cce3c2c014265ca9732"]}, "method": "GET", "uri": "https://github.com/metatoaster/mtj.jibber"}, "response": {"body": {"encoding": "utf-8", "base64_string": ""}, "headers": {"Server": ["GitHub.com"], "Date": ["Tue, 09 May 2017 15:51:05 GMT"], "Content-Type": ["text/html; charset=utf-8"], "Transfer-Encoding": ["chunked"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Vary": ["X-PJAX"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Set-Cookie": ["_gh_sess=eyJzZXNzaW9uX2lkIjoiZjMyMjlhYjEzNTcxYmYyMWI0NjI5Mjg5NDVmZTI3ODUiLCJzcHlfcmVwbyI6Im1ldGF0b2FzdGVyL210ai5qaWJiZXIiLCJzcHlfcmVwb19hdCI6MTQ5NDM0NTA2NSwiX2NzcmZfdG9rZW4iOiJsV3N0akl0T3hCb09nMGZCZ1JoQkFuSGRpQmVXMVdxV2V1T1ByMmNXVyswPSIsImZsYXNoIjp7ImRpc2NhcmQiOlsiYW5hbHl0aWNzX2xvY2F0aW9uIl0sImZsYXNoZXMiOnsiYW5hbHl0aWNzX2xvY2F0aW9uIjoiLzx1c2VyLW5hbWU%2BLzxyZXBvLW5hbWU%2BIn19fQ%3D%3D--fcf0105eb86431ce675008d93b89834e47f55794; path=/; secure; HttpOnly"], "X-Request-Id": ["086cbe16d233ed286799865e8698d496"], "X-Runtime": ["0.175467"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "Content-Encoding": ["gzip"], "X-GitHub-Request-Id": ["DA10:35A5:6072064:8F88D57:5911E569"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/metatoaster/mtj.jibber"}, "recorded_at": "2017-05-09T15:51:05"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "Cookie": ["logged_in=no; _gh_sess=eyJzZXNzaW9uX2lkIjoiZjMyMjlhYjEzNTcxYmYyMWI0NjI5Mjg5NDVmZTI3ODUiLCJzcHlfcmVwbyI6Im1ldGF0b2FzdGVyL210ai5qaWJiZXIiLCJzcHlfcmVwb19hdCI6MTQ5NDM0NTA2NSwiX2NzcmZfdG9rZW4iOiJsV3N0akl0T3hCb09nMGZCZ1JoQkFuSGRpQmVXMVdxV2V1T1ByMmNXVyswPSIsImZsYXNoIjp7ImRpc2NhcmQiOlsiYW5hbHl0aWNzX2xvY2F0aW9uIl0sImZsYXNoZXMiOnsiYW5hbHl0aWNzX2xvY2F0aW9uIjoiLzx1c2VyLW5hbWU%2BLzxyZXBvLW5hbWU%2BIn19fQ%3D%3D--fcf0105eb86431ce675008d93b89834e47f55794"]}, "method": "GET", "uri": "https://github.com/metatoaster/mtj.jibberext"}, "response": {"body": {"encoding": "utf-8", "base64_string": ""}, "headers": {"Server": ["GitHub.com"], "Date": ["Tue, 09 May 2017 15:51:05 GMT"], "Content-Type": ["text/html; charset=utf-8"], "Transfer-Encoding": ["chunked"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Vary": ["X-PJAX", "Accept-Encoding"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Set-Cookie": ["_gh_sess=eyJzZXNzaW9uX2lkIjoiZjMyMjlhYjEzNTcxYmYyMWI0NjI5Mjg5NDVmZTI3ODUiLCJzcHlfcmVwbyI6Im1ldGF0b2FzdGVyL210ai5qaWJiZXJleHQiLCJzcHlfcmVwb19hdCI6MTQ5NDM0NTA2NSwiX2NzcmZfdG9rZW4iOiJsV3N0akl0T3hCb09nMGZCZ1JoQkFuSGRpQmVXMVdxV2V1T1ByMmNXVyswPSIsImZsYXNoIjp7ImRpc2NhcmQiOlsiYW5hbHl0aWNzX2xvY2F0aW9uIl0sImZsYXNoZXMiOnsiYW5hbHl0aWNzX2xvY2F0aW9uIjoiLzx1c2VyLW5hbWU%2BLzxyZXBvLW5hbWU%2BIn19fQ%3D%3D--3ef528fd5e3323d72e042262f9ed32d1b258943d; path=/; secure; HttpOnly"], "X-Request-Id": ["63efde82a19670f465bfaee75ffe3951"], "X-Runtime": ["0.109944"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Served-By": ["a6ede1dd2ff22ccf254f82df49f7e99f"], "Content-Encoding": ["gzip"], "X-GitHub-Request-Id": ["DA10:35A5:60720B5:8F88DB1:5911E569"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/metatoaster/mtj.jibberext"}, "recorded_at": "2017-05-09T15:51:06"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://raw.githubusercontent.com/metatoaster/mtj.jibber/master/CHANGES.rst"}, "response": {"body": {"encoding": "utf-8", "base64_string": "H4sIAAAAAAAAA3VWXW/bRhB816/Yvluy5Dhoi6AProE0BZrWaBOgb9GRXJFn3wd7H2L17zt7Ryqy6xiGYZF7szu7s3O6H5Tr2fh+9dPys1ptN29pTZ9dYMMqcrdav/hZrdb0EPxRd0x3h4M2KjHde2uV66jBEWqNipGmQbcDtcpR5HBkUpHSwDXi4MOKaCwo2vVkfcdBJe3ddfCGCYV1Rl4cWKUcOCLn5zjn05Kw5kh+BgE8/YlD3qI06wXpWRmdZ/lXJaSVKpyyTDH3PccUN0C/6zruKHo8tj7In/aJjspkLlnkTEIsQDW7RNpRx02ulW+ka7fo2s1293a9/XG9u3m1a++zMScK/E/WyCCQ+33j035PKvTZCi4aQ8oYspwG35XK/srj6EOiwfsnaUkea3s4lMqMnziQ4SMbwh+X4hVZVSJ1otHHqBvDQtsXCORVSUCOWpUaWu8OGp3W6Dti1FFhpDgi1LLh69rGUaUB5RB9GnQk+bWjYakZbUM3KpsRo2LXMijV00LgPTjJa8vQQtJWAh++BuqqC8dT1cZ+/6HSw7tDPYq0/6dZoHXATGLGhOeeLHAqJ2+hqBb9fvQocBrYEbotAU7aBukj2gFbUYvTjs3V66w+5ha1lD4UqTiP54G8YwHrA3Pi8O2zv9SAS4hP5d28NMuLWtmEcmJu6hN/uGzHuzq7GjYLed4DeT5pCKfBo4HbJ+42RL/WKg5Zdgj/4uSsviI2q05AwYku+HFE1R4TEdHrruyipD8rM+relV1chrJsXgeMFpoVzcSy74KI5pReof7fVEx3bdJHnU4y07rS75bQDJMRc1AI/S4yO8SkoHsZT/IA7zlBGVhHRcHnfiAkVai1jlQqAUSgCRhoBioFxmYRKqbhuliBGnGJjq3/OqrCs0zkYrlrT2UUse5epIimQs+yVaA9cjAnEIBDhnlV55FMPjxFYVMTYwrA/qPIxWqHxskZh+0Ts8wj+gzyqZoQTORNNZHb9W673v7wqokUSd1j3j/7tMEOdV8sx6h6WSUp2coyFAvDiumYFAhhra0ymJst05oPQLrsxHZRQnPChrdPeDrzuSoVFjka7B75I4dQzRqqwB4NANrvbeM7GaoE49OQrLmws8V9izJbFVvViTQmt1hqYGUKzgsiSw26pJJlHjzsbhIyrZfh4QrwOY1ZPruES0Mafe+dUEZm+Gw1BDJ4MC8I9C4aeI31l9lwqyFIaVFuiAknijQjiIs/8r+JMMVOt0kS/n42kkIRssGWiE75wEH8TYguJi97A+sKJySRubQsC17ov3CCooWbRQvbm/XN99+4hvWxXIaFXe3exd2JfOMcsbxsa6JYuxUW98/18q2XwNyf8hmXaenGo24asIwDyyQriGB8YDPyeQckY3fC3Qrbrf6PThivimwmDQN6cW2C5q7SfLPe7da721dplkIP2bVS07ObBwpxrckFH0wct0Xsf398eKjfOkIdH5ZCXKqsd1X2xTeHxWzOt6q8f07j2jePwC73EDSMmCgC9vF8ujofLl4uXyKEag9E2Crs5T8JX9PjaQkAAA=="}, "headers": {"Content-Security-Policy": ["default-src 'none'; style-src 'unsafe-inline'"], "Strict-Transport-Security": ["max-age=31536000"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "ETag": ["\"735e181b2ac560bb1a96e9f123642ef1320f3583\""], "Content-Type": ["text/plain; charset=utf-8"], "Cache-Control": ["max-age=300"], "X-Geo-Block-List": [""], "X-GitHub-Request-Id": ["BA20:34B4:2829F83:29ADA60:5911E56A"], "Content-Encoding": ["gzip"], "Content-Length": ["1168"], "Accept-Ranges": ["bytes"], "Date": ["Tue, 09 May 2017 15:51:06 GMT"], "Via": ["1.1 varnish"], "Connection": ["keep-alive"], "X-Served-By": ["cache-hhn1546-HHN"], "X-Cache": ["MISS"], "X-Cache-Hits": ["0"], "X-Timer": ["S1494345066.132238,VS0,VE118"], "Vary": ["Authorization,Accept-Encoding"], "Access-Control-Allow-Origin": ["*"], "X-Fastly-Request-ID": ["ad295bb5640cb7e9bb0f335c6b5c8a2f04feee1e"], "Expires": ["Tue, 09 May 2017 15:56:06 GMT"], "Source-Age": ["0"]}, "status": {"code": 200, "message": "OK"}, "url": "https://raw.githubusercontent.com/metatoaster/mtj.jibber/master/CHANGES.rst"}, "recorded_at": "2017-05-09T15:51:06"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://raw.githubusercontent.com/metatoaster/mtj.jibberext/master/CHANGES.rst"}, "response": {"body": {"encoding": "utf-8", "base64_string": "H4sIAAAAAAAAA23BMRJAMBAF0H5PsSVFMhxAYZwk7BfFSmZ8cX6VznvLkUqG1yzTR2SIYzA82rVywZEI6yX8EAk6m8GU9YQ2Ym+ua72pmycSjPICqx5qiWIAAAA="}, "headers": {"Content-Security-Policy": ["default-src 'none'; style-src 'unsafe-inline'"], "Strict-Transport-Security": ["max-age=31536000"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "ETag": ["\"7072d18f1b36a56ea24b64828104c6b138e27500\""], "Content-Type": ["text/plain; charset=utf-8"], "Cache-Control": ["max-age=300"], "X-Geo-Block-List": [""], "X-GitHub-Request-Id": ["9C32:1C735:1AFECA2:1C1D15B:5911E569"], "Content-Encoding": ["gzip"], "Content-Length": ["92"], "Accept-Ranges": ["bytes"], "Date": ["Tue, 09 May 2017 15:51:06 GMT"], "Via": ["1.1 varnish"], "Connection": ["keep-alive"], "X-Served-By": ["cache-hhn1546-HHN"], "X-Cache": ["MISS"], "X-Cache-Hits": ["0"], "X-Timer": ["S1494345066.276512,VS0,VE118"], "Vary": ["Authorization,Accept-Encoding"], "Access-Control-Allow-Origin": ["*"], "X-Fastly-Request-ID": ["dc17044ce5e76277b442514828dbd908927b0412"], "Expires": ["Tue, 09 May 2017 15:56:06 GMT"], "Source-Age": ["0"]}, "status": {"code": 200, "message": "OK"}, "url": "https://raw.githubusercontent.com/metatoaster/mtj.jibberext/master/CHANGES.rst"}, "recorded_at": "2017-05-09T15:51:06"}], "recorded_with": "betamax/0.8.0"}