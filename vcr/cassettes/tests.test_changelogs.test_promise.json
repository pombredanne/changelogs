{"http_interactions": [{"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://pypi.python.org/pypi/promise/json"}, "response": {"body": {"encoding": "UTF-8", "string": "{\n    \"info\": {\n        \"maintainer\": \"\", \n        \"docs_url\": null, \n        \"requires_python\": \"\", \n        \"maintainer_email\": \"\", \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": \"concurrent future deferred promise\", \n        \"package_url\": \"http://pypi.python.org/pypi/promise\", \n        \"author\": \"Syrus Akbary\", \n        \"author_email\": \"me@syrusakbary.com\", \n        \"download_url\": \"https://github.com/syrusakbary/promise/releases\", \n        \"platform\": \"\", \n        \"version\": \"2.0.2\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"Promise\\n=======\\n\\nThis is a implementation of Promises in Python. It is a super set of\\nPromises/A+ designed to have readable, performant code and to provide\\njust the extensions that are absolutely necessary for using promises in\\nPython.\\n\\nIts fully compatible with the `Promises/A+\\nspec <http://promises-aplus.github.io/promises-spec/>`__\\n\\n|travis| |pypi| |coveralls|\\n\\nInstallation\\n------------\\n\\n::\\n\\n    $ pip install promise\\n\\nUsage\\n-----\\n\\nThe example below shows how you can load the promise library. It then\\ndemonstrates creating a promise from scratch. You simply call\\n``Promise(fn)``. There is a complete specification for what is returned\\nby this method in\\n`Promises/A+ <http://promises-aplus.github.com/promises-spec/>`__.\\n\\n.. code:: python\\n\\n    from promise import Promise\\n\\n    promise = Promise(\\n        lambda resolve, reject: resolve('RESOLVED!')\\n    )\\n\\nAPI\\n---\\n\\nBefore all examples, you will need:\\n\\n.. code:: python\\n\\n    from promise import Promise\\n\\nPromise(resolver)\\n~~~~~~~~~~~~~~~~~\\n\\nThis creates and returns a new promise. ``resolver`` must be a function.\\nThe ``resolver`` function is passed two arguments:\\n\\n1. ``resolve`` should be called with a single argument. If it is called\\n   with a non-promise value then the promise is fulfilled with that\\n   value. If it is called with a promise (A) then the returned promise\\n   takes on the state of that new promise (A).\\n2. ``reject`` should be called with a single argument. The returned\\n   promise will be rejected with that argument.\\n\\nClass Methods\\n~~~~~~~~~~~~~\\n\\nThese methods are invoked by calling ``Promise.methodName``.\\n\\nPromise.resolve(value)\\n^^^^^^^^^^^^^^^^^^^^^^\\n\\nConverts values and foreign promises into Promises/A+ promises. If you\\npass it a value then it returns a Promise for that value. If you pass it\\nsomething that is close to a promise (such as a jQuery attempt at a\\npromise) it returns a Promise that takes on the state of ``value``\\n(rejected or fulfilled).\\n\\nPromise.reject(value)\\n^^^^^^^^^^^^^^^^^^^^^\\n\\nReturns a rejected promise with the given value.\\n\\nPromise.all(list)\\n^^^^^^^^^^^^^^^^^\\n\\nReturns a promise for a list. If it is called with a single argument\\nthen this returns a promise for a copy of that list with any promises\\nreplaced by their fulfilled values. e.g.\\n\\n.. code:: python\\n\\n    p = Promise.all([Promise.resolve('a'), 'b', Promise.resolve('c')]) \\\\\\n           .then(lambda res: res == ['a', 'b', 'c'])\\n\\n    assert p.get() is True\\n\\nPromise.cast(obj)\\n^^^^^^^^^^^^^^^^^\\n\\nThis function wraps the ``obj`` act as a ``Promise`` if possible. Python\\n``Future``\\\\ s are supported, with a callback to ``promise.done`` when\\nresolved. Have the same effects as ``Promise.resolve(obj)``.\\n\\nPromise.for\\\\_dict(d)\\n^^^^^^^^^^^^^^^^^^^^\\n\\nA special function that takes a dictionary of promises and turns them\\ninto a promise for a dictionary of values. In other words, this turns an\\ndictionary of promises for values into a promise for a dictionary of\\nvalues.\\n\\nPromise.is\\\\_thenable(obj)\\n^^^^^^^^^^^^^^^^^^^^^^^^^\\n\\nThis function checks if the ``obj`` is a ``Promise``, or could be\\n``cast``\\\\ ed.\\n\\nPromise.promisify(func)\\n^^^^^^^^^^^^^^^^^^^^^^^\\n\\nThis function wraps the result of calling ``func`` in a ``Promise``\\ninstance.\\n\\nInstance Methods\\n~~~~~~~~~~~~~~~~\\n\\nThese methods are invoked on a promise instance by calling\\n``myPromise.methodName``\\n\\npromise.then(did\\\\_fulfill, did\\\\_reject)\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\\nThis method follows the `Promises/A+\\nspec <http://promises-aplus.github.io/promises-spec/>`__. It explains\\nthings very clearly so I recommend you read it.\\n\\nEither ``did_fulfill`` or ``did_reject`` will be called and they will\\nnot be called more than once. They will be passed a single argument and\\nwill always be called asynchronously (in the next turn of the event\\nloop).\\n\\nIf the promise is fulfilled then ``did_fulfill`` is called. If the\\npromise is rejected then ``did_reject`` is called.\\n\\nThe call to ``.then`` also returns a promise. If the handler that is\\ncalled returns a promise, the promise returned by ``.then`` takes on the\\nstate of that returned promise. If the handler that is called returns a\\nvalue that is not a promise, the promise returned by ``.then`` will be\\nfulfilled with that value. If the handler that is called throws an\\nexception then the promise returned by ``.then`` is rejected with that\\nexception.\\n\\npromise.catch(did\\\\_reject)\\n^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\\nSugar for ``promise.then(None, did_reject)``, to mirror ``catch`` in\\nsynchronous code.\\n\\npromise.done(did\\\\_fulfill, did\\\\_reject)\\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\\nThe same semantics as ``.then`` except that it does not return a promise\\nand any exceptions are re-thrown so that they can be logged (crashing\\nthe application in non-browser environments)\\n\\nContributing\\n============\\n\\nAfter cloning this repo, ensure dependencies are installed by running:\\n\\n.. code:: sh\\n\\n    pip install -e \\\".[test]\\\"\\n\\nAfter developing, the full test suite can be evaluated by running:\\n\\n.. code:: sh\\n\\n    py.test tests --cov=promise --benchmark-skip # Use -v -s for verbose mode\\n\\nYou can also run the benchmarks with:\\n\\n.. code:: sh\\n\\n    py.test tests --benchmark-only\\n\\nNotes\\n=====\\n\\nThis package is heavily insipired in\\n`aplus <https://github.com/xogeny/aplus>`__.\\n\\nLicense\\n-------\\n\\n`MIT\\nLicense <https://github.com/syrusakbary/promise/blob/master/LICENSE>`__\\n\\n.. |travis| image:: https://img.shields.io/travis/syrusakbary/promise.svg?style=flat\\n   :target: https://travis-ci.org/syrusakbary/promise\\n.. |pypi| image:: https://img.shields.io/pypi/v/promise.svg?style=flat\\n   :target: https://pypi.python.org/pypi/promise\\n.. |coveralls| image:: https://coveralls.io/repos/syrusakbary/promise/badge.svg?branch=master&service=github\\n   :target: https://coveralls.io/github/syrusakbary/promise?branch=master\\n\", \n        \"release_url\": \"http://pypi.python.org/pypi/promise/2.0.2\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 19, \n        \"classifiers\": [\n            \"Development Status :: 5 - Production/Stable\", \n            \"Intended Audience :: Developers\", \n            \"License :: OSI Approved :: MIT License\", \n            \"Programming Language :: Python :: 2\", \n            \"Programming Language :: Python :: 2.7\", \n            \"Programming Language :: Python :: 3\", \n            \"Programming Language :: Python :: 3.3\", \n            \"Programming Language :: Python :: 3.4\", \n            \"Programming Language :: Python :: 3.5\", \n            \"Programming Language :: Python :: Implementation :: PyPy\", \n            \"Topic :: Software Development :: Libraries\"\n        ], \n        \"bugtrack_url\": \"\", \n        \"name\": \"promise\", \n        \"license\": \"MIT\", \n        \"summary\": \"Promises/A+ implementation for Python\", \n        \"home_page\": \"https://github.com/syrusakbary/promise\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"0.1.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2009-11-26T02:34:35\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/2c/be/f9e01d392107df0e35f88c1d3ca4d9994a84d962214fe155c72bebe1e851/promise-0.1.0.tar.gz\", \n                \"md5_digest\": \"142830cf2fa7f870ff1735e60a82abbd\", \n                \"downloads\": 15250, \n                \"filename\": \"promise-0.1.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"2c/be/f9e01d392107df0e35f88c1d3ca4d9994a84d962214fe155c72bebe1e851/promise-0.1.0.tar.gz\", \n                \"size\": 16511\n            }\n        ], \n        \"0.4.2\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-06-21T08:37:58\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/8b/e0/7da87005df50169833697637c1e8192f7a7ff72ffc39978833fde18c93da/promise-0.4.2.tar.gz\", \n                \"md5_digest\": \"8bd927abe12ebce1718b12c29345149d\", \n                \"downloads\": 4553, \n                \"filename\": \"promise-0.4.2.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"8b/e0/7da87005df50169833697637c1e8192f7a7ff72ffc39978833fde18c93da/promise-0.4.2.tar.gz\", \n                \"size\": 7309\n            }\n        ], \n        \"1.0.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-10-15T22:50:08\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/a0/0b/c87a4f5db0207f727550890eac3d9c2df98c229aabe19867cf89ac27a491/promise-1.0.0.tar.gz\", \n                \"md5_digest\": \"41848184c16b0c2315121da6b4966044\", \n                \"downloads\": 3426, \n                \"filename\": \"promise-1.0.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"a0/0b/c87a4f5db0207f727550890eac3d9c2df98c229aabe19867cf89ac27a491/promise-1.0.0.tar.gz\", \n                \"size\": 7810\n            }\n        ], \n        \"2.0.2\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-04-30T00:23:04\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/62/a4/d979b8cbfef42b695a9c3851d3d918884fb0d2f84f6c43451311a2acb5bf/promise-2.0.2.tar.gz\", \n                \"md5_digest\": \"5e38264caaf6f409feb6b3ff4f729727\", \n                \"downloads\": 0, \n                \"filename\": \"promise-2.0.2.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"62/a4/d979b8cbfef42b695a9c3851d3d918884fb0d2f84f6c43451311a2acb5bf/promise-2.0.2.tar.gz\", \n                \"size\": 18461\n            }\n        ], \n        \"2.0.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-04-25T07:36:38\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/f8/0e/36c2768278d827fbe8cd168f212bf33974fb54da14f92cc36041c0b642fe/promise-2.0.1.tar.gz\", \n                \"md5_digest\": \"40606222b53a3bfa6da3b5a1c45c08c0\", \n                \"downloads\": 0, \n                \"filename\": \"promise-2.0.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"f8/0e/36c2768278d827fbe8cd168f212bf33974fb54da14f92cc36041c0b642fe/promise-2.0.1.tar.gz\", \n                \"size\": 18516\n            }\n        ], \n        \"2.0.dev20170313081902\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-03-13T08:20:34\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/06/ed/d3dcd9afc10d5ff46df6948241e29ad362564ce3cfcaeff32cb6c19e7d9c/promise-2.0.dev20170313081902.tar.gz\", \n                \"md5_digest\": \"5e5823253a32ace2ad826ddae3342799\", \n                \"downloads\": 25, \n                \"filename\": \"promise-2.0.dev20170313081902.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"06/ed/d3dcd9afc10d5ff46df6948241e29ad362564ce3cfcaeff32cb6c19e7d9c/promise-2.0.dev20170313081902.tar.gz\", \n                \"size\": 17035\n            }\n        ], \n        \"2.0b1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-04-05T05:18:31\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/8e/07/8b17db477d7d938c5d5cd60f263ccb0eab78620fb1175ff2781793242f6c/promise-2.0b1.tar.gz\", \n                \"md5_digest\": \"b12d882a43df70b1c382d2803fddb948\", \n                \"downloads\": 75, \n                \"filename\": \"promise-2.0b1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"8e/07/8b17db477d7d938c5d5cd60f263ccb0eab78620fb1175ff2781793242f6c/promise-2.0b1.tar.gz\", \n                \"size\": 18300\n            }\n        ], \n        \"2.0.dev20170317055346\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-03-17T05:58:11\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/9b/93/dd9a70b09243e67f4f1bc21ecc9ba500d816ff6fa6c26a59bbb6ac9206e3/promise-2.0.dev20170317055346.tar.gz\", \n                \"md5_digest\": \"cfe2956821c453101a187f7236ab21f9\", \n                \"downloads\": 98, \n                \"filename\": \"promise-2.0.dev20170317055346.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"9b/93/dd9a70b09243e67f4f1bc21ecc9ba500d816ff6fa6c26a59bbb6ac9206e3/promise-2.0.dev20170317055346.tar.gz\", \n                \"size\": 18215\n            }\n        ], \n        \"0.4\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-05-18T05:30:17\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/54/4c/7f11cf1e670e537391ab304c160b8c5cdff756cc70bb5d8b1c2774a2117a/promise-0.4.tar.gz\", \n                \"md5_digest\": \"b9fd5db07c313aa7025339ee92664d8a\", \n                \"downloads\": 1097, \n                \"filename\": \"promise-0.4.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"54/4c/7f11cf1e670e537391ab304c160b8c5cdff756cc70bb5d8b1c2774a2117a/promise-0.4.tar.gz\", \n                \"size\": 6824\n            }\n        ], \n        \"2.0rc1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-04-12T08:40:33\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/e7/67/f948c43e184915c6f7c61916e4c72e32abfcb0f9cdcafac2e70513baffd5/promise-2.0rc1.zip\", \n                \"md5_digest\": \"41d9c1f002fe5a74dfe6c63b9d7fe91f\", \n                \"downloads\": 0, \n                \"filename\": \"promise-2.0rc1.zip\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"e7/67/f948c43e184915c6f7c61916e4c72e32abfcb0f9cdcafac2e70513baffd5/promise-2.0rc1.zip\", \n                \"size\": 24617\n            }\n        ], \n        \"0.4.3\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-10-12T05:54:42\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/e6/d9/6e11b90ef27194ffa31f0979ee58e38bda062ddba57810c2b759d4e50d55/promise-0.4.3.tar.gz\", \n                \"md5_digest\": \"36424ff3cb29f4331dbd14eefb58d54b\", \n                \"downloads\": 80, \n                \"filename\": \"promise-0.4.3.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"e6/d9/6e11b90ef27194ffa31f0979ee58e38bda062ddba57810c2b759d4e50d55/promise-0.4.3.tar.gz\", \n                \"size\": 7419\n            }\n        ], \n        \"2.0rc2\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-04-13T05:48:32\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/e6/3b/0414dbb7ad6f436fe7006c2460746e96a375ab56ee411fd748d50cbdd777/promise-2.0rc2.tar.gz\", \n                \"md5_digest\": \"49caa613f58d4eb4dad31860301031d0\", \n                \"downloads\": 0, \n                \"filename\": \"promise-2.0rc2.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"e6/3b/0414dbb7ad6f436fe7006c2460746e96a375ab56ee411fd748d50cbdd777/promise-2.0rc2.tar.gz\", \n                \"size\": 18490\n            }\n        ], \n        \"0.2.2\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2011-04-14T05:46:17\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/13/ee/eb8413c7e46f2dc110454e366b3ccf39e6db765749c8daf01a625c33323f/promise-0.2.2.tar.gz\", \n                \"md5_digest\": \"31855fcb6771fb97afc999733b1c28b6\", \n                \"downloads\": 3273, \n                \"filename\": \"promise-0.2.2.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"13/ee/eb8413c7e46f2dc110454e366b3ccf39e6db765749c8daf01a625c33323f/promise-0.2.2.tar.gz\", \n                \"size\": 19765\n            }\n        ], \n        \"0.2.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2010-01-06T12:54:29\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/f6/07/fcd91d39d6f80c4c9a314efa28dbff33c91ef9aaf94169bcee09aa70d50f/promise-0.2.1.tar.gz\", \n                \"md5_digest\": \"7ba287ad9b1c93e8ee77090153cc5b0f\", \n                \"downloads\": 2504, \n                \"filename\": \"promise-0.2.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"f6/07/fcd91d39d6f80c4c9a314efa28dbff33c91ef9aaf94169bcee09aa70d50f/promise-0.2.1.tar.gz\", \n                \"size\": 18523\n            }\n        ], \n        \"0.2.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2009-12-08T06:21:44\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/96/22/7ab1480ca9de349c380a4fbdf1a1ebcbfe2adef5a6183a26a0a9d88b8c6c/promise-0.2.0.tar.gz\", \n                \"md5_digest\": \"f62e80613e5447294d9e48f488be2a1d\", \n                \"downloads\": 2425, \n                \"filename\": \"promise-0.2.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"96/22/7ab1480ca9de349c380a4fbdf1a1ebcbfe2adef5a6183a26a0a9d88b8c6c/promise-0.2.0.tar.gz\", \n                \"size\": 17804\n            }\n        ], \n        \"0.4.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-06-01T05:11:08\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/b0/04/f36592e57b0327175a37b55c2a22cc8f889839f3b61bc7e2da1970c82441/promise-0.4.1.tar.gz\", \n                \"md5_digest\": \"740b807b11b7b21aaaee91340dc907f4\", \n                \"downloads\": 335, \n                \"filename\": \"promise-0.4.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"b0/04/f36592e57b0327175a37b55c2a22cc8f889839f3b61bc7e2da1970c82441/promise-0.4.1.tar.gz\", \n                \"size\": 6877\n            }\n        ], \n        \"2.0.dev20170314074715\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-03-14T07:49:02\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/26/44/cdf55fa2ff79f4de83bac1bdf976398523640e968c4680c409818c80d810/promise-2.0.dev20170314074715.tar.gz\", \n                \"md5_digest\": \"eaf3886c186b6573f377e60bc92e4c23\", \n                \"downloads\": 22, \n                \"filename\": \"promise-2.0.dev20170314074715.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"26/44/cdf55fa2ff79f4de83bac1bdf976398523640e968c4680c409818c80d810/promise-2.0.dev20170314074715.tar.gz\", \n                \"size\": 18082\n            }\n        ], \n        \"2.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-04-19T05:39:16\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/9e/91/6969fe80207a9949a802759274e0c18ad47f2f52d79c1395656596d5182e/promise-2.0.tar.gz\", \n                \"md5_digest\": \"fda4fd32e1f9c9aacbe988656df4df95\", \n                \"downloads\": 0, \n                \"filename\": \"promise-2.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"9e/91/6969fe80207a9949a802759274e0c18ad47f2f52d79c1395656596d5182e/promise-2.0.tar.gz\", \n                \"size\": 18497\n            }\n        ], \n        \"2.0.dev20170313082331\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-03-13T08:23:41\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/e7/ad/598016774da0036bbf39133c4378f6da123b5d90368664f0e3453253219b/promise-2.0.dev20170313082331.tar.gz\", \n                \"md5_digest\": \"bd13e695151c1dd9880da68c7e93eb94\", \n                \"downloads\": 24, \n                \"filename\": \"promise-2.0.dev20170313082331.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"e7/ad/598016774da0036bbf39133c4378f6da123b5d90368664f0e3453253219b/promise-2.0.dev20170313082331.tar.gz\", \n                \"size\": 18009\n            }\n        ], \n        \"1.0.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-12-02T05:00:38\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/6a/66/e71ab1cfd7a218f811d0bac7f52e04ec7b78ed6b073a418658cd07584981/promise-1.0.1.tar.gz\", \n                \"md5_digest\": \"c285831b14dad740b4f574dff18ec765\", \n                \"downloads\": 4784, \n                \"filename\": \"promise-1.0.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"6a/66/e71ab1cfd7a218f811d0bac7f52e04ec7b78ed6b073a418658cd07584981/promise-1.0.1.tar.gz\", \n                \"size\": 7835\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2017-04-30T00:23:04\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/62/a4/d979b8cbfef42b695a9c3851d3d918884fb0d2f84f6c43451311a2acb5bf/promise-2.0.2.tar.gz\", \n            \"md5_digest\": \"5e38264caaf6f409feb6b3ff4f729727\", \n            \"downloads\": 0, \n            \"filename\": \"promise-2.0.2.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"62/a4/d979b8cbfef42b695a9c3851d3d918884fb0d2f84f6c43451311a2acb5bf/promise-2.0.2.tar.gz\", \n            \"size\": 18461\n        }\n    ]\n}"}, "headers": {"Server": ["nginx/1.10.3"], "Content-Type": ["application/json; charset=\"UTF-8\""], "Content-Disposition": ["inline"], "X-PYPI-LAST-SERIAL": ["2860486"], "Cache-Control": ["max-age=600, public"], "Access-Control-Allow-Origin": ["*"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Via": ["1.1 varnish", "1.1 varnish"], "Fastly-Debug-Digest": ["ce380f717b1af588bde877c541b9bf70a531d1072ad41ae37c854c4680a9612b"], "Content-Length": ["23053"], "Accept-Ranges": ["bytes"], "Date": ["Tue, 09 May 2017 16:22:15 GMT"], "Age": ["53590"], "Connection": ["keep-alive"], "X-Served-By": ["cache-iad2147-IAD, cache-hhn1535-HHN"], "X-Cache": ["HIT, HIT"], "X-Cache-Hits": ["1, 1"], "X-Timer": ["S1494346935.438845,VS0,VE0"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Content-Type-Options": ["nosniff"], "X-Permitted-Cross-Domain-Policies": ["none"]}, "status": {"code": 200, "message": "OK"}, "url": "https://pypi.python.org/pypi/promise/json"}, "recorded_at": "2017-05-09T16:22:15"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://github.com/xogeny/aplus"}, "response": {"body": {"encoding": "utf-8", "base64_string": ""}, "headers": {"Server": ["GitHub.com"], "Date": ["Tue, 09 May 2017 16:22:16 GMT"], "Content-Type": ["text/html; charset=utf-8"], "Transfer-Encoding": ["chunked"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Vary": ["X-PJAX", "Accept-Encoding"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Set-Cookie": ["logged_in=no; domain=.github.com; path=/; expires=Sat, 09 May 2037 16:22:16 -0000; secure; HttpOnly", "_gh_sess=eyJzZXNzaW9uX2lkIjoiZWZhYTJmNDUxMjFlNWZkNjRhOGJmZGM4Mjc1ODQzN2IiLCJzcHlfcmVwbyI6InhvZ2VueS9hcGx1cyIsInNweV9yZXBvX2F0IjoxNDk0MzQ2OTM1LCJfY3NyZl90b2tlbiI6IjJ1Ry9PbGNaWE9MZElqWTZXMW5ZcnVWN1EvU2syWHJhNDFyOGRKRm1mVEE9IiwiZmxhc2giOnsiZGlzY2FyZCI6WyJhbmFseXRpY3NfbG9jYXRpb24iXSwiZmxhc2hlcyI6eyJhbmFseXRpY3NfbG9jYXRpb24iOiIvPHVzZXItbmFtZT4vPHJlcG8tbmFtZT4ifX19--a5a2b83a8288bd8293e208722a9441d747bb2cbd; path=/; secure; HttpOnly"], "X-Request-Id": ["cd51ac8df9d22e7ad931c7106a5d178f"], "X-Runtime": ["0.149504"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Served-By": ["39cfeffd1b48c8f62b6e4b4849a9236c"], "Content-Encoding": ["gzip"], "X-GitHub-Request-Id": ["F858:35A4:41261B5:61499B6:5911ECB7"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/xogeny/aplus"}, "recorded_at": "2017-05-09T16:22:16"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "Cookie": ["logged_in=no; _gh_sess=eyJzZXNzaW9uX2lkIjoiZWZhYTJmNDUxMjFlNWZkNjRhOGJmZGM4Mjc1ODQzN2IiLCJzcHlfcmVwbyI6InhvZ2VueS9hcGx1cyIsInNweV9yZXBvX2F0IjoxNDk0MzQ2OTM1LCJfY3NyZl90b2tlbiI6IjJ1Ry9PbGNaWE9MZElqWTZXMW5ZcnVWN1EvU2syWHJhNDFyOGRKRm1mVEE9IiwiZmxhc2giOnsiZGlzY2FyZCI6WyJhbmFseXRpY3NfbG9jYXRpb24iXSwiZmxhc2hlcyI6eyJhbmFseXRpY3NfbG9jYXRpb24iOiIvPHVzZXItbmFtZT4vPHJlcG8tbmFtZT4ifX19--a5a2b83a8288bd8293e208722a9441d747bb2cbd"]}, "method": "GET", "uri": "https://github.com/syrusakbary/promise"}, "response": {"body": {"encoding": "utf-8", "base64_string": ""}, "headers": {"Server": ["GitHub.com"], "Date": ["Tue, 09 May 2017 16:22:16 GMT"], "Content-Type": ["text/html; charset=utf-8"], "Transfer-Encoding": ["chunked"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Vary": ["X-PJAX", "Accept-Encoding"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Set-Cookie": ["_gh_sess=eyJzZXNzaW9uX2lkIjoiZWZhYTJmNDUxMjFlNWZkNjRhOGJmZGM4Mjc1ODQzN2IiLCJzcHlfcmVwbyI6InN5cnVzYWtiYXJ5L3Byb21pc2UiLCJzcHlfcmVwb19hdCI6MTQ5NDM0NjkzNiwiX2NzcmZfdG9rZW4iOiIydUcvT2xjWlhPTGRJalk2VzFuWXJ1VjdRL1NrMlhyYTQxcjhkSkZtZlRBPSIsImZsYXNoIjp7ImRpc2NhcmQiOlsiYW5hbHl0aWNzX2xvY2F0aW9uIl0sImZsYXNoZXMiOnsiYW5hbHl0aWNzX2xvY2F0aW9uIjoiLzx1c2VyLW5hbWU%2BLzxyZXBvLW5hbWU%2BIn19fQ%3D%3D--a8f819c67011c9b38eb76bab63e966f9bb7c34ea; path=/; secure; HttpOnly"], "X-Request-Id": ["157e056c94e5fb48b1db80be83bbfabf"], "X-Runtime": ["0.215232"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Served-By": ["7e098eac53c3666b4eb57cec18d7fb7f"], "Content-Encoding": ["gzip"], "X-GitHub-Request-Id": ["F858:35A4:41261EC:61499F1:5911ECB8"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/syrusakbary/promise"}, "recorded_at": "2017-05-09T16:22:16"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "Cookie": ["logged_in=no; _gh_sess=eyJzZXNzaW9uX2lkIjoiZWZhYTJmNDUxMjFlNWZkNjRhOGJmZGM4Mjc1ODQzN2IiLCJzcHlfcmVwbyI6InN5cnVzYWtiYXJ5L3Byb21pc2UiLCJzcHlfcmVwb19hdCI6MTQ5NDM0NjkzNiwiX2NzcmZfdG9rZW4iOiIydUcvT2xjWlhPTGRJalk2VzFuWXJ1VjdRL1NrMlhyYTQxcjhkSkZtZlRBPSIsImZsYXNoIjp7ImRpc2NhcmQiOlsiYW5hbHl0aWNzX2xvY2F0aW9uIl0sImZsYXNoZXMiOnsiYW5hbHl0aWNzX2xvY2F0aW9uIjoiLzx1c2VyLW5hbWU%2BLzxyZXBvLW5hbWU%2BIn19fQ%3D%3D--a8f819c67011c9b38eb76bab63e966f9bb7c34ea"]}, "method": "GET", "uri": "https://github.com/syrusakbary/promise/releases"}, "response": {"body": {"encoding": "utf-8", "base64_string": ""}, "headers": {"Server": ["GitHub.com"], "Date": ["Tue, 09 May 2017 16:22:17 GMT"], "Content-Type": ["text/html; charset=utf-8"], "Transfer-Encoding": ["chunked"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Vary": ["X-PJAX", "Accept-Encoding"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Set-Cookie": ["_gh_sess=eyJzZXNzaW9uX2lkIjoiZWZhYTJmNDUxMjFlNWZkNjRhOGJmZGM4Mjc1ODQzN2IiLCJzcHlfcmVwbyI6InN5cnVzYWtiYXJ5L3Byb21pc2UiLCJzcHlfcmVwb19hdCI6MTQ5NDM0NjkzNywiX2NzcmZfdG9rZW4iOiIydUcvT2xjWlhPTGRJalk2VzFuWXJ1VjdRL1NrMlhyYTQxcjhkSkZtZlRBPSJ9--b91bc81421f18f8d87c203b4f176dc67d9749377; path=/; secure; HttpOnly"], "X-Request-Id": ["c6d1db890f780f47fb9f520f73595ca3"], "X-Runtime": ["0.236076"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Served-By": ["d0e230454cb69aa01d4f86fc3a57b17f"], "Content-Encoding": ["gzip"], "X-GitHub-Request-Id": ["F858:35A4:4126225:6149A64:5911ECB8"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/syrusakbary/promise/releases"}, "recorded_at": "2017-05-09T16:22:17"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://pypi.python.org/pypi/promise/json"}, "response": {"body": {"encoding": "UTF-8", "string": "{\n    \"info\": {\n        \"maintainer\": \"\", \n        \"docs_url\": null, \n        \"requires_python\": \"\", \n        \"maintainer_email\": \"\", \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": \"concurrent future deferred promise\", \n        \"package_url\": \"http://pypi.python.org/pypi/promise\", \n        \"author\": \"Syrus Akbary\", \n        \"author_email\": \"me@syrusakbary.com\", \n        \"download_url\": \"https://github.com/syrusakbary/promise/releases\", \n        \"platform\": \"\", \n        \"version\": \"2.0.2\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"Promise\\n=======\\n\\nThis is a implementation of Promises in Python. It is a super set of\\nPromises/A+ designed to have readable, performant code and to provide\\njust the extensions that are absolutely necessary for using promises in\\nPython.\\n\\nIts fully compatible with the `Promises/A+\\nspec <http://promises-aplus.github.io/promises-spec/>`__\\n\\n|travis| |pypi| |coveralls|\\n\\nInstallation\\n------------\\n\\n::\\n\\n    $ pip install promise\\n\\nUsage\\n-----\\n\\nThe example below shows how you can load the promise library. It then\\ndemonstrates creating a promise from scratch. You simply call\\n``Promise(fn)``. There is a complete specification for what is returned\\nby this method in\\n`Promises/A+ <http://promises-aplus.github.com/promises-spec/>`__.\\n\\n.. code:: python\\n\\n    from promise import Promise\\n\\n    promise = Promise(\\n        lambda resolve, reject: resolve('RESOLVED!')\\n    )\\n\\nAPI\\n---\\n\\nBefore all examples, you will need:\\n\\n.. code:: python\\n\\n    from promise import Promise\\n\\nPromise(resolver)\\n~~~~~~~~~~~~~~~~~\\n\\nThis creates and returns a new promise. ``resolver`` must be a function.\\nThe ``resolver`` function is passed two arguments:\\n\\n1. ``resolve`` should be called with a single argument. If it is called\\n   with a non-promise value then the promise is fulfilled with that\\n   value. If it is called with a promise (A) then the returned promise\\n   takes on the state of that new promise (A).\\n2. ``reject`` should be called with a single argument. The returned\\n   promise will be rejected with that argument.\\n\\nClass Methods\\n~~~~~~~~~~~~~\\n\\nThese methods are invoked by calling ``Promise.methodName``.\\n\\nPromise.resolve(value)\\n^^^^^^^^^^^^^^^^^^^^^^\\n\\nConverts values and foreign promises into Promises/A+ promises. If you\\npass it a value then it returns a Promise for that value. If you pass it\\nsomething that is close to a promise (such as a jQuery attempt at a\\npromise) it returns a Promise that takes on the state of ``value``\\n(rejected or fulfilled).\\n\\nPromise.reject(value)\\n^^^^^^^^^^^^^^^^^^^^^\\n\\nReturns a rejected promise with the given value.\\n\\nPromise.all(list)\\n^^^^^^^^^^^^^^^^^\\n\\nReturns a promise for a list. If it is called with a single argument\\nthen this returns a promise for a copy of that list with any promises\\nreplaced by their fulfilled values. e.g.\\n\\n.. code:: python\\n\\n    p = Promise.all([Promise.resolve('a'), 'b', Promise.resolve('c')]) \\\\\\n           .then(lambda res: res == ['a', 'b', 'c'])\\n\\n    assert p.get() is True\\n\\nPromise.cast(obj)\\n^^^^^^^^^^^^^^^^^\\n\\nThis function wraps the ``obj`` act as a ``Promise`` if possible. Python\\n``Future``\\\\ s are supported, with a callback to ``promise.done`` when\\nresolved. Have the same effects as ``Promise.resolve(obj)``.\\n\\nPromise.for\\\\_dict(d)\\n^^^^^^^^^^^^^^^^^^^^\\n\\nA special function that takes a dictionary of promises and turns them\\ninto a promise for a dictionary of values. In other words, this turns an\\ndictionary of promises for values into a promise for a dictionary of\\nvalues.\\n\\nPromise.is\\\\_thenable(obj)\\n^^^^^^^^^^^^^^^^^^^^^^^^^\\n\\nThis function checks if the ``obj`` is a ``Promise``, or could be\\n``cast``\\\\ ed.\\n\\nPromise.promisify(func)\\n^^^^^^^^^^^^^^^^^^^^^^^\\n\\nThis function wraps the result of calling ``func`` in a ``Promise``\\ninstance.\\n\\nInstance Methods\\n~~~~~~~~~~~~~~~~\\n\\nThese methods are invoked on a promise instance by calling\\n``myPromise.methodName``\\n\\npromise.then(did\\\\_fulfill, did\\\\_reject)\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\\nThis method follows the `Promises/A+\\nspec <http://promises-aplus.github.io/promises-spec/>`__. It explains\\nthings very clearly so I recommend you read it.\\n\\nEither ``did_fulfill`` or ``did_reject`` will be called and they will\\nnot be called more than once. They will be passed a single argument and\\nwill always be called asynchronously (in the next turn of the event\\nloop).\\n\\nIf the promise is fulfilled then ``did_fulfill`` is called. If the\\npromise is rejected then ``did_reject`` is called.\\n\\nThe call to ``.then`` also returns a promise. If the handler that is\\ncalled returns a promise, the promise returned by ``.then`` takes on the\\nstate of that returned promise. If the handler that is called returns a\\nvalue that is not a promise, the promise returned by ``.then`` will be\\nfulfilled with that value. If the handler that is called throws an\\nexception then the promise returned by ``.then`` is rejected with that\\nexception.\\n\\npromise.catch(did\\\\_reject)\\n^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\\nSugar for ``promise.then(None, did_reject)``, to mirror ``catch`` in\\nsynchronous code.\\n\\npromise.done(did\\\\_fulfill, did\\\\_reject)\\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\\nThe same semantics as ``.then`` except that it does not return a promise\\nand any exceptions are re-thrown so that they can be logged (crashing\\nthe application in non-browser environments)\\n\\nContributing\\n============\\n\\nAfter cloning this repo, ensure dependencies are installed by running:\\n\\n.. code:: sh\\n\\n    pip install -e \\\".[test]\\\"\\n\\nAfter developing, the full test suite can be evaluated by running:\\n\\n.. code:: sh\\n\\n    py.test tests --cov=promise --benchmark-skip # Use -v -s for verbose mode\\n\\nYou can also run the benchmarks with:\\n\\n.. code:: sh\\n\\n    py.test tests --benchmark-only\\n\\nNotes\\n=====\\n\\nThis package is heavily insipired in\\n`aplus <https://github.com/xogeny/aplus>`__.\\n\\nLicense\\n-------\\n\\n`MIT\\nLicense <https://github.com/syrusakbary/promise/blob/master/LICENSE>`__\\n\\n.. |travis| image:: https://img.shields.io/travis/syrusakbary/promise.svg?style=flat\\n   :target: https://travis-ci.org/syrusakbary/promise\\n.. |pypi| image:: https://img.shields.io/pypi/v/promise.svg?style=flat\\n   :target: https://pypi.python.org/pypi/promise\\n.. |coveralls| image:: https://coveralls.io/repos/syrusakbary/promise/badge.svg?branch=master&service=github\\n   :target: https://coveralls.io/github/syrusakbary/promise?branch=master\\n\", \n        \"release_url\": \"http://pypi.python.org/pypi/promise/2.0.2\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 19, \n        \"classifiers\": [\n            \"Development Status :: 5 - Production/Stable\", \n            \"Intended Audience :: Developers\", \n            \"License :: OSI Approved :: MIT License\", \n            \"Programming Language :: Python :: 2\", \n            \"Programming Language :: Python :: 2.7\", \n            \"Programming Language :: Python :: 3\", \n            \"Programming Language :: Python :: 3.3\", \n            \"Programming Language :: Python :: 3.4\", \n            \"Programming Language :: Python :: 3.5\", \n            \"Programming Language :: Python :: Implementation :: PyPy\", \n            \"Topic :: Software Development :: Libraries\"\n        ], \n        \"bugtrack_url\": \"\", \n        \"name\": \"promise\", \n        \"license\": \"MIT\", \n        \"summary\": \"Promises/A+ implementation for Python\", \n        \"home_page\": \"https://github.com/syrusakbary/promise\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"0.1.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2009-11-26T02:34:35\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/2c/be/f9e01d392107df0e35f88c1d3ca4d9994a84d962214fe155c72bebe1e851/promise-0.1.0.tar.gz\", \n                \"md5_digest\": \"142830cf2fa7f870ff1735e60a82abbd\", \n                \"downloads\": 15250, \n                \"filename\": \"promise-0.1.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"2c/be/f9e01d392107df0e35f88c1d3ca4d9994a84d962214fe155c72bebe1e851/promise-0.1.0.tar.gz\", \n                \"size\": 16511\n            }\n        ], \n        \"0.4.2\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-06-21T08:37:58\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/8b/e0/7da87005df50169833697637c1e8192f7a7ff72ffc39978833fde18c93da/promise-0.4.2.tar.gz\", \n                \"md5_digest\": \"8bd927abe12ebce1718b12c29345149d\", \n                \"downloads\": 4553, \n                \"filename\": \"promise-0.4.2.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"8b/e0/7da87005df50169833697637c1e8192f7a7ff72ffc39978833fde18c93da/promise-0.4.2.tar.gz\", \n                \"size\": 7309\n            }\n        ], \n        \"1.0.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-10-15T22:50:08\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/a0/0b/c87a4f5db0207f727550890eac3d9c2df98c229aabe19867cf89ac27a491/promise-1.0.0.tar.gz\", \n                \"md5_digest\": \"41848184c16b0c2315121da6b4966044\", \n                \"downloads\": 3426, \n                \"filename\": \"promise-1.0.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"a0/0b/c87a4f5db0207f727550890eac3d9c2df98c229aabe19867cf89ac27a491/promise-1.0.0.tar.gz\", \n                \"size\": 7810\n            }\n        ], \n        \"2.0.2\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-04-30T00:23:04\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/62/a4/d979b8cbfef42b695a9c3851d3d918884fb0d2f84f6c43451311a2acb5bf/promise-2.0.2.tar.gz\", \n                \"md5_digest\": \"5e38264caaf6f409feb6b3ff4f729727\", \n                \"downloads\": 0, \n                \"filename\": \"promise-2.0.2.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"62/a4/d979b8cbfef42b695a9c3851d3d918884fb0d2f84f6c43451311a2acb5bf/promise-2.0.2.tar.gz\", \n                \"size\": 18461\n            }\n        ], \n        \"2.0.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-04-25T07:36:38\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/f8/0e/36c2768278d827fbe8cd168f212bf33974fb54da14f92cc36041c0b642fe/promise-2.0.1.tar.gz\", \n                \"md5_digest\": \"40606222b53a3bfa6da3b5a1c45c08c0\", \n                \"downloads\": 0, \n                \"filename\": \"promise-2.0.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"f8/0e/36c2768278d827fbe8cd168f212bf33974fb54da14f92cc36041c0b642fe/promise-2.0.1.tar.gz\", \n                \"size\": 18516\n            }\n        ], \n        \"2.0.dev20170313081902\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-03-13T08:20:34\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/06/ed/d3dcd9afc10d5ff46df6948241e29ad362564ce3cfcaeff32cb6c19e7d9c/promise-2.0.dev20170313081902.tar.gz\", \n                \"md5_digest\": \"5e5823253a32ace2ad826ddae3342799\", \n                \"downloads\": 25, \n                \"filename\": \"promise-2.0.dev20170313081902.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"06/ed/d3dcd9afc10d5ff46df6948241e29ad362564ce3cfcaeff32cb6c19e7d9c/promise-2.0.dev20170313081902.tar.gz\", \n                \"size\": 17035\n            }\n        ], \n        \"2.0b1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-04-05T05:18:31\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/8e/07/8b17db477d7d938c5d5cd60f263ccb0eab78620fb1175ff2781793242f6c/promise-2.0b1.tar.gz\", \n                \"md5_digest\": \"b12d882a43df70b1c382d2803fddb948\", \n                \"downloads\": 75, \n                \"filename\": \"promise-2.0b1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"8e/07/8b17db477d7d938c5d5cd60f263ccb0eab78620fb1175ff2781793242f6c/promise-2.0b1.tar.gz\", \n                \"size\": 18300\n            }\n        ], \n        \"2.0.dev20170317055346\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-03-17T05:58:11\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/9b/93/dd9a70b09243e67f4f1bc21ecc9ba500d816ff6fa6c26a59bbb6ac9206e3/promise-2.0.dev20170317055346.tar.gz\", \n                \"md5_digest\": \"cfe2956821c453101a187f7236ab21f9\", \n                \"downloads\": 98, \n                \"filename\": \"promise-2.0.dev20170317055346.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"9b/93/dd9a70b09243e67f4f1bc21ecc9ba500d816ff6fa6c26a59bbb6ac9206e3/promise-2.0.dev20170317055346.tar.gz\", \n                \"size\": 18215\n            }\n        ], \n        \"0.4\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-05-18T05:30:17\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/54/4c/7f11cf1e670e537391ab304c160b8c5cdff756cc70bb5d8b1c2774a2117a/promise-0.4.tar.gz\", \n                \"md5_digest\": \"b9fd5db07c313aa7025339ee92664d8a\", \n                \"downloads\": 1097, \n                \"filename\": \"promise-0.4.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"54/4c/7f11cf1e670e537391ab304c160b8c5cdff756cc70bb5d8b1c2774a2117a/promise-0.4.tar.gz\", \n                \"size\": 6824\n            }\n        ], \n        \"2.0rc1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-04-12T08:40:33\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/e7/67/f948c43e184915c6f7c61916e4c72e32abfcb0f9cdcafac2e70513baffd5/promise-2.0rc1.zip\", \n                \"md5_digest\": \"41d9c1f002fe5a74dfe6c63b9d7fe91f\", \n                \"downloads\": 0, \n                \"filename\": \"promise-2.0rc1.zip\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"e7/67/f948c43e184915c6f7c61916e4c72e32abfcb0f9cdcafac2e70513baffd5/promise-2.0rc1.zip\", \n                \"size\": 24617\n            }\n        ], \n        \"0.4.3\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-10-12T05:54:42\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/e6/d9/6e11b90ef27194ffa31f0979ee58e38bda062ddba57810c2b759d4e50d55/promise-0.4.3.tar.gz\", \n                \"md5_digest\": \"36424ff3cb29f4331dbd14eefb58d54b\", \n                \"downloads\": 80, \n                \"filename\": \"promise-0.4.3.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"e6/d9/6e11b90ef27194ffa31f0979ee58e38bda062ddba57810c2b759d4e50d55/promise-0.4.3.tar.gz\", \n                \"size\": 7419\n            }\n        ], \n        \"2.0rc2\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-04-13T05:48:32\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/e6/3b/0414dbb7ad6f436fe7006c2460746e96a375ab56ee411fd748d50cbdd777/promise-2.0rc2.tar.gz\", \n                \"md5_digest\": \"49caa613f58d4eb4dad31860301031d0\", \n                \"downloads\": 0, \n                \"filename\": \"promise-2.0rc2.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"e6/3b/0414dbb7ad6f436fe7006c2460746e96a375ab56ee411fd748d50cbdd777/promise-2.0rc2.tar.gz\", \n                \"size\": 18490\n            }\n        ], \n        \"0.2.2\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2011-04-14T05:46:17\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/13/ee/eb8413c7e46f2dc110454e366b3ccf39e6db765749c8daf01a625c33323f/promise-0.2.2.tar.gz\", \n                \"md5_digest\": \"31855fcb6771fb97afc999733b1c28b6\", \n                \"downloads\": 3273, \n                \"filename\": \"promise-0.2.2.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"13/ee/eb8413c7e46f2dc110454e366b3ccf39e6db765749c8daf01a625c33323f/promise-0.2.2.tar.gz\", \n                \"size\": 19765\n            }\n        ], \n        \"0.2.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2010-01-06T12:54:29\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/f6/07/fcd91d39d6f80c4c9a314efa28dbff33c91ef9aaf94169bcee09aa70d50f/promise-0.2.1.tar.gz\", \n                \"md5_digest\": \"7ba287ad9b1c93e8ee77090153cc5b0f\", \n                \"downloads\": 2504, \n                \"filename\": \"promise-0.2.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"f6/07/fcd91d39d6f80c4c9a314efa28dbff33c91ef9aaf94169bcee09aa70d50f/promise-0.2.1.tar.gz\", \n                \"size\": 18523\n            }\n        ], \n        \"0.2.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2009-12-08T06:21:44\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/96/22/7ab1480ca9de349c380a4fbdf1a1ebcbfe2adef5a6183a26a0a9d88b8c6c/promise-0.2.0.tar.gz\", \n                \"md5_digest\": \"f62e80613e5447294d9e48f488be2a1d\", \n                \"downloads\": 2425, \n                \"filename\": \"promise-0.2.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"96/22/7ab1480ca9de349c380a4fbdf1a1ebcbfe2adef5a6183a26a0a9d88b8c6c/promise-0.2.0.tar.gz\", \n                \"size\": 17804\n            }\n        ], \n        \"0.4.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-06-01T05:11:08\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/b0/04/f36592e57b0327175a37b55c2a22cc8f889839f3b61bc7e2da1970c82441/promise-0.4.1.tar.gz\", \n                \"md5_digest\": \"740b807b11b7b21aaaee91340dc907f4\", \n                \"downloads\": 335, \n                \"filename\": \"promise-0.4.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"b0/04/f36592e57b0327175a37b55c2a22cc8f889839f3b61bc7e2da1970c82441/promise-0.4.1.tar.gz\", \n                \"size\": 6877\n            }\n        ], \n        \"2.0.dev20170314074715\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-03-14T07:49:02\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/26/44/cdf55fa2ff79f4de83bac1bdf976398523640e968c4680c409818c80d810/promise-2.0.dev20170314074715.tar.gz\", \n                \"md5_digest\": \"eaf3886c186b6573f377e60bc92e4c23\", \n                \"downloads\": 22, \n                \"filename\": \"promise-2.0.dev20170314074715.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"26/44/cdf55fa2ff79f4de83bac1bdf976398523640e968c4680c409818c80d810/promise-2.0.dev20170314074715.tar.gz\", \n                \"size\": 18082\n            }\n        ], \n        \"2.0\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-04-19T05:39:16\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/9e/91/6969fe80207a9949a802759274e0c18ad47f2f52d79c1395656596d5182e/promise-2.0.tar.gz\", \n                \"md5_digest\": \"fda4fd32e1f9c9aacbe988656df4df95\", \n                \"downloads\": 0, \n                \"filename\": \"promise-2.0.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"9e/91/6969fe80207a9949a802759274e0c18ad47f2f52d79c1395656596d5182e/promise-2.0.tar.gz\", \n                \"size\": 18497\n            }\n        ], \n        \"2.0.dev20170313082331\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2017-03-13T08:23:41\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/e7/ad/598016774da0036bbf39133c4378f6da123b5d90368664f0e3453253219b/promise-2.0.dev20170313082331.tar.gz\", \n                \"md5_digest\": \"bd13e695151c1dd9880da68c7e93eb94\", \n                \"downloads\": 24, \n                \"filename\": \"promise-2.0.dev20170313082331.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"e7/ad/598016774da0036bbf39133c4378f6da123b5d90368664f0e3453253219b/promise-2.0.dev20170313082331.tar.gz\", \n                \"size\": 18009\n            }\n        ], \n        \"1.0.1\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2016-12-02T05:00:38\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/6a/66/e71ab1cfd7a218f811d0bac7f52e04ec7b78ed6b073a418658cd07584981/promise-1.0.1.tar.gz\", \n                \"md5_digest\": \"c285831b14dad740b4f574dff18ec765\", \n                \"downloads\": 4784, \n                \"filename\": \"promise-1.0.1.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"6a/66/e71ab1cfd7a218f811d0bac7f52e04ec7b78ed6b073a418658cd07584981/promise-1.0.1.tar.gz\", \n                \"size\": 7835\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2017-04-30T00:23:04\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/62/a4/d979b8cbfef42b695a9c3851d3d918884fb0d2f84f6c43451311a2acb5bf/promise-2.0.2.tar.gz\", \n            \"md5_digest\": \"5e38264caaf6f409feb6b3ff4f729727\", \n            \"downloads\": 0, \n            \"filename\": \"promise-2.0.2.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"62/a4/d979b8cbfef42b695a9c3851d3d918884fb0d2f84f6c43451311a2acb5bf/promise-2.0.2.tar.gz\", \n            \"size\": 18461\n        }\n    ]\n}"}, "headers": {"Server": ["nginx/1.10.3"], "Content-Type": ["application/json; charset=\"UTF-8\""], "Content-Disposition": ["inline"], "X-PYPI-LAST-SERIAL": ["2860486"], "Cache-Control": ["max-age=600, public"], "Access-Control-Allow-Origin": ["*"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Via": ["1.1 varnish", "1.1 varnish"], "Fastly-Debug-Digest": ["ce380f717b1af588bde877c541b9bf70a531d1072ad41ae37c854c4680a9612b"], "Content-Length": ["23053"], "Accept-Ranges": ["bytes"], "Date": ["Tue, 09 May 2017 16:22:17 GMT"], "Age": ["53592"], "Connection": ["keep-alive"], "X-Served-By": ["cache-iad2147-IAD, cache-hhn1535-HHN"], "X-Cache": ["HIT, HIT"], "X-Cache-Hits": ["1, 2"], "X-Timer": ["S1494346938.542533,VS0,VE0"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Content-Type-Options": ["nosniff"], "X-Permitted-Cross-Domain-Policies": ["none"]}, "status": {"code": 200, "message": "OK"}, "url": "https://pypi.python.org/pypi/promise/json"}, "recorded_at": "2017-05-09T16:22:17"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "Cookie": ["logged_in=no; _gh_sess=eyJzZXNzaW9uX2lkIjoiZWZhYTJmNDUxMjFlNWZkNjRhOGJmZGM4Mjc1ODQzN2IiLCJzcHlfcmVwbyI6InN5cnVzYWtiYXJ5L3Byb21pc2UiLCJzcHlfcmVwb19hdCI6MTQ5NDM0NjkzNywiX2NzcmZfdG9rZW4iOiIydUcvT2xjWlhPTGRJalk2VzFuWXJ1VjdRL1NrMlhyYTQxcjhkSkZtZlRBPSJ9--b91bc81421f18f8d87c203b4f176dc67d9749377"]}, "method": "GET", "uri": "https://github.com/xogeny/aplus"}, "response": {"body": {"encoding": "utf-8", "base64_string": ""}, "headers": {"Server": ["GitHub.com"], "Date": ["Tue, 09 May 2017 16:22:17 GMT"], "Content-Type": ["text/html; charset=utf-8"], "Transfer-Encoding": ["chunked"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Vary": ["X-PJAX", "Accept-Encoding"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Set-Cookie": ["_gh_sess=eyJzZXNzaW9uX2lkIjoiZWZhYTJmNDUxMjFlNWZkNjRhOGJmZGM4Mjc1ODQzN2IiLCJzcHlfcmVwbyI6InhvZ2VueS9hcGx1cyIsInNweV9yZXBvX2F0IjoxNDk0MzQ2OTM3LCJfY3NyZl90b2tlbiI6IjJ1Ry9PbGNaWE9MZElqWTZXMW5ZcnVWN1EvU2syWHJhNDFyOGRKRm1mVEE9IiwiZmxhc2giOnsiZGlzY2FyZCI6WyJhbmFseXRpY3NfbG9jYXRpb24iXSwiZmxhc2hlcyI6eyJhbmFseXRpY3NfbG9jYXRpb24iOiIvPHVzZXItbmFtZT4vPHJlcG8tbmFtZT4ifX19--bb61fc5b8290c6bc1473d6b89e5d25df60153fa0; path=/; secure; HttpOnly"], "X-Request-Id": ["934d3e10b708c2918c0c4e72d619717f"], "X-Runtime": ["0.156018"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Served-By": ["2c9958536becb3f8ee288100a6a9b3ee"], "Content-Encoding": ["gzip"], "X-GitHub-Request-Id": ["F858:35A4:41262B1:6149B30:5911ECB9"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/xogeny/aplus"}, "recorded_at": "2017-05-09T16:22:17"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "Cookie": ["logged_in=no; _gh_sess=eyJzZXNzaW9uX2lkIjoiZWZhYTJmNDUxMjFlNWZkNjRhOGJmZGM4Mjc1ODQzN2IiLCJzcHlfcmVwbyI6InhvZ2VueS9hcGx1cyIsInNweV9yZXBvX2F0IjoxNDk0MzQ2OTM3LCJfY3NyZl90b2tlbiI6IjJ1Ry9PbGNaWE9MZElqWTZXMW5ZcnVWN1EvU2syWHJhNDFyOGRKRm1mVEE9IiwiZmxhc2giOnsiZGlzY2FyZCI6WyJhbmFseXRpY3NfbG9jYXRpb24iXSwiZmxhc2hlcyI6eyJhbmFseXRpY3NfbG9jYXRpb24iOiIvPHVzZXItbmFtZT4vPHJlcG8tbmFtZT4ifX19--bb61fc5b8290c6bc1473d6b89e5d25df60153fa0"]}, "method": "GET", "uri": "https://github.com/syrusakbary/promise"}, "response": {"body": {"encoding": "utf-8", "base64_string": ""}, "headers": {"Server": ["GitHub.com"], "Date": ["Tue, 09 May 2017 16:22:18 GMT"], "Content-Type": ["text/html; charset=utf-8"], "Transfer-Encoding": ["chunked"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Vary": ["X-PJAX", "Accept-Encoding"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Set-Cookie": ["_gh_sess=eyJzZXNzaW9uX2lkIjoiZWZhYTJmNDUxMjFlNWZkNjRhOGJmZGM4Mjc1ODQzN2IiLCJzcHlfcmVwbyI6InN5cnVzYWtiYXJ5L3Byb21pc2UiLCJzcHlfcmVwb19hdCI6MTQ5NDM0NjkzNywiX2NzcmZfdG9rZW4iOiIydUcvT2xjWlhPTGRJalk2VzFuWXJ1VjdRL1NrMlhyYTQxcjhkSkZtZlRBPSIsImZsYXNoIjp7ImRpc2NhcmQiOlsiYW5hbHl0aWNzX2xvY2F0aW9uIl0sImZsYXNoZXMiOnsiYW5hbHl0aWNzX2xvY2F0aW9uIjoiLzx1c2VyLW5hbWU%2BLzxyZXBvLW5hbWU%2BIn19fQ%3D%3D--9b0d64efc0954c9fe755ce1ff03d4fd2508d5d04; path=/; secure; HttpOnly"], "X-Request-Id": ["09c5168bb63fe2640306850e5db589e8"], "X-Runtime": ["0.215096"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Served-By": ["50b06cef3698e972f044d7dc2cb41530"], "Content-Encoding": ["gzip"], "X-GitHub-Request-Id": ["F858:35A4:41262E4:6149B81:5911ECB9"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/syrusakbary/promise"}, "recorded_at": "2017-05-09T16:22:18"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "Cookie": ["logged_in=no; _gh_sess=eyJzZXNzaW9uX2lkIjoiZWZhYTJmNDUxMjFlNWZkNjRhOGJmZGM4Mjc1ODQzN2IiLCJzcHlfcmVwbyI6InN5cnVzYWtiYXJ5L3Byb21pc2UiLCJzcHlfcmVwb19hdCI6MTQ5NDM0NjkzNywiX2NzcmZfdG9rZW4iOiIydUcvT2xjWlhPTGRJalk2VzFuWXJ1VjdRL1NrMlhyYTQxcjhkSkZtZlRBPSIsImZsYXNoIjp7ImRpc2NhcmQiOlsiYW5hbHl0aWNzX2xvY2F0aW9uIl0sImZsYXNoZXMiOnsiYW5hbHl0aWNzX2xvY2F0aW9uIjoiLzx1c2VyLW5hbWU%2BLzxyZXBvLW5hbWU%2BIn19fQ%3D%3D--9b0d64efc0954c9fe755ce1ff03d4fd2508d5d04"]}, "method": "GET", "uri": "https://github.com/syrusakbary/promise/releases"}, "response": {"body": {"encoding": "utf-8", "base64_string": "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"}, "headers": {"Server": ["GitHub.com"], "Date": ["Tue, 09 May 2017 16:22:18 GMT"], "Content-Type": ["text/html; charset=utf-8"], "Transfer-Encoding": ["chunked"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Vary": ["X-PJAX", "Accept-Encoding"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Set-Cookie": ["_gh_sess=eyJzZXNzaW9uX2lkIjoiZWZhYTJmNDUxMjFlNWZkNjRhOGJmZGM4Mjc1ODQzN2IiLCJzcHlfcmVwbyI6InN5cnVzYWtiYXJ5L3Byb21pc2UiLCJzcHlfcmVwb19hdCI6MTQ5NDM0NjkzOCwiX2NzcmZfdG9rZW4iOiIydUcvT2xjWlhPTGRJalk2VzFuWXJ1VjdRL1NrMlhyYTQxcjhkSkZtZlRBPSJ9--78527e41ddac74c1f4a573f0d6950ff52f7a848c; path=/; secure; HttpOnly"], "X-Request-Id": ["3a882c52247baad32e19f4ba599ffbac"], "X-Runtime": ["0.148337"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Served-By": ["ef97014f01ea59c1ef337fe51a4d0331"], "Content-Encoding": ["gzip"], "X-GitHub-Request-Id": ["F858:35A4:4126314:6149BD0:5911ECBA"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/syrusakbary/promise/releases"}, "recorded_at": "2017-05-09T16:22:18"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "Authorization": ["token foo"], "Cookie": ["logged_in=no; _gh_sess=eyJzZXNzaW9uX2lkIjoiZWZhYTJmNDUxMjFlNWZkNjRhOGJmZGM4Mjc1ODQzN2IiLCJzcHlfcmVwbyI6InN5cnVzYWtiYXJ5L3Byb21pc2UiLCJzcHlfcmVwb19hdCI6MTQ5NDM0NjkzOCwiX2NzcmZfdG9rZW4iOiIydUcvT2xjWlhPTGRJalk2VzFuWXJ1VjdRL1NrMlhyYTQxcjhkSkZtZlRBPSJ9--78527e41ddac74c1f4a573f0d6950ff52f7a848c"]}, "method": "GET", "uri": "https://api.github.com/repos/syrusakbary/promise/releases"}, "response": {"body": {"encoding": "utf-8", "base64_string": "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"}, "headers": {"Server": ["GitHub.com"], "Date": ["Tue, 09 May 2017 16:22:19 GMT"], "Content-Type": ["application/json; charset=utf-8"], "Transfer-Encoding": ["chunked"], "Status": ["200 OK"], "X-RateLimit-Limit": ["5000"], "X-RateLimit-Remaining": ["4989"], "X-RateLimit-Reset": ["1494347142"], "Cache-Control": ["private, max-age=60, s-maxage=60"], "Vary": ["Accept, Authorization, Cookie, X-GitHub-OTP", "Accept-Encoding"], "ETag": ["W/\"6f7c3880d1f0f40b3818709dbbfb51ae\""], "X-OAuth-Scopes": ["repo, user"], "X-Accepted-OAuth-Scopes": [""], "X-GitHub-Media-Type": ["github.v3; format=json"], "Access-Control-Expose-Headers": ["ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval"], "Access-Control-Allow-Origin": ["*"], "Content-Security-Policy": ["default-src 'none'"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Served-By": ["15bc4ab707db6d6b474783868c7cc828"], "Content-Encoding": ["gzip"], "X-GitHub-Request-Id": ["F48C:2F972:56A8DD2:7002F6E:5911ECBA"]}, "status": {"code": 200, "message": "OK"}, "url": "https://api.github.com/repos/syrusakbary/promise/releases"}, "recorded_at": "2017-05-09T16:22:19"}], "recorded_with": "betamax/0.8.0"}
