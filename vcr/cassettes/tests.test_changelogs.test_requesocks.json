{"http_interactions": [{"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://pypi.python.org/pypi/requesocks/json"}, "response": {"body": {"encoding": "UTF-8", "string": "{\n    \"info\": {\n        \"maintainer\": \"\", \n        \"docs_url\": null, \n        \"requires_python\": null, \n        \"maintainer_email\": \"\", \n        \"cheesecake_code_kwalitee_id\": null, \n        \"keywords\": \"\", \n        \"package_url\": \"http://pypi.python.org/pypi/requesocks\", \n        \"author\": \"Kenneth Reitz\", \n        \"author_email\": \"me@kennethreitz.com\", \n        \"download_url\": \"UNKNOWN\", \n        \"platform\": \"UNKNOWN\", \n        \"version\": \"0.10.8\", \n        \"cheesecake_documentation_id\": null, \n        \"_pypi_hidden\": false, \n        \"description\": \"PLEASE USE JUST THE RECENT VERSION OF PYTHON-REQUESTS, it has already SOCKS support bundled:\\r\\n\\r\\n    pip install -U requests[socks]\\r\\n\\r\\n\\r\\nRequesocks is the fork of github.com/foxx/requests == python-requests *working with socks proxy* (i.e tor).\\r\\nJust renamed the package to allow simultaneously use of original requests and socks-capable-requests.\\r\\n\\r\\nRequests: HTTP for Humans\\r\\n=========================\\r\\n\\r\\n.. image:: https://secure.travis-ci.org/kennethreitz/requests.png?branch=develop\\r\\n\\r\\nRequests is an ISC Licensed HTTP library, written in Python, for human\\r\\nbeings.\\r\\n\\r\\nMost existing Python modules for sending HTTP requests are extremely\\r\\nverbose and cumbersome. Python's builtin urllib2 module provides most of\\r\\nthe HTTP capabilities you should need, but the api is thoroughly broken.\\r\\nIt requires an enormous amount of work (even method overrides) to\\r\\nperform the simplest of tasks.\\r\\n\\r\\nThings shouldn't be this way. Not in Python.\\r\\n\\r\\n::\\r\\n    session = requesocks.session()\\r\\n    session.proxies = {'http': 'socks5://127.0.0.1:9050',\\r\\n                       'https': 'socks5://127.0.0.1:9050'}\\r\\n    r = session.get('https://api.github.com', auth=('user', 'pass'))\\r\\n    print(r.status_code)\\r\\n    print(r.headers['content-type'])\\r\\n    print(r.text)\\r\\n    ...\\r\\n\\r\\nSee `the same code, without Requests <https://gist.github.com/973705>`_.\\r\\n\\r\\nRequests allow you to send  **HEAD**, **GET**, **POST**, **PUT**,\\r\\n**PATCH**, and **DELETE** HTTP requests. You can add headers, form data,\\r\\nmultipart files, and parameters with simple Python dictionaries, and access the\\r\\nresponse data in the same way. It's powered by httplib and `urllib3\\r\\n<https://github.com/shazow/urllib3>`_, but it does all the hard work and crazy\\r\\nhacks for you.\\r\\n\\r\\n\\r\\nFeatures\\r\\n--------\\r\\n\\r\\n- International Domains and URLs\\r\\n- Keep-Alive & Connection Pooling\\r\\n- Sessions with Cookie Persistence\\r\\n- Browser-style SSL Verification\\r\\n- Basic/Digest Authentication\\r\\n- Elegant Key/Value Cookies\\r\\n- Automatic Decompression\\r\\n- Unicode Response Bodies\\r\\n- Multipart File Uploads\\r\\n- Connection Timeouts\\r\\n\\r\\n\\r\\nInstallation\\r\\n------------\\r\\n\\r\\nTo install requests, simply: ::\\r\\n\\r\\n    $ pip install requesocks\\r\\n\\r\\nOr, if you absolutely must: ::\\r\\n\\r\\n    $ easy_install requesocks\\r\\n\\r\\nBut, you really shouldn't do that.\\r\\n\\r\\n\\r\\n\\r\\nContribute\\r\\n----------\\r\\n\\r\\n#. Check for open issues or open a fresh issue to start a discussion around a feature idea or a bug. There is a Contributor Friendly tag for issues that should be ideal for people who are not very familiar with the codebase yet.\\r\\n#. Fork `the repository`_ on Github to start making your changes to the **develop** branch (or branch off of it).\\r\\n#. Write a test which shows that the bug was fixed or that the feature works as expected.\\r\\n#. Send a pull request and bug the maintainer until it gets merged and published. :) Make sure to add yourself to AUTHORS_.\\r\\n\\r\\n.. _`the repository`: http://github.com/kennethreitz/requests\\r\\n.. _AUTHORS: http://github.com/kennethreitz/requests/blob/master/AUTHORS\\r\\n\\r\\n\\r\\nHistory\\r\\n-------\\r\\n\\r\\n0.10.8 (2012-03-09)\\r\\n+++++++++++++++++++\\r\\n\\r\\n* Generate chunked ValueError fix\\r\\n* Proxy configuration by environment variables\\r\\n* Simplification of iter_lines.\\r\\n* New `trust_env` configuration for disabling system/environment hints.\\r\\n* Suppress cookie errors.\\r\\n\\r\\n0.10.7 (2012-03-07)\\r\\n+++++++++++++++++++\\r\\n\\r\\n* `encode_uri` = False\\r\\n\\r\\n0.10.6 (2012-02-25)\\r\\n+++++++++++++++++++\\r\\n\\r\\n* Allow '=' in cookies.\\r\\n\\r\\n0.10.5 (2012-02-25)\\r\\n+++++++++++++++++++\\r\\n\\r\\n* Response body with 0 content-length fix.\\r\\n* New async.imap.\\r\\n* Don't fail on netrc.\\r\\n\\r\\n\\r\\n0.10.4 (2012-02-20)\\r\\n+++++++++++++++++++\\r\\n\\r\\n* Honor netrc.\\r\\n\\r\\n0.10.3 (2012-02-20)\\r\\n+++++++++++++++++++\\r\\n\\r\\n* HEAD requests don't follow redirects anymore.\\r\\n* raise_for_status() doesn't raise for 3xx anymore.\\r\\n* Make Session objects picklable.\\r\\n* ValueError for invalid schema URLs.\\r\\n\\r\\n0.10.2 (2012-01-15)\\r\\n+++++++++++++++++++\\r\\n\\r\\n* Vastly improved URL quoting.\\r\\n* Additional allowed cookie key values.\\r\\n* Attempted fix for \\\"Too many open files\\\" Error\\r\\n* Replace unicode errors on first pass, no need for second pass.\\r\\n* Append '/' to bare-domain urls before query insertion.\\r\\n* Exceptions now inherit from RuntimeError.\\r\\n* Binary uploads + auth fix.\\r\\n* Bugfixes.\\r\\n\\r\\n\\r\\n0.10.1 (2012-01-23)\\r\\n+++++++++++++++++++\\r\\n\\r\\n* PYTHON 3 SUPPORT!\\r\\n* Dropped 2.5 Support. (*Backwards Incompatible*)\\r\\n\\r\\n0.10.0 (2012-01-21)\\r\\n+++++++++++++++++++\\r\\n\\r\\n* ``Response.content`` is now bytes-only. (*Backwards Incompatible*)\\r\\n* New ``Response.text`` is unicode-only.\\r\\n* If no ``Response.encoding`` is specified and ``chardet`` is available, ``Respoonse.text`` will guess an encoding.\\r\\n* Default to ISO-8859-1 (Western) encoding for \\\"text\\\" subtypes.\\r\\n* Removal of `decode_unicode`. (*Backwards Incompatible*)\\r\\n* New multiple-hooks system.\\r\\n* New ``Response.register_hook`` for registering hooks within the pipeline.\\r\\n* ``Response.url`` is now Unicode.\\r\\n\\r\\n0.9.3 (2012-01-18)\\r\\n++++++++++++++++++\\r\\n\\r\\n* SSL verify=False bugfix (apparent on windows machines).\\r\\n\\r\\n0.9.2 (2012-01-18)\\r\\n++++++++++++++++++\\r\\n\\r\\n* Asynchronous async.send method.\\r\\n* Support for proper chunk streams with boundaries.\\r\\n* session argument for Session classes.\\r\\n* Print entire hook tracebacks, not just exception instance.\\r\\n* Fix response.iter_lines from pending next line.\\r\\n* Fix but in HTTP-digest auth w/ URI having query strings.\\r\\n* Fix in Event Hooks section.\\r\\n* Urllib3 update.\\r\\n\\r\\n\\r\\n0.9.1 (2012-01-06)\\r\\n++++++++++++++++++\\r\\n\\r\\n* danger_mode for automatic Response.raise_for_status()\\r\\n* Response.iter_lines refactor\\r\\n\\r\\n0.9.0 (2011-12-28)\\r\\n++++++++++++++++++\\r\\n\\r\\n* verify ssl is default.\\r\\n\\r\\n\\r\\n0.8.9 (2011-12-28)\\r\\n++++++++++++++++++\\r\\n\\r\\n* Packaging fix.\\r\\n\\r\\n\\r\\n0.8.8 (2011-12-28)\\r\\n++++++++++++++++++\\r\\n\\r\\n* SSL CERT VERIFICATION!\\r\\n* Release of Cerifi: Mozilla's cert list.\\r\\n* New 'verify' argument for SSL requests.\\r\\n* Urllib3 update.\\r\\n\\r\\n0.8.7 (2011-12-24)\\r\\n++++++++++++++++++\\r\\n\\r\\n* iter_lines last-line truncation fix\\r\\n* Force safe_mode for async requests\\r\\n* Handle safe_mode exceptions more consistently\\r\\n* Fix iteration on null responses in safe_mode\\r\\n\\r\\n0.8.6 (2011-12-18)\\r\\n++++++++++++++++++\\r\\n\\r\\n* Socket timeout fixes.\\r\\n* Proxy Authorization support.\\r\\n\\r\\n0.8.5 (2011-12-14)\\r\\n++++++++++++++++++\\r\\n\\r\\n* Response.iter_lines!\\r\\n\\r\\n0.8.4 (2011-12-11)\\r\\n++++++++++++++++++\\r\\n\\r\\n* Prefetch bugfix.\\r\\n* Added license to installed version.\\r\\n\\r\\n0.8.3 (2011-11-27)\\r\\n++++++++++++++++++\\r\\n\\r\\n* Converted auth system to use simpler callable objects.\\r\\n* New session parameter to API methods.\\r\\n* Display full URL while logging.\\r\\n\\r\\n0.8.2 (2011-11-19)\\r\\n++++++++++++++++++\\r\\n\\r\\n* New Unicode decoding system, based on over-ridable `Response.encoding`.\\r\\n* Proper URL slash-quote handling.\\r\\n* Cookies with ``[``, ``]``, and ``_`` allowed.\\r\\n\\r\\n0.8.1 (2011-11-15)\\r\\n++++++++++++++++++\\r\\n\\r\\n* URL Request path fix\\r\\n* Proxy fix.\\r\\n* Timeouts fix.\\r\\n\\r\\n0.8.0 (2011-11-13)\\r\\n++++++++++++++++++\\r\\n\\r\\n* Keep-alive support!\\r\\n* Complete removal of Urllib2\\r\\n* Complete removal of Poster\\r\\n* Complete removal of CookieJars\\r\\n* New ConnectionError raising\\r\\n* Safe_mode for error catching\\r\\n* prefetch parameter for request methods\\r\\n* OPTION method\\r\\n* Async pool size throttling\\r\\n* File uploads send real names\\r\\n* Vendored in urllib3\\r\\n\\r\\n0.7.6 (2011-11-07)\\r\\n++++++++++++++++++\\r\\n\\r\\n* Digest authentication bugfix (attach query data to path)\\r\\n\\r\\n0.7.5 (2011-11-04)\\r\\n++++++++++++++++++\\r\\n\\r\\n* Response.content = None if there was an invalid repsonse.\\r\\n* Redirection auth handling.\\r\\n\\r\\n0.7.4 (2011-10-26)\\r\\n++++++++++++++++++\\r\\n\\r\\n* Session Hooks fix.\\r\\n\\r\\n0.7.3 (2011-10-23)\\r\\n++++++++++++++++++\\r\\n\\r\\n* Digest Auth fix.\\r\\n\\r\\n\\r\\n0.7.2 (2011-10-23)\\r\\n++++++++++++++++++\\r\\n\\r\\n* PATCH Fix.\\r\\n\\r\\n\\r\\n0.7.1 (2011-10-23)\\r\\n++++++++++++++++++\\r\\n\\r\\n* Move away from urllib2 authentication handling.\\r\\n* Fully Remove AuthManager, AuthObject, &c.\\r\\n* New tuple-based auth system with handler callbacks.\\r\\n\\r\\n\\r\\n0.7.0 (2011-10-22)\\r\\n++++++++++++++++++\\r\\n\\r\\n* Sessions are now the primary interface.\\r\\n* Deprecated InvalidMethodException.\\r\\n* PATCH fix.\\r\\n* New config system (no more global settings).\\r\\n\\r\\n\\r\\n0.6.6 (2011-10-19)\\r\\n++++++++++++++++++\\r\\n\\r\\n* Session parameter bugfix (params merging).\\r\\n\\r\\n\\r\\n0.6.5 (2011-10-18)\\r\\n++++++++++++++++++\\r\\n\\r\\n* Offline (fast) test suite.\\r\\n* Session dictionary argument merging.\\r\\n\\r\\n\\r\\n0.6.4 (2011-10-13)\\r\\n++++++++++++++++++\\r\\n\\r\\n* Automatic decoding of unicode, based on HTTP Headers.\\r\\n* New ``decode_unicode`` setting.\\r\\n* Removal of ``r.read/close`` methods.\\r\\n* New ``r.faw`` interface for advanced response usage.*\\r\\n* Automatic expansion of parameterized headers.\\r\\n\\r\\n\\r\\n0.6.3 (2011-10-13)\\r\\n++++++++++++++++++\\r\\n\\r\\n* Beautiful ``requests.async`` module, for making async requests w/ gevent.\\r\\n\\r\\n\\r\\n0.6.2 (2011-10-09)\\r\\n++++++++++++++++++\\r\\n\\r\\n* GET/HEAD obeys allow_redirects=False.\\r\\n\\r\\n\\r\\n0.6.1 (2011-08-20)\\r\\n++++++++++++++++++\\r\\n\\r\\n* Enhanced status codes experience ``\\\\o/``\\r\\n* Set a maximum number of redirects (``settings.max_redirects``)\\r\\n* Full Unicode URL support\\r\\n* Support for protocol-less redirects.\\r\\n* Allow for arbitrary request types.\\r\\n* Bugfixes\\r\\n\\r\\n\\r\\n0.6.0 (2011-08-17)\\r\\n++++++++++++++++++\\r\\n\\r\\n* New callback hook system\\r\\n* New persistient sessions object and context manager\\r\\n* Transparent Dict-cookie handling\\r\\n* Status code reference object\\r\\n* Removed Response.cached\\r\\n* Added Response.request\\r\\n* All args are kwargs\\r\\n* Relative redirect support\\r\\n* HTTPError handling improvements\\r\\n* Improved https testing\\r\\n* Bugfixes\\r\\n\\r\\n\\r\\n0.5.1 (2011-07-23)\\r\\n++++++++++++++++++\\r\\n\\r\\n* International Domain Name Support!\\r\\n* Access headers without fetching entire body (``read()``)\\r\\n* Use lists as dicts for parameters\\r\\n* Add Forced Basic Authentication\\r\\n* Forced Basic is default authentication type\\r\\n* ``python-requests.org`` default User-Agent header\\r\\n* CaseInsensitiveDict lower-case caching\\r\\n* Response.history bugfix\\r\\n\\r\\n\\r\\n0.5.0 (2011-06-21)\\r\\n++++++++++++++++++\\r\\n\\r\\n* PATCH Support\\r\\n* Support for Proxies\\r\\n* HTTPBin Test Suite\\r\\n* Redirect Fixes\\r\\n* settings.verbose stream writing\\r\\n* Querystrings for all methods\\r\\n* URLErrors (Connection Refused, Timeout, Invalid URLs) are treated as explicity raised\\r\\n  ``r.requests.get('hwe://blah'); r.raise_for_status()``\\r\\n\\r\\n\\r\\n0.4.1 (2011-05-22)\\r\\n++++++++++++++++++\\r\\n\\r\\n* Improved Redirection Handling\\r\\n* New 'allow_redirects' param for following non-GET/HEAD Redirects\\r\\n* Settings module refactoring\\r\\n\\r\\n\\r\\n0.4.0 (2011-05-15)\\r\\n++++++++++++++++++\\r\\n\\r\\n* Response.history: list of redirected responses\\r\\n* Case-Insensitive Header Dictionaries!\\r\\n* Unicode URLs\\r\\n\\r\\n\\r\\n0.3.4 (2011-05-14)\\r\\n++++++++++++++++++\\r\\n\\r\\n* Urllib2 HTTPAuthentication Recursion fix (Basic/Digest)\\r\\n* Internal Refactor\\r\\n* Bytes data upload Bugfix\\r\\n\\r\\n\\r\\n\\r\\n0.3.3 (2011-05-12)\\r\\n++++++++++++++++++\\r\\n\\r\\n* Request timeouts\\r\\n* Unicode url-encoded data\\r\\n* Settings context manager and module\\r\\n\\r\\n\\r\\n0.3.2 (2011-04-15)\\r\\n++++++++++++++++++\\r\\n\\r\\n* Automatic Decompression of GZip Encoded Content\\r\\n* AutoAuth Support for Tupled HTTP Auth\\r\\n\\r\\n\\r\\n0.3.1 (2011-04-01)\\r\\n++++++++++++++++++\\r\\n\\r\\n* Cookie Changes\\r\\n* Response.read()\\r\\n* Poster fix\\r\\n\\r\\n\\r\\n0.3.0 (2011-02-25)\\r\\n++++++++++++++++++\\r\\n\\r\\n* Automatic Authentication API Change\\r\\n* Smarter Query URL Parameterization\\r\\n* Allow file uploads and POST data together\\r\\n* New Authentication Manager System\\r\\n    - Simpler Basic HTTP System\\r\\n    - Supports all build-in urllib2 Auths\\r\\n    - Allows for custom Auth Handlers\\r\\n\\r\\n\\r\\n0.2.4 (2011-02-19)\\r\\n++++++++++++++++++\\r\\n\\r\\n* Python 2.5 Support\\r\\n* PyPy-c v1.4 Support\\r\\n* Auto-Authentication tests\\r\\n* Improved Request object constructor\\r\\n\\r\\n0.2.3 (2011-02-15)\\r\\n++++++++++++++++++\\r\\n\\r\\n* New HTTPHandling Methods\\r\\n    - Reponse.__nonzero__ (false if bad HTTP Status)\\r\\n    - Response.ok (True if expected HTTP Status)\\r\\n    - Response.error (Logged HTTPError if bad HTTP Status)\\r\\n    - Reponse.raise_for_status() (Raises stored HTTPError)\\r\\n\\r\\n\\r\\n0.2.2 (2011-02-14)\\r\\n++++++++++++++++++\\r\\n\\r\\n* Still handles request in the event of an HTTPError. (Issue #2)\\r\\n* Eventlet and Gevent Monkeypatch support.\\r\\n* Cookie Support (Issue #1)\\r\\n\\r\\n\\r\\n0.2.1 (2011-02-14)\\r\\n++++++++++++++++++\\r\\n\\r\\n* Added file attribute to POST and PUT requests for multipart-encode file uploads.\\r\\n* Added Request.url attribute for context and redirects\\r\\n\\r\\n\\r\\n0.2.0 (2011-02-14)\\r\\n++++++++++++++++++\\r\\n\\r\\n* Birth!\\r\\n\\r\\n\\r\\n0.0.1 (2011-02-13)\\r\\n++++++++++++++++++\\r\\n\\r\\n* Frustration\\r\\n* Conception\", \n        \"release_url\": \"http://pypi.python.org/pypi/requesocks/0.10.8\", \n        \"downloads\": {\n            \"last_month\": 0, \n            \"last_week\": 0, \n            \"last_day\": 0\n        }, \n        \"_pypi_ordering\": 0, \n        \"classifiers\": [], \n        \"bugtrack_url\": \"\", \n        \"name\": \"requesocks\", \n        \"license\": \"ISC\", \n        \"summary\": \"Python HTTP for Humans, with socks proxy support\", \n        \"home_page\": \"http://python-requests.org\", \n        \"cheesecake_installability_id\": null\n    }, \n    \"releases\": {\n        \"0.10.8\": [\n            {\n                \"has_sig\": false, \n                \"upload_time\": \"2013-03-25T15:30:23\", \n                \"comment_text\": \"\", \n                \"python_version\": \"source\", \n                \"url\": \"https://pypi.python.org/packages/2b/33/0ecebf3903181cd74d9ff885da4029f59e5f61c99dc66f39c5a170a66d27/requesocks-0.10.8.tar.gz\", \n                \"md5_digest\": \"3f43bd8a00c704b3de4f1a212cc72818\", \n                \"downloads\": 201378, \n                \"filename\": \"requesocks-0.10.8.tar.gz\", \n                \"packagetype\": \"sdist\", \n                \"path\": \"2b/33/0ecebf3903181cd74d9ff885da4029f59e5f61c99dc66f39c5a170a66d27/requesocks-0.10.8.tar.gz\", \n                \"size\": 68130\n            }\n        ]\n    }, \n    \"urls\": [\n        {\n            \"has_sig\": false, \n            \"upload_time\": \"2013-03-25T15:30:23\", \n            \"comment_text\": \"\", \n            \"python_version\": \"source\", \n            \"url\": \"https://pypi.python.org/packages/2b/33/0ecebf3903181cd74d9ff885da4029f59e5f61c99dc66f39c5a170a66d27/requesocks-0.10.8.tar.gz\", \n            \"md5_digest\": \"3f43bd8a00c704b3de4f1a212cc72818\", \n            \"downloads\": 201378, \n            \"filename\": \"requesocks-0.10.8.tar.gz\", \n            \"packagetype\": \"sdist\", \n            \"path\": \"2b/33/0ecebf3903181cd74d9ff885da4029f59e5f61c99dc66f39c5a170a66d27/requesocks-0.10.8.tar.gz\", \n            \"size\": 68130\n        }\n    ]\n}"}, "headers": {"Server": ["nginx/1.10.3"], "Content-Type": ["application/json; charset=\"UTF-8\""], "Content-Disposition": ["inline"], "X-PYPI-LAST-SERIAL": ["2861888"], "Cache-Control": ["max-age=600, public"], "Access-Control-Allow-Origin": ["*"], "X-Clacks-Overhead": ["GNU Terry Pratchett"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains"], "Via": ["1.1 varnish", "1.1 varnish"], "Fastly-Debug-Digest": ["67b8707a33429cfc4f6c2a50a41d0d10da366a75ce713cc674123b16f2f7f8e1"], "Content-Length": ["15702"], "Accept-Ranges": ["bytes"], "Date": ["Wed, 10 May 2017 07:07:40 GMT"], "Age": ["57266"], "Connection": ["keep-alive"], "X-Served-By": ["cache-iad2131-IAD, cache-hhn1521-HHN"], "X-Cache": ["HIT, HIT"], "X-Cache-Hits": ["10, 1"], "X-Timer": ["S1494400060.142765,VS0,VE1"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Content-Type-Options": ["nosniff"], "X-Permitted-Cross-Domain-Policies": ["none"]}, "status": {"code": 200, "message": "OK"}, "url": "https://pypi.python.org/pypi/requesocks/json"}, "recorded_at": "2017-05-10T07:07:40"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "http://github.com/kennethreitz/requests"}, "response": {"body": {"encoding": null, "string": ""}, "headers": {"Content-length": ["0"], "Location": ["https://github.com/kennethreitz/requests"], "Connection": ["close"]}, "status": {"code": 301, "message": "Moved Permanently"}, "url": "http://github.com/kennethreitz/requests"}, "recorded_at": "2017-05-10T07:07:40"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://github.com/kennethreitz/requests"}, "response": {"body": {"encoding": "utf-8", "base64_string": ""}, "headers": {"Server": ["GitHub.com"], "Date": ["Wed, 10 May 2017 07:07:40 GMT"], "Content-Type": ["text/html; charset=utf-8"], "Transfer-Encoding": ["chunked"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Vary": ["X-PJAX", "Accept-Encoding"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Set-Cookie": ["logged_in=no; domain=.github.com; path=/; expires=Sun, 10 May 2037 07:07:40 -0000; secure; HttpOnly", "_gh_sess=eyJzZXNzaW9uX2lkIjoiNGM4ZGQ3Zjk3MTdlN2QxOTc4YTc0ZDFmN2U0NjdlZDMiLCJzcHlfcmVwbyI6Imtlbm5ldGhyZWl0ei9yZXF1ZXN0cyIsInNweV9yZXBvX2F0IjoxNDk0NDAwMDYwLCJfY3NyZl90b2tlbiI6ImdOSjVUS2t0K1NjQzExY1hPK3NtRXBnS3c5Z0JOdVpSdVNZeFFzb1MyMkE9IiwiZmxhc2giOnsiZGlzY2FyZCI6WyJhbmFseXRpY3NfbG9jYXRpb24iXSwiZmxhc2hlcyI6eyJhbmFseXRpY3NfbG9jYXRpb24iOiIvPHVzZXItbmFtZT4vPHJlcG8tbmFtZT4ifX19--bdf64392c490ab32bad2673dde692718672055ab; path=/; secure; HttpOnly"], "X-Request-Id": ["14c571222ac05f1dffdf628d617bc636"], "X-Runtime": ["0.151486"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Served-By": ["e8139beab029364506236105cf49728b"], "Content-Encoding": ["gzip"], "X-GitHub-Request-Id": ["C2B0:1C716:89EF7B8:CBF5065:5912BC3C"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/kennethreitz/requests"}, "recorded_at": "2017-05-10T07:07:41"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.12.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "Cookie": ["logged_in=no; _gh_sess=eyJzZXNzaW9uX2lkIjoiNGM4ZGQ3Zjk3MTdlN2QxOTc4YTc0ZDFmN2U0NjdlZDMiLCJzcHlfcmVwbyI6Imtlbm5ldGhyZWl0ei9yZXF1ZXN0cyIsInNweV9yZXBvX2F0IjoxNDk0NDAwMDYwLCJfY3NyZl90b2tlbiI6ImdOSjVUS2t0K1NjQzExY1hPK3NtRXBnS3c5Z0JOdVpSdVNZeFFzb1MyMkE9IiwiZmxhc2giOnsiZGlzY2FyZCI6WyJhbmFseXRpY3NfbG9jYXRpb24iXSwiZmxhc2hlcyI6eyJhbmFseXRpY3NfbG9jYXRpb24iOiIvPHVzZXItbmFtZT4vPHJlcG8tbmFtZT4ifX19--bdf64392c490ab32bad2673dde692718672055ab"]}, "method": "GET", "uri": "https://github.com/shazow/urllib3"}, "response": {"body": {"encoding": "utf-8", "base64_string": ""}, "headers": {"Server": ["GitHub.com"], "Date": ["Wed, 10 May 2017 07:07:41 GMT"], "Content-Type": ["text/html; charset=utf-8"], "Transfer-Encoding": ["chunked"], "Status": ["200 OK"], "Cache-Control": ["no-cache"], "Vary": ["X-PJAX", "Accept-Encoding"], "X-UA-Compatible": ["IE=Edge,chrome=1"], "Set-Cookie": ["_gh_sess=eyJzZXNzaW9uX2lkIjoiNGM4ZGQ3Zjk3MTdlN2QxOTc4YTc0ZDFmN2U0NjdlZDMiLCJzcHlfcmVwbyI6InNoYXpvdy91cmxsaWIzIiwic3B5X3JlcG9fYXQiOjE0OTQ0MDAwNjEsIl9jc3JmX3Rva2VuIjoiZ05KNVRLa3QrU2NDMTFjWE8rc21FcGdLdzlnQk51WlJ1U1l4UXNvUzIyQT0iLCJmbGFzaCI6eyJkaXNjYXJkIjpbImFuYWx5dGljc19sb2NhdGlvbiJdLCJmbGFzaGVzIjp7ImFuYWx5dGljc19sb2NhdGlvbiI6Ii88dXNlci1uYW1lPi88cmVwby1uYW1lPiJ9fX0%3D--3cddd1aa10c5c9b03906ce71b6f99ccd9e5f58b0; path=/; secure; HttpOnly"], "X-Request-Id": ["c9d855ee625f0df6c4c7ee6dd9f916b4"], "X-Runtime": ["0.124254"], "Content-Security-Policy": ["default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com"], "Strict-Transport-Security": ["max-age=31536000; includeSubdomains; preload"], "Public-Key-Pins": ["max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Served-By": ["9835a984a05caa405eb61faaa1546741"], "Content-Encoding": ["gzip"], "X-GitHub-Request-Id": ["C2B0:1C716:89EF82E:CBF50CE:5912BC3C"]}, "status": {"code": 200, "message": "OK"}, "url": "https://github.com/shazow/urllib3"}, "recorded_at": "2017-05-10T07:07:41"}], "recorded_with": "betamax/0.8.0"}